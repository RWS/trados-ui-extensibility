{
  "openapi": "3.0.1",
  "info": {
    "title": "RWS Language Cloud API",
    "description": "The RWS Language Cloud public API.",
    "version": "1.0",
    "contact": {

    }
  },
  "servers": [
    {
      "url": "***REMOVED***"
    }
  ],
  "tags": [
    {
      "name": "Account",
      "description": "Account"
    },
    {
      "name": "Custom Field",
      "description": "Custom Field"
    },
    {
      "name": "Customer",
      "description": "Customer"
    },
    {
      "name": "File",
      "description": "File"
    },
    {
      "name": "File Processing Configuration",
      "description": "File Processing Configuration"
    },
    {
      "name": "Folder",
      "description": "Folder"
    },
    {
      "name": "Group",
      "description": "Group"
    },
    {
      "name": "Language",
      "description": "Language"
    },
    {
      "name": "Language Processing",
      "description": "Language Processing"
    },
    {
      "name": "Machine Translation",
      "description": "Machine Translation"
    },
    {
      "name": "Pricing Model",
      "description": "Pricing Model"
    },
    {
      "name": "Project",
      "description": "Project"
    },
    {
      "name": "Project Group",
      "description": "Project Group"
    },
    {
      "name": "Project Template",
      "description": "Project Template"
    },
    {
      "name": "Public Keys",
      "description": "Public Keys"
    },
    {
      "name": "Quote",
      "description": "Quote"
    },
    {
      "name": "Rate Limits",
      "description": "Rate Limits"
    },
    {
      "name": "Schedule Template",
      "description": "Schedule Template"
    },
    {
      "name": "Source File",
      "description": "Source File"
    },
    {
      "name": "Target File",
      "description": "Target File"
    },
    {
      "name": "Task",
      "description": "Task"
    },
    {
      "name": "Task Type",
      "description": "Task Type"
    },
    {
      "name": "Termbase",
      "description": "Termbase"
    },
    {
      "name": "Termbase Export",
      "description": "Termbase Export"
    },
    {
      "name": "Termbase Import",
      "description": "Termbase Import"
    },
    {
      "name": "Termbase Template",
      "description": "Termbase Template"
    },
    {
      "name": "TQA Profile",
      "description": "TQA Profile"
    },
    {
      "name": "Translation Engine",
      "description": "Translation Engine"
    },
    {
      "name": "Translation Memory",
      "description": "Translation Memory"
    },
    {
      "name": "Translation Memory Export",
      "description": "Translation Memory Export"
    },
    {
      "name": "Translation Memory Import",
      "description": "Translation Memory Import"
    },
    {
      "name": "User",
      "description": "User"
    },
    {
      "name": "Workflow",
      "description": "Workflow"
    }
  ],
  "paths": {
    "/accounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "List my Accounts",
        "description": "Retrieves the accounts the authenticated user is part of. \nNote: for service users only the account where the user is defined is returned.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-my-accounts-response"
                },
                "examples": {
                  "ListAccountsWithDefaultFields": {
                    "value": {
                      "itemCount": 2,
                      "items": [
                        {
                          "id": "test-account-id-1",
                          "name": "test-account-name-1"
                        },
                        {
                          "id": "test-account-id-1",
                          "name": "test-account-name-2"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "message": "test-unauthorized-error-message",
                      "errorCode": "test-unauthorized-error-code",
                      "name": "test-unauthorized-error-name",
                      "value": "test-unauthorized-error-value",
                      "details": [
                        {
                          "name": "test-unauthorized-error-details-message",
                          "code": "test-unauthorized-error-details-code",
                          "value": "test-unauthorized-error-details-value"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListMyAccounts"
      }
    },
    "/customers/{customerId}": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update Customer",
        "description": "Updates a customer by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customer-update-request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content\n",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes: \n* “invalid”: Invalid input in “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.\n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes: \n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": duplicate name of a customer is not allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "UpdateCustomer"
      },
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get Customer",
        "description": "Retrieves a customer by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes: \n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.\n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes: \n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetCustomer"
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete Customer",
        "description": "Deletes a customer.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to delete the customer.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the customer could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"conflict\": there might be resources that are still `attached`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "DeleteCustomer"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/customerId"
        }
      ]
    },
    "/customers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "List Customers",
        "description": "Retrieves a list of all the customers in an account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-customers-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of it's dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListCustomers"
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create Customer",
        "description": "Create customer in a tenant.\n\nFor adding a customer to a tenant the authenticated user must have 'Create Customer' permission.\n\nTo also create an account for the key contact, you need to have the specific entitlements.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customer-create-request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The customer was successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                },
                "examples": {
                  "minimal": {
                    "value": {
                      "id": "string"
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error responses:\n\n* “invalid”: invalid input specified in the error details.\n* \"empty\": empty input for required field specified in the error details.\n* \"maxSize\": The maximum size was exceeded for the value mentioned in the \"name\" field.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n\"forbidden\": \n- The authenticated user is not allowed to create a customer or if you intend to create the key contact account, you might not have sufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "408": {
            "description": "Error responses:\n\n  * \"timeout\": The request took longer than expected. The system might be overloaded. You might try again.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "409": {
            "description": "Error responses:\n\n* “duplicate”: duplicate value for the field mentioned in the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "CreateCustomer"
      }
    },
    "/custom-field-definitions": {
      "get": {
        "summary": "List Custom Field Definitions",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-custom-field-definitions-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of it's dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListCustomFields",
        "description": "Retrieves a list of all the custom field definitions.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "tags": [
          "Custom Field"
        ]
      }
    },
    "/custom-field-definitions/{customFieldDefinitionId}": {
      "get": {
        "summary": "Get Custom Field Definition",
        "tags": [
          "Custom Field"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/custom-field-definition"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to get the custom field definition.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetCustomField",
        "description": "Retrieves a Custom Field by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/customFieldDefinitionId"
        }
      ]
    },
    "/file-processing-configurations/{fileProcessingConfigurationId}": {
      "get": {
        "tags": [
          "File Processing Configuration"
        ],
        "summary": "Get File Processing Configuration",
        "description": "Retrieves a file processing configuration by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file-processing-configuration"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": not allowed to read file processing configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes\n* \"notFound\": file processing configuration could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetFileProcessingConfiguration"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/fileProcessingConfigurationId"
        }
      ]
    },
    "/file-processing-configurations": {
      "get": {
        "tags": [
          "File Processing Configuration"
        ],
        "summary": "List File Processing Configurations",
        "description": "Retrieves a list of all the file processing configurations in an account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-file-processing-configurations-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  the requested entity or one of it's dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListFileProcessingConfigurations"
      }
    },
    "/file-processing-configurations/{fileProcessingConfigurationId}/file-type-settings/{fileTypeSettingId}": {
      "get": {
        "tags": [
          "File Processing Configuration"
        ],
        "summary": "Get File Type Setting",
        "description": "Retrieves a file type setting by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file-type-setting"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": not allowed to read file type setting.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes\n* \"notFound\": file type setting could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetFileTypeSetting"
      },
      "parameters": [
        {
          "name": "fileProcessingConfigurationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The file processing configuration identifier."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "fileTypeSettingId",
          "in": "path",
          "required": true,
          "description": "The file type setting identifier."
        }
      ]
    },
    "/file-processing-configurations/{fileProcessingConfigurationId}/file-type-settings": {
      "get": {
        "tags": [
          "File Processing Configuration"
        ],
        "summary": "List File Type Settings",
        "description": "Retrieves a list of all the file type settings in a file processing configuration.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-file-type-settings-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListFileTypeSettings"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "fileProcessingConfigurationId",
          "in": "path",
          "required": true,
          "description": "The file processing configuration identifier."
        }
      ]
    },
    "/files": {
      "post": {
        "summary": "Upload Zip File",
        "description": "Uploads an archive with source files in a .zip format, to be extracted and used at project creation.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.",
        "operationId": "UploadZipFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "format": "byte",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The .zip file to be uploaded (binary string).  "
                  }
                }
              }
            }
          },
          "description": "For details on multipart requests please see [this article](../docs/How-to-multipart.md)."
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file-upload-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "In case of:\n* empty or missing file in request\n* no valid multipart request\n* other file attachment extension than \".zip\"",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "tags": [
          "File"
        ]
      },
      "parameters": []
    },
    "/files/{fileId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "fileId",
          "in": "path",
          "required": true,
          "description": "The uploaded file id"
        }
      ],
      "get": {
        "summary": "Poll Upload Zip File",
        "operationId": "PollUploadZipFile",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file-metadata-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to read uploaded files.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the file could not be found by id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "description": "Monitors the unzipping operation for a previously uploaded archive and gets details on the extracted files.",
        "tags": [
          "File"
        ]
      }
    },
    "/folders/{folderId}": {
      "get": {
        "tags": [
          "Folder"
        ],
        "summary": "Get Folder",
        "description": "Retrieves a folder by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/folder"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the folder.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/folder"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the Folder could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetFolder"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/folderId"
        }
      ]
    },
    "/folders/root": {
      "get": {
        "tags": [
          "Folder"
        ],
        "summary": "Get Root Folder",
        "description": "Retrieves the Root folder in the account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/folder"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetRootFolder"
      }
    },
    "/folders": {
      "get": {
        "tags": [
          "Folder"
        ],
        "summary": "List Folders",
        "description": "Retrieves a list of all the folders in an account. Max 500.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter folders by name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-folders-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListFolders"
      }
    },
    "/groups/{groupId}": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Get Group",
        "description": "Retrieves a group by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/group"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the Group.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the Group could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetGroup"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/groupId"
        }
      ]
    },
    "/groups": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "List Groups",
        "description": "Retrieves a list of all the groups in an account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-groups-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of it's dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListGroups"
      }
    },
    "/languages": {
      "get": {
        "tags": [
          "Language"
        ],
        "summary": "List Languages",
        "description": "Retrieves a list of all the languages.\n\nThe supported values for language `type` filter are: \"all\", \"specific\" or \"neutral\".\\\nThe \"neutral\" languages are the generic languages, e.g.: en -\u003E English.\\\nThe \"specific\" languages are the sub-languages, e.g.: en-150 -\u003E English (Europe), en-us -\u003E English (United States).",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "name": "languageCodes",
            "in": "query",
            "description": "Filter by language codes.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by type.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "specific",
                "neutral"
              ],
              "example": "specific"
            }
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-languages-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "operationId": "ListLanguages"
      }
    },
    "/language-processing-rules": {
      "get": {
        "summary": "List Language Processing Rules",
        "tags": [
          "Language Processing"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-language-processing-rules"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of it's dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListLanguageProcessingRules",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "description": "Returns a list of Language Processing Rules."
      }
    },
    "/language-processing-rules/{languageProcessingRuleId}": {
      "get": {
        "summary": "Get Language Processing Rule",
        "tags": [
          "Language Processing"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/language-processing-rule"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetLanguageProcessingRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "description": "Returns a Language Processing Rule by identifier."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "languageProcessingRuleId",
          "in": "path",
          "required": true,
          "description": "The language processing rule identifier"
        }
      ]
    },
    "/machine-translation": {
      "parameters": [],
      "get": {
        "summary": "List Machine Translations",
        "operationId": "ListMachineTranslations",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-machine-translations-response"
                }
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "description": "Retrieves a list of machine translations that can be used in a translation engine.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sourceLanguage",
            "required": true,
            "description": "Language code expressed as generic language (example: \"en\") or specific language (example: \"en-US\")"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "targetLanguage",
            "required": true,
            "description": "List of language codes separated by comma, values can be generic language code or specific language code."
          }
        ],
        "tags": [
          "Machine Translation"
        ],
        "x-stoplight": {
          "id": "pnd31f3gjids8"
        }
      }
    },
    "/pricing-models": {
      "get": {
        "tags": [
          "Pricing Model"
        ],
        "summary": "List Pricing Models",
        "description": "Retrieves a list of all the pricing models in an account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-pricing-models-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of its dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListPricingModels"
      }
    },
    "/pricing-models/{pricingModelId}": {
      "get": {
        "tags": [
          "Pricing Model"
        ],
        "summary": "Get Pricing Model",
        "description": "Retrieves a pricing model by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pricing-model"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the pricing model.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetPricingModel"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/pricingModelId"
        }
      ]
    },
    "/projects": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "List Projects",
        "description": "Retrieves a list of all the projects in the account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "excludeOnline",
            "description": "Excludes projects that are being worked on exclusively in the Online Editor"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "inProgress",
                "completed",
                "archived"
              ]
            },
            "in": "query",
            "name": "status",
            "description": "Filter the list of projects to projects that have this status."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2022-11-28T16:46:00.00Z"
            },
            "in": "query",
            "name": "createdFrom",
            "description": "Filter the list of of projects to projects that were created after this date and time.  \u003Cbr\u003E Accepted format: ISO-8601 `YYYY-MM-DDThh:mm:ss.sssZ`"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2022-11-28T16:46:00.00Z"
            },
            "in": "query",
            "name": "createdTo",
            "description": "Filter the list of of projects to projects that were created before this date and time.  \u003Cbr\u003E Accepted format: ISO-8601 `YYYY-MM-DDThh:mm:ss.sssZ`"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "createdBy",
            "description": "Filter the list of of projects to projects that were created by this user."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-projects-response"
                },
                "examples": {
                  "numbers": {
                    "value": {
                      "itemCount": 1,
                      "items": [
                        {
                          "id": "test-id",
                          "quote": {
                            "additionalCosts": [
                              {
                                "name": "test-additional-cost-name",
                                "count": 1,
                                "runningTotal": 1
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "missing-required-integer": {
                    "value": {
                      "items": [
                        {
                          "id": "test-id",
                          "quote": {
                            "additionalCosts": [
                              {
                                "name": "test-additional-cost-name",
                                "count": 1,
                                "runningTotal": 1
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "missing-optional-integer": {
                    "value": {
                      "itemCount": 1,
                      "items": [
                        {
                          "id": "test-id",
                          "quote": {
                            "additionalCosts": [
                              {
                                "name": "test-additional-cost-name",
                                "runningTotal": 1
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "missing-optional-double": {
                    "value": {
                      "itemCount": 1,
                      "items": [
                        {
                          "id": "test-id",
                          "quote": {
                            "additionalCosts": [
                              {
                                "name": "test-additional-cost-name",
                                "count": 1
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of its dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListProjects"
      },
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Create Project",
        "description": "Creates a new project.\n\nWhen creating a project using a project template that supports multiple source languages, you must supply the `languageDirections`.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when creating projects.\n\nThe values from a selected project template will take precedence over the individual resources when creating a new project.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project-create-request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project"
                },
                "examples": {
                  "minimal": {
                    "value": {
                      "id": "string"
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"empty\": Empty mandatory value mentioned in the \"name\" field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.\n* \"missing\": Missing required field for the value mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n\"forbidden\": \n- The authenticated user is not allowed to create the project in the specified location.\n- Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "CreateProject"
      }
    },
    "/projects/{projectId}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get Project",
        "description": "Retrieves a project by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project"
                },
                "examples": {
                  "valid-response": {
                    "value": {
                      "id": "test-id",
                      "name": "test-name",
                      "description": "test-description",
                      "dueBy": "2042-07-28T11:13:36.000Z",
                      "createdAt": "2021-07-28T11:13:36.000Z",
                      "status": "completed",
                      "languageDirections": [
                        {
                          "id": "language-direction-id",
                          "sourceLanguage": {
                            "languageCode": "test-source-languageCode",
                            "isNeutral": false
                          },
                          "targetLanguage": {
                            "languageCode": "test-target-languageCode",
                            "isNeutral": true
                          }
                        }
                      ]
                    }
                  },
                  "missing-required-string": {
                    "value": {
                      "name": "test-name",
                      "description": "test-description",
                      "dueBy": "2042-07-28T11:13:36.000Z",
                      "createdAt": "2021-07-28T11:13:36.000Z",
                      "status": "completed"
                    }
                  },
                  "missing-optional-string": {
                    "value": {
                      "id": "test-id",
                      "description": "test-description",
                      "dueBy": "2042-07-28T11:13:36.000Z",
                      "createdAt": "2021-07-28T11:13:36.000Z",
                      "status": "completed"
                    }
                  },
                  "missing-optional-datetime": {
                    "value": {
                      "id": "test-id",
                      "name": "test-name",
                      "description": "test-description",
                      "createdAt": "2021-07-28T11:13:36.000Z",
                      "status": "completed"
                    }
                  },
                  "missing-optional-enum": {
                    "value": {
                      "id": "test-id",
                      "name": "test-name",
                      "description": "test-description",
                      "dueBy": "2042-07-28T11:13:36.000Z",
                      "createdAt": "2021-07-28T11:13:36.000Z"
                    }
                  },
                  "missing-optional-boolean": {
                    "value": {
                      "id": "test-id",
                      "languageDirections": [
                        {
                          "id": "language-direction-id",
                          "sourceLanguage": {
                            "languageCode": "test-source-languageCode"
                          },
                          "targetLanguage": {
                            "languageCode": "test-target-languageCode"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetProject"
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Update Project",
        "description": "Updates the project in terms of: name, description, due date, quote, and project resources. Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386). \n\n Project rescheduling (updating dueBy) is permitted only if: \n* there is no Customer Quote Approval task in the associated flow \n* at least one Customer Quote Approval was closed(in case multiple project batches) ",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project-update-request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error responses:\n\n* “invalid”: invalid input on update quote model\n* “invalidStatus”: the quote cannot be edited, the project is in a phase which doesn't allow the quote to be edited\n* \"conflict\": the project does not have a quote to be updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to update the Project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the Project could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error responses:\n\n* “invalidStatus”: a field cannot be edited, because the project is in a status which doesn't allow the field to be edited. `details.name` will provide the field name which is not allowed to be edited.\n\n* updateNotAllowed: a field of the project cannot be edited before the completion of customer approval.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "UpdateProject"
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Delete Project",
        "description": "Deletes a project.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to delete the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "DeleteProject"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        }
      ]
    },
    "/projects/{projectId}/configuration": {
      "get": {
        "summary": "Get Project Configuration",
        "description": "Get the configuration settings of an existing project.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project-configuration"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to get the project configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetProjectConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "tags": [
          "Project"
        ]
      },
      "put": {
        "summary": "Update Project Configuration",
        "description": "Updates the configuration settings for an existing project.",
        "operationId": "UpdateProjectConfiguration",
        "tags": [
          "Project"
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to update the project configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project-configuration-request"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        }
      ]
    },
    "/projects/{projectId}/start": {
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Start Project",
        "description": "Starts a project. Translatable files should be uploaded before starting the project. If the action is executed on an already started project, the new translatable files should be uploaded first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter  mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to start the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"invalidStatus\": the project's status doesn't permit the start operation.\n* \"missingTranslatableFile\": there was no translatable file attached to the project.\n* \"missingWorkflow\": there was no workflow associated with the project.\n* \"invalidWorkflow\" : the workflow associated with the project is invalid or has errors.\n* \"missingConfigurations\": not all manual task templates have configurations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "StartProject"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        }
      ]
    },
    "/projects/{projectId}/complete": {
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Complete Project",
        "description": "Marks a project as \"completed\".",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to complete the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "CompleteProject"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        }
      ]
    },
    "/projects/{projectId}/source-files": {
      "get": {
        "tags": [
          "Source File"
        ],
        "summary": "List Source Files",
        "description": "Retrieves the source files in a project.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-source-files-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": not authorized to retrieve source files on the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of its dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListSourceFiles"
      },
      "post": {
        "tags": [
          "Source File"
        ],
        "summary": "Add Source File",
        "description": "Adds a source file to the project. Files can be uploaded before starting a project or after the project has started. When adding a `translatable` file after the project started, a new start project request should be performed.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.\n\n\u003E Note: The maximum character size of the sum between the `name` and the `path` fields must not exceed 255. Otherwise the request cannot be validated.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "properties",
                  "file"
                ],
                "properties": {
                  "properties": {
                    "$ref": "#/components/schemas/source-file-request"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The source file (binary string)."
                  }
                }
              }
            }
          },
          "required": true,
          "description": "For details on how to send multipart/form-data with `properties` see this [article](../docs/How-to-multipart.md)."
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/source-file"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error responses:\n* \"invalid\": invalid input on for the value mentioned in the “name” field on the error response.\n* \"empty\": missing input for the value mentioned in the \"name\" field on the error response.\n* \"maxSize\": maximum size exceeded for the value mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to add a source file to the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": duplicate source file name inside a project is not allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "AddSourceFile"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        }
      ],
      "put": {
        "tags": [
          "Source File"
        ],
        "summary": "Update Source Files",
        "operationId": "UpdateSourceFiles",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error responses:\n* \"invalid\": invalid input for the value mentioned in the “name” field on the error response.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - the authenticated user is not allowed to update the source file.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project could not be found by identifier.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": a file with the same name already exists."
          }
        },
        "description": "Updates multiple source files. If any of the files fails to be updated, an error will be returned for each file. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/source-files-update-request"
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/source-files/attach-files": {
      "post": {
        "tags": [
          "Source File"
        ],
        "summary": "Attach Source Files",
        "description": "Adds multiple source files to the project. Files must be uploaded before attaching them to a project. When a file is attached after the project was started, a new start project request should be performed.\n\n\n\u003E Note: The maximum character size of the sum between the `name` and the `path` fields must not exceed 255. Otherwise the request cannot be validated.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/source-file-attachment-request"
              }
            }
          },
          "required": true,
          "description": ""
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/source-file-attachment-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": invalid input on for the value mentioned in the “name” field on the error response.\n* \"empty\": missing input for the value mentioned in the \"name\" field on the error response.\n* \"maxSize\": maximum size exceeded for the value mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to attach a source file on the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": duplicate source file name inside a project is not allowed.\n* \"duplicate\": duplicate fileUrl inside a project is not allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "AddSourceFiles"
      },
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The project identifier."
        }
      ]
    },
    "/projects/{projectId}/source-files/{sourceFileId}": {
      "get": {
        "tags": [
          "Source File"
        ],
        "summary": "Get Source File",
        "description": "Retrieves a source file from the project.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/source-file"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error responses:\n* \"invalid\": invalid input for the value mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project or the source file could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetSourceFile"
      },
      "put": {
        "tags": [
          "Source File"
        ],
        "summary": "Update Source File",
        "operationId": "UpdateSourceFile",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error responses:\n* \"invalid\": invalid input for the value mentioned in the “name” field on the error response.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - the authenticated user is not allowed to update the target file.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project or the source file could not be found by identifier.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": a file with the same name already exists."
          }
        },
        "description": "Updates a source file.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/source-file-rename-request"
              }
            }
          }
        },
        "parameters": []
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        },
        {
          "$ref": "#/components/parameters/sourceFileId"
        }
      ]
    },
    "/projects/{projectId}/source-files/{sourceFileId}/versions": {
      "get": {
        "tags": [
          "Source File"
        ],
        "summary": "List Source File Versions",
        "description": "Retrieves all the versions of a source file.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-source-file-versions-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to retrieve the source file versions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project or the source file could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListSourceFileVersions"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        },
        {
          "$ref": "#/components/parameters/sourceFileId"
        }
      ]
    },
    "/tasks/{taskId}/source-files/{sourceFileId}/versions": {
      "parameters": [
        {
          "name": "sourceFileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The source file identifier."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "taskId",
          "in": "path",
          "required": true,
          "description": "The task identifier."
        }
      ],
      "post": {
        "summary": "Add Source File Version",
        "tags": [
          "Source File"
        ],
        "operationId": "AddSourceFileVersion",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/source-file-version-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"invalid\": the provided document is not a valid BCM file.\n* \"invalid\": invalid file format\n* \"multiPartOrder\": the multipart order in body is not correct. `properties` must be the first, followed by `file`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": \\\n    \\- the specified task or the source file was not found.\\\n    \\- the request is performed in a task that doesn't have the input file type as source file and is used a target file identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"noOwner\": the task has no owner.\n* \"differentOwner\": the authenticated user is not the owner of the task.\n* \"differentServiceUserOwner\": the authenticated service user is not the owner of the task.\n* \"taskCompleted\": adding source file version is not allowed when the task is completed.\n* \"unsupported\" : you cannot add a source file version for this task.\n* \"duplicate\": a file with the same name already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "properties",
                  "file"
                ],
                "properties": {
                  "properties": {
                    "$ref": "#/components/schemas/source-file-version-properties-create-request",
                    "description": "Source file properties sent as a JSON inside a text part."
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The source file (binary string)."
                  }
                }
              }
            }
          },
          "description": "For details on multipart requests please see [this article](../docs/How-to-multipart.md)."
        },
        "description": "Adds a new version of the source file in [BCM](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html) or native format. More information about file formats can be found on the [File formats](../docs/File-formats.md) page.\n\nThe version is added on the task represented by `taskId`. To successfully  execute the add operation the task should already be assigned and accepted by a user. If the task is automatic, it's possible to add a source file version only when the status of task is `inProgress`.\n\nThe file versions added need to respect the output file type declared by the task type of the enclosing task. On the [Rules for sequencing tasks correctly](https://docs.rws.com/791595/885137/trados-enterprise/rules-for-sequencing-tasks-correctly) page from the official RWS Documentation Center, you can find out what output file type is supported by each task.\n\nFor adding a source file version using an extension task, the configuration of the task must declare the `scope`'s value as \"file\".\n\nIf the file type of the new added file is different than the supported source file type, the new `fileTypeSettingsId` must be specified in the body or an update of file type should be performed after the add operation, using the [Update Source File Properties](../reference/Public-API.v1.json/paths/~1tasks~1{taskId}~1source-files~1{sourceFileId}/put).\n\nThe value of `fileTypeSettingsId` is one of the identifiers listed by the [List File Type Settings](../reference/Public-API.v1.json/paths/~1file-processing-configurations~1{fileProcessingConfigurationId}~1file-type-settings/get) endpoint.\n\nThe [List File Type Settings](../reference/Public-API.v1.json/paths/~1file-processing-configurations~1{fileProcessingConfigurationId}~1file-type-settings/get) endpoint must be called with the File Processing Configuration identifier of your project.\n\nThe File Processing Configuration of your project can be retrieved from [Get Project](../reference/Public-API.v1.json/paths/~1projects~1{projectId}/get) endpoint.\n\nThe multipart parameters in the body should respect and strictly follow the order specified in our documentation. \n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when adding files.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ]
      }
    },
    "/projects/{projectId}/source-files/{sourceFileId}/versions/{fileVersionId}/download": {
      "get": {
        "tags": [
          "Source File"
        ],
        "summary": "Download Source File Version",
        "description": "Downloads a source file version.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project, the source file or the file version could not be found by identifier.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "422": {
            "description": "error codes:\n* \"maliciousContent\": the file contains malicious content. The infected file cannot be downloaded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "x-codegen-download": true,
        "operationId": "DownloadSourceFileVersion"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        },
        {
          "$ref": "#/components/parameters/sourceFileId"
        },
        {
          "$ref": "#/components/parameters/fileVersionId"
        }
      ]
    },
    "/tasks/{taskId}/source-files/{sourceFileId}": {
      "get": {
        "tags": [
          "Source File"
        ],
        "summary": "Get Source File Properties",
        "description": "Retrieves the properties for a source file.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/source-file-properties-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the task or source file could not be found by id.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetSourceFileProperties"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "taskId",
          "in": "path",
          "required": true,
          "description": "The task identifier."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "sourceFileId",
          "in": "path",
          "required": true,
          "description": "The source file identifier."
        }
      ],
      "put": {
        "summary": "Update Source File Properties",
        "tags": [
          "Source File"
        ],
        "operationId": "UpdateSourceProperties",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error responses:\n* “invalid”: invalid input on update source file properties.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to update the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": - the specified task or the source file was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"noOwner\": the task has no owner.\n* \"differentOwner\": the authenticated user is not the owner of the task.\n* \"taskCompleted\": updating the source file properties is not allowed when the task is completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Updates the properties of the source file.\n\n\nThe value of `fileTypeSettingsId` should be one of the identifiers listed by the [List File Type Settings](../reference/Public-API.v1.json/paths/~1file-processing-configurations~1{fileProcessingConfigurationId}~1file-type-settings/get)  endpoint called with an identifier of a File Processing Configuration that exists on the project. The list of File Processing Configurations from a project can be retrieved by using the [List File Processing Configurations](../reference/Public-API.v1.json/paths/~1file-processing-configurations/get) endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/source-file-properties-update-request"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ]
      }
    },
    "/projects/{projectId}/target-files/{targetFileId}": {
      "get": {
        "tags": [
          "Target File"
        ],
        "summary": "Get Target File",
        "description": "Retrieves a target file from a project.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/target-file"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project or the target file could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetTargetFile"
      },
      "put": {
        "tags": [
          "Target File"
        ],
        "summary": "Update Target File",
        "operationId": "UpdateTargetFile",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error responses:\n* \"invalid\": invalid input for the value mentioned in the “name” field on the error response.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - the authenticated user is not allowed to update the target file.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the target file could not be found by identifier.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": a file with the same name already exists."
          }
        },
        "description": "Updates a target file.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/target-file-rename-request"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        },
        {
          "$ref": "#/components/parameters/targetFileId"
        }
      ]
    },
    "/projects/{projectId}/target-files": {
      "get": {
        "tags": [
          "Target File"
        ],
        "summary": "List Target Files",
        "description": "Retrieves the target files for a project.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "name": "targetFileIds",
            "in": "query",
            "description": "Filter target files by identifiers.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sourceFileIds",
            "in": "query",
            "description": "Filter target files by the identifiers of the source file they were generated from.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-target-files-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the target files on the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of its dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListTargetFiles"
      },
      "put": {
        "tags": [
          "Target File"
        ],
        "summary": "Update Target Files",
        "operationId": "UpdateTargetFiles",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error responses:\n* \"invalid\": invalid input for the value mentioned in the “name” field on the error response.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - the authenticated user is not allowed to update the file.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the target file could not be found by identifier.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": a file with the same name already exists."
          }
        },
        "description": "Updates multiple target files. If any of the files fails to be updated, an error will be returned for each file. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/target-files-update-request"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        }
      ]
    },
    "/projects/{projectId}/target-files/{targetFileId}/versions/{fileVersionId}": {
      "get": {
        "tags": [
          "Target File"
        ],
        "summary": "Get Target File Version",
        "description": "Retrieves one version of a target file.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/target-file-version"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project, the target file or its version could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetTargetFileVersion"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        },
        {
          "$ref": "#/components/parameters/targetFileId"
        },
        {
          "$ref": "#/components/parameters/fileVersionId"
        }
      ]
    },
    "/projects/{projectId}/target-files/{targetFileId}/versions": {
      "get": {
        "tags": [
          "Target File"
        ],
        "summary": "List Target File Versions",
        "description": "Retrieves the versions of a target file.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-target-file-versions-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to retrieve versions on the target file.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project or the target file could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListTargetFileVersions"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        },
        {
          "$ref": "#/components/parameters/targetFileId"
        }
      ]
    },
    "/projects/{projectId}/target-files/{targetFileId}/versions/{fileVersionId}/exports": {
      "post": {
        "tags": [
          "Target File"
        ],
        "summary": "Export Target File Version",
        "description": "Generates an asynchronous export operation. Use the [Get Target File Version Export](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1{fileVersionId}~1exports~1{exportId}/get) endpoint to poll until the export is completed. Used only for [BCM](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html) file versions.\n\nThis operation triggers a conversion of the BCM target file version in a native or SDLXLIFF format, based on the value of the `format` query parameter used.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/export-format"
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file-version-export"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to export the target file version.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project, the target file or the version could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"invalidType\": The type of the target file doesn't allow the export operation.\n* \"conflict\": A target file version export is already in progress.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ExportTargetFileVersion"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        },
        {
          "$ref": "#/components/parameters/targetFileId"
        },
        {
          "$ref": "#/components/parameters/fileVersionId"
        }
      ]
    },
    "/projects/{projectId}/target-files/{targetFileId}/versions/{fileVersionId}/exports/{exportId}": {
      "get": {
        "tags": [
          "Target File"
        ],
        "summary": "Poll Target File Version Export",
        "description": "Polls a target file version via an export operation. The new version can be downloaded once the status is \"completed\".",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file-version-export"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to retrieve the export.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "PollTargetFileVersionExport"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        },
        {
          "$ref": "#/components/parameters/targetFileId"
        },
        {
          "$ref": "#/components/parameters/fileVersionId"
        },
        {
          "$ref": "#/components/parameters/exportId"
        }
      ]
    },
    "/projects/{projectId}/target-files/{targetFileId}/versions/{fileVersionId}/exports/{exportId}/download": {
      "get": {
        "tags": [
          "Target File"
        ],
        "summary": "Download Exported Target File Version",
        "description": "Downloads a completed target file version via an export operation.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": not allowed to download the exported target file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"invalidStatus\": the export is not completed\n* \"conflict\": the export is not in a downloadable state due to another export, or the workflow has progressed since this export was requested",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "x-codegen-download": true,
        "operationId": "DownloadExportedTargetFileVersion"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        },
        {
          "$ref": "#/components/parameters/targetFileId"
        },
        {
          "$ref": "#/components/parameters/fileVersionId"
        },
        {
          "$ref": "#/components/parameters/exportId"
        }
      ]
    },
    "/projects/{projectId}/target-files/{targetFileId}/versions/{fileVersionId}/download": {
      "get": {
        "tags": [
          "Target File"
        ],
        "summary": "Download Target File Version",
        "description": "Downloads the file version (native or BCM). \n\nIf the `fileVersionId` path parameter represents a native file version, the native file will be downloaded. If the `fileVersionId` is an identifier of a version in [BCM format](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html), the BCM file will be downloaded.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": not allowed to download the file version.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the file version could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "error codes:\n* \"invalidType\": the type of the file version cannot be downloaded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "422": {
            "description": "error codes:\n* \"maliciousContent\": the file contains malicious content. The infected file cannot be downloaded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "x-codegen-download": true,
        "operationId": "DownloadFileVersion"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        },
        {
          "$ref": "#/components/parameters/targetFileId"
        },
        {
          "$ref": "#/components/parameters/fileVersionId"
        }
      ]
    },
    "/projects/{projectId}/target-files/{targetFileId}/versions/imports": {
      "post": {
        "tags": [
          "Target File"
        ],
        "summary": "Import Target File Version",
        "description": "Generates an asynchronous import operation. Use [Poll Target File Version Import endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1imports~1{importId}/get) to poll until the import is completed. Only `sdlxliff` files can be imported.\n\nImport should be used when a file is downloaded as an `sdlxliff`, processed and then, replaced. \nThe import operation triggers internally the update of the [BCM](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html) file associated with the imported file. It should mostly be used for offline work.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The target file (binary string)."
                  }
                }
              }
            }
          },
          "required": true,
          "description": "For details on multipart requests please see [this article](../docs/How-to-multipart.md)."
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file-version-import"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid file uploaded, mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to execute operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": - the specified project or target file was not found.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body",
        "operationId": "ImportTargetFileVersion"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        },
        {
          "$ref": "#/components/parameters/targetFileId"
        }
      ]
    },
    "/projects/{projectId}/target-files/{targetFileId}/versions/imports/{importId}": {
      "get": {
        "tags": [
          "Target File"
        ],
        "summary": "Poll Target File Version Import",
        "description": "Polls a target file version via an import operation. The new version can be seen on the file versions once the status is \"completed\".",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file-version-import"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": - the specified project or target file was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "PollTargetFileVersionImport"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        },
        {
          "$ref": "#/components/parameters/targetFileId"
        },
        {
          "$ref": "#/components/parameters/importId"
        }
      ]
    },
    "/tasks/{taskId}/target-files/{targetFileId}/versions": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "taskId",
          "in": "path",
          "required": true,
          "description": "The task identifier."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "targetFileId",
          "in": "path",
          "required": true,
          "description": "The target file identifier."
        }
      ],
      "post": {
        "summary": "Add Target File Version",
        "tags": [
          "Target File"
        ],
        "operationId": "AddTargetFileVersion",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/target-file-version-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n\n* \"invalid\": invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"invalid\": the provided document is not a valid BCM file.\n* \"invalid\": invalid file format\n* \"multiPartOrder\": the multipart order in the body is not correct. The `properties` must be first and then, file.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to add a version for the target file.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": \\\n    \\-  the specified task or the target file was not found.\\\n    \\- the request is performed in a task that doesn't have the input file type as target file and is used a source file identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"noOwner\": the task has no owner.\n* \"differentOwner\": the authenticated user is not the owner of the task.\n* \"differentServiceUserOwner\": the authenticated service user is not the owner of the task.\n* \"taskCompleted\": adding target file version is not allowed when the task is completed.\n* \"duplicate\": a file with the same name already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "properties",
                  "file"
                ],
                "properties": {
                  "properties": {
                    "$ref": "#/components/schemas/target-file-version-properties-create-request",
                    "description": "Target file properties sent as a JSON inside a text part."
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The target file (binary string)."
                  }
                }
              }
            }
          },
          "description": "For details on multipart requests please see [this article](../docs/How-to-multipart.md)."
        },
        "description": "Adds a new  version of the target file. Only the `native` and `bcm` file formats are accepted. For the `sdlxliff` files, you should use the [Import Target File endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1target-files~1{targetFileId}~1versions~1imports/post). More information about file formats can be found on the [File formats](../docs/File-formats.md) page. Additional details on BCM files can be found [here](https://developers.rws.com/languagecloud-api-docs/articles/BCM.NET_client_API.html).\n\nThe version is added on the task represented by `taskId`. To be able to execute the add operation the task should be assigned and accepted by user. If the task is automatic, it is possible to add a target file version only if the status is `inProgress`.\n\nThe added file versions need to respect the output file type declared by the task type of the enclosing task. On the [Rules for sequencing tasks correctly](https://docs.rws.com/791595/885137/trados-enterprise/rules-for-sequencing-tasks-correctly) page from the official RWS Documentation Center, you can find out what output file type is supported by each task.\n\nFor adding a target file version using an extension task, the configuration of the task type must declare the `scope`'s value as \"file\".\n\nThe multipart parameters in the body should respect and strictly follow the order specified in our documentation.\n\nConsider the [file and project size limit](https://docs.rws.com/791595/815967/trados-enterprise---accelerate/file-and-project-size-limit) when uploading files.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ]
      }
    },
    "/projects/{projectId}/files/{fileId}/cancel": {
      "put": {
        "summary": "Cancel Project File",
        "operationId": "CancelProjectFile",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Cancels a project file.",
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        },
        {
          "$ref": "#/components/parameters/fileId"
        }
      ]
    },
    "/projects/{projectId}/quote-report/export": {
      "post": {
        "summary": "Export Quote Report",
        "operationId": "ExportQuoteReport",
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export-quote-report-response",
                  "description": "Export quote report response.\n\nThe field is optional and will be returned only if a custom quote template is associated with the project.t.\n\nWe currently have this known issue: when the export is not using a Quote Template, the response for this call will be empty. It will be addressed in the future.e."
                }
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"conflict\": the project is in a phase which doesn’t allow the quote to be exported.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Generates an asynchronous quote export operation for the project in either PDF or Excel format. Use the [polling endpoint](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1quote-report~1export/get) to check when the export is completed.  ",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/quote-report-format"
          },
          {
            "$ref": "#/components/parameters/language-id"
          }
        ],
        "tags": [
          "Quote"
        ]
      },
      "get": {
        "summary": "Poll Quote Report Export",
        "operationId": "PollQuoteReportExport",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "inProgress",
                        "completed"
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Polls a quote report via an export operation. The quote report can be [downloaded](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1quote-report~1download/get) once the status is \"completed\". The recommended polling interval is 20 seconds. If polling does not return a success status in 20 minutes, it should be abandoned and a new export should be retried.\n\nIf the `exportId` query parameter is not provided, the polling action will return the status for the last generated export.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/quote-report-format"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "exportId",
            "description": "The export identifier."
          }
        ],
        "tags": [
          "Quote"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        }
      ]
    },
    "/projects/{projectId}/quote-report/download": {
      "get": {
        "summary": "Download Exported Quote Report",
        "operationId": "DownloadQuoteReport",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Downloads a quote report generated by the [asynchronous export operation](../reference/Public-API.v1.json/paths/~1projects~1{projectId}~1quote-report~1export/post). \n\nIf the `exportId` query parameter is not provided, the last generated export quote will be downloaded.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/quote-report-format"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "exportId",
            "description": "The export identifier."
          }
        ],
        "tags": [
          "Quote"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        }
      ]
    },
    "/projects/{projectId}/tasks": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "List Project's Tasks",
        "description": "Lists the tasks of a specific project.",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-tasks-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of its dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListProjectTasks"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectId"
        }
      ]
    },
    "/project-groups": {
      "get": {
        "tags": [
          "Project Group"
        ],
        "summary": "List Project Groups",
        "description": "Retrieves a list of all the project groups in an account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-project-groups-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\": The requested entity or one of its dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListProjectGroups"
      },
      "post": {
        "tags": [
          "Project Group"
        ],
        "summary": "Create Project Group",
        "description": "Creates a new project group.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project-group-create-request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project-group-create-response"
                },
                "examples": {

                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"minSize\": Minimum size exceeded for the value mentioned in the \"name\" field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to create the project group in the specified location.\n* \"benefitNotAvailable\": Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": Project group with the same name already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "CreateProjectGroup"
      },
      "parameters": []
    },
    "/project-groups/{projectGroupId}": {
      "get": {
        "tags": [
          "Project Group"
        ],
        "summary": "Get Project Group",
        "description": "Retrieves a project group by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project-group"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to read the project group.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The project group could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetProjectGroup"
      },
      "put": {
        "tags": [
          "Project Group"
        ],
        "summary": "Update Project Group",
        "description": "Updates the project group.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project-group-update-request"
              }
            }
          },
          "required": true,
          "description": ""
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error responses:\n\n* “invalid”: Invalid input on update project group model.\n* \"minSize\": Minimum size exceeded for the value mentioned in the \"name\" field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to update the project group.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project group could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": Project group with the same name already exists.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "operationId": "UpdateProjectGroup"
      },
      "delete": {
        "tags": [
          "Project Group"
        ],
        "summary": "Delete Project Group",
        "description": "Deletes a project group.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to delete the project group.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project group could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"conflict\": there might be projects that are still `attaching`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "DeleteProjectGroup"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "projectGroupId",
          "in": "path",
          "required": true,
          "description": "The project group identifier."
        }
      ]
    },
    "/project-groups/{projectGroupId}/projects": {
      "post": {
        "tags": [
          "Project Group"
        ],
        "summary": "Add Projects To Group",
        "description": "Adds projects to the project group.\n\nThe projects are not added instantly. To check the status use the [Get Project Group](../reference/Public-API.v1.json/paths/~1project-groups~1{projectGroupId}/get) endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/add-projects-to-group-request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/add-projects-to-group-response"
                }
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to add the projects to group.\n* \"forbidden\": The projects are not found or the authenticated user does not have acces to them.\n* \"benefitNotAvailable\": Your subscription does not include access to the requested type of benefit.\n* \"quotaReached\": The maximum number of projects allowed for your project group has already been reached.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The project group could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* “conflict”: A project with status \"detaching\" cannot be added.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "AddProjectsToGroup"
      },
      "delete": {
        "tags": [
          "Project Group"
        ],
        "summary": "Remove Projects From Group",
        "description": "Removes projects from the project group.\n\nThe projects are not removed instantly. To check the status use the [Get Project Group](../reference/Public-API.v1.json/paths/~1project-groups~1{projectGroupId}/get) endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to remove the projects from the project group.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The project group could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* “conflict”: A project with status \"attaching\" cannot be removed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "RemoveProjectsFromGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/remove-projects-from-group-request"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "projectGroupId",
          "in": "path",
          "required": true,
          "description": "The Project Group identifier."
        }
      ]
    },
    "/project-templates/{projectTemplateId}": {
      "get": {
        "tags": [
          "Project Template"
        ],
        "summary": "Get Project Template",
        "description": "Retrieves a project template by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project-template-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the project template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project template could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetProjectTemplate"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectTemplateId"
        }
      ],
      "put": {
        "summary": "Update Project Template",
        "operationId": "UpdateProjectTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project-template-update-request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to update the project template.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project template could not be found by identifier.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "description": "Updates a project template by id.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "tags": [
          "Project Template"
        ]
      },
      "delete": {
        "summary": "Delete Project Template",
        "operationId": "DeleteProjectTemplate",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the project template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the project template could not be found by identifier.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "description": "Deletes a project template by id.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "tags": [
          "Project Template"
        ]
      }
    },
    "/project-templates": {
      "get": {
        "tags": [
          "Project Template"
        ],
        "summary": "List Project Templates",
        "description": "Retrieves a list of all the project templates in an account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/name"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-project-templates-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of its dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListProjectTemplates"
      },
      "post": {
        "tags": [
          "Project Template"
        ],
        "summary": "Create Project Template",
        "description": "Creates a new project template.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project-template-create-request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project-template-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to create a project template.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": A project template with the same name already exists in the same location.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "operationId": "CreateProjectTemplate"
      }
    },
    "/rate-limits": {
      "get": {
        "tags": [
          "Rate Limits"
        ],
        "summary": "List Rate Limits",
        "description": "Retrieves a list of all rate limits applicable for an account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-rate-limits-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListRateLimits"
      }
    },
    "/schedule-templates": {
      "get": {
        "summary": "List Schedule Templates",
        "description": "Retrieves a list of all the schedule templates in an account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/name"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-schedule-templates-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of its dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListScheduleTemplates",
        "tags": [
          "Schedule Template"
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Create Schedule Template",
        "operationId": "CreateScheduleTemplate",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schedule-template"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error responses:\n\n* “invalid”: invalid input on update schedule template model.\n* \"invalidLanguage\": The language used in configurations is invalid. Check the error message for more details.\n* \"maxSize\": The maximum size was exceeded for the value mentioned in the \"name\" or in the \"description\" fields.\n* \"invalidType\": The value provided for the \"taskTypeId\" field is invalid.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to create a schedule template.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": A schedule template with the same name already exists in the same location.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Creates a new schedule template.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schedule-template-create-request"
              }
            }
          }
        },
        "tags": [
          "Schedule Template"
        ]
      }
    },
    "/schedule-templates/{scheduleTemplateId}": {
      "get": {
        "summary": "Get Schedule Template",
        "description": "Retrieves a schedule template by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schedule-template"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.\n* “empty”: Empty input for the “scheduleTemplateId” path parameter variable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the schedule template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the schedule template could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetScheduleTemplate",
        "tags": [
          "Schedule Template"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "scheduleTemplateId",
          "in": "path",
          "required": true,
          "description": "The id of the schedule template."
        }
      ],
      "delete": {
        "summary": "Delete Schedule Template",
        "operationId": "DeleteScheduleTemplate",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to delete the schedule template.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the schedule template could not be found by identifier.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "description": "Deletes a schedule template.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "tags": [
          "Schedule Template"
        ]
      },
      "put": {
        "summary": "Update Schedule Template",
        "operationId": "UpdateScheduleTemplate",
        "responses": {
          "204": {
            "description": "No content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error responses:\n\n* “invalid”: invalid input on update schedule template model.\n* \"empty\": Empty mandatory value mentioned in the \"name\" field on the error response or in “scheduleTemplateId” path variable.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" or in the \"description\" fields. \n* \"invalidType\": The value provided for the \"taskTypeId\" field is invalid.",
            "headers": {
              "X-LC-TraceId": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to update the schedule template.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the schedule template could not be found by identifier.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": A schedule template with the same name already exists in the same location.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "description": "Updates the schedule template identified by `scheduleTemplateId`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schedule-template-update-request"
              }
            }
          }
        },
        "tags": [
          "Schedule Template"
        ]
      }
    },
    "/tasks/{taskId}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get Task",
        "description": "Retrieves a task.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/task"
                },
                "examples": {
                  "simple": {
                    "value": {
                      "id": "df680285-adcd-4bda-8f79-0bba4a857287",
                      "status": "created"
                    }
                  },
                  "unexpected-enum": {
                    "value": {
                      "id": "df680285-adcd-4bda-8f79-0bba4a857287",
                      "status": "unexpectedEnumValue"
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the task.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the task could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetTask"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/taskId"
        }
      ]
    },
    "/tasks/assigned": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "List Tasks assigned to me",
        "description": "Retrieves the tasks assigned to the authenticated user.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "name": "status",
            "in": "query",
            "description": "If specified, this filters tasks by status.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-tasks-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of its dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListTasksAssignedToMe"
      }
    },
    "/tasks/{taskId}/accept": {
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Accept Task",
        "description": "Accepts a task. The authenticated user becomes the owner of the accepted task and can start work on it.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes: \n\n  * \"empty\": Empty value for variable mentioned in the \"name\" field on the error response.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"alreadyOwned\": the task is already owned\n* \"invalidStatus\": the task status doesn't permit the accept operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "AcceptTask"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/taskId"
        }
      ]
    },
    "/tasks/{taskId}/reject": {
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Reject Task",
        "description": "Rejects a task. The authenticated user will be removed from the task's list of available assignee users.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes: \n\n  * \"empty\": Empty value for variable mentioned in the \"name\" field on the error response.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the task could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"alreadyOwned\": The task is already owned. It can't be rejected.\n* \"invalidStatus\": The task status doesn't permit the reject operation.\n* \"singleAssignee\": The authenticated user is the single assignee of the task, therefore the task can't be rejected.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "RejectTask"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/taskId"
        }
      ]
    },
    "/tasks/{taskId}/complete": {
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Complete Task",
        "description": "Completes a task. The task is required to be in \"inProgress\" state and will be marked as \"completed\".",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task-complete-request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “maxSize“: Maximum size exceeded for the value mentioned in the “name“ field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to complete the task.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the task could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"invalidStatus\": The current task status doesn't permit this operation.\n* \"noOwner\": The current task was not accepted in advance.\n* \"differentOwner\": The current task is accepted by another user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "CompleteTask"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/taskId"
        }
      ]
    },
    "/tasks/{taskId}/release": {
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Release Task",
        "description": "Releases the task from its owner so that other task assignees will be able to accept it.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes: \n\n  * \"empty\": Empty value for variable mentioned in the \"name\" field on the error response.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to release the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the task could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"noOwner\": the task currently has no owner.\n* \"differentOwner\": the authenticated user is not the owner of the task.\n* \"invalidStatus\": the task's status does not permit this operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ReleaseTask"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/taskId"
        }
      ]
    },
    "/tasks/{taskId}/reclaim": {
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Reclaim Task",
        "description": "The current owner of task is removed so that other assignees can accept it. \nThe task is not reassigned automatically.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"empty\": Empty value for variable mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to reclaim the task.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the task could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"invalidStatus\": the current task's status doesn't permit this operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ReclaimTask"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/taskId"
        }
      ]
    },
    "/tasks/{taskId}/assign": {
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Assign Task",
        "description": "Assigns a task. The task assignees will be updated.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task-assign-request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to assign the task.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the task could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"invalidStatus\": the current task's status doesn't permit the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "AssignTask"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/taskId"
        }
      ]
    },
    "/task-types/{taskTypeId}": {
      "get": {
        "tags": [
          "Task Type"
        ],
        "summary": "Get Task Type",
        "description": "Retrieves a task type by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/task-type"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the task type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetTaskType"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/taskTypeId"
        }
      ]
    },
    "/task-types": {
      "get": {
        "tags": [
          "Task Type"
        ],
        "summary": "List Task Types",
        "description": "Retrieves all the task types in an account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "name": "key",
            "in": "query",
            "description": "Filter by keys.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "automatic",
            "in": "query",
            "description": "Filter by automatic or human tasks.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-task-types-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of its dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListTaskTypes"
      }
    },
    "/translation-engines/{translationEngineId}": {
      "get": {
        "tags": [
          "Translation Engine"
        ],
        "summary": "Get Translation Engine",
        "description": "Retrieves a translation engine.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/translation-engine"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n\n* \"forbidden\": - The authenticated user is not allowed to read resource.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The translation engine could not be found by identifier.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "operationId": "GetTranslationEngine"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/translationEngineId"
        }
      ],
      "put": {
        "summary": "Update Translation Engine",
        "operationId": "UpdateTranslationEngine",
        "responses": {
          "204": {
            "description": "",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"empty\": Empty input in the update translation engine model. Check error details.\n* \"invalidLanguage\": Invalid language code used in language-pair\n* \"duplicate\": Duplicate resources found for the language pair specified in the error details.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to update the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The translation memory could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n\n  * \"updateNotAllowed\": Property specified in error response can not be updated because the translation engine provided is a copy assigned to a project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Updates a translation engine. \n\nIt can be used to update a stand-alone translation engine or a project's translation engine. \nThe identifier of a project's translation engine can be retrieved only by calling [Get Project endpoint](https://sdl-language-tech.stoplight.io/docs/lcpublicapi/fd9ee0beb37ca-get-project).\n\nPay special attention that some properties can not be changed for a project's translation engine. These include: name, description, definition.languageProcessingId, and language pairs can not be added/removed from definition.languagePairDefinitions. \n\nPay special attention to how [updating works](https://languagecloud.sdl.com/lc/api-docs/updating-data-with-put).",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/translation-engine-update-request"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Translation Engine"
        ]
      }
    },
    "/translation-engines": {
      "get": {
        "tags": [
          "Translation Engine"
        ],
        "summary": "List Translation Engines",
        "description": "Retrieves all the translation engines in an account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-translation-engines-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of its dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListTranslationEngines"
      }
    },
    "/termbase-templates": {
      "get": {
        "summary": "List Termbase Templates",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-termbase-templates-response"
                },
                "examples": {
                  "termbase-templates-list": {
                    "value": {
                      "items": [
                        {
                          "id": "test-id-1",
                          "name": "test-name-1",
                          "location": {
                            "id": "test-location-id-1",
                            "name": "test-location-name-1"
                          },
                          "type": "system",
                          "languages": [
                            {
                              "languageCode": "test-language-code-1"
                            }
                          ],
                          "fields": [
                            {
                              "id": "test-field-id-1",
                              "name": "test-field-name-1",
                              "type": "system",
                              "level": "entry",
                              "dataType": "text"
                            }
                          ]
                        },
                        {
                          "id": "test-id-2",
                          "name": "test-name-2",
                          "location": {
                            "id": "test-location-id-2",
                            "name": "test-location-name-2"
                          },
                          "type": "userDefined",
                          "languages": [
                            {
                              "languageCode": "test-language-code-2"
                            }
                          ],
                          "fields": [
                            {
                              "id": "test-field-id-2",
                              "name": "test-field-name-2",
                              "type": "userDefined",
                              "level": "language",
                              "dataType": "boolean"
                            }
                          ]
                        }
                      ],
                      "itemCount": 2
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to read the resources.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of it's dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListTermbaseTemplates",
        "description": "List termbase templates.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "in": "query",
            "name": "location",
            "description": "The identifiers of the resource folders. ",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "system",
                "userDefined"
              ]
            },
            "in": "query",
            "name": "type",
            "description": "The type of the termbase template to retrieve. If not specified, both types will be returned"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          }
        ],
        "tags": [
          "Termbase Template"
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Create Termbase Template",
        "operationId": "CreateTermbaseTemplate",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termbase-template"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"empty\": Empty mandatory value mentioned in the \"name\" field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.\n* \"duplicate\": The field name must be unique within the list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to create a termbase template in the specified location.\n* \"benefitNotAvailable\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": - The specified location was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": There is already a termbase template with the same name.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "description": "Creates a new termbase template.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/termbase-template-create-request"
              }
            }
          }
        },
        "tags": [
          "Termbase Template"
        ]
      }
    },
    "/termbase-templates/{termbaseTemplateId}": {
      "get": {
        "summary": "Get Termbase Template",
        "tags": [
          "Termbase Template"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termbase-template"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n\n* \"forbidden\": - The authenticated user is not allowed to read resource\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the termbase template could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetTermbaseTemplate",
        "description": "Get a termbase template by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ]
      },
      "delete": {
        "summary": "Delete Termbase Template",
        "operationId": "DeleteTermbaseTemplate",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to delete the termbase template\n* \"benefitNotAvailable\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the termbase template could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"conflict\": cannot delete system termbase templates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Deletes a termbase template by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "tags": [
          "Termbase Template"
        ]
      },
      "put": {
        "summary": "Update Termbase Template",
        "operationId": "UpdateTermbaseTemplate",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"empty\": Empty mandatory value mentioned in the \"name\" field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.\n* \"duplicate\": The field name must be unique within the list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to update the termbase template.\n* \"benefitNotAvailable\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": There is already a termbase template with the same name.\n* \"conflict\": cannot update system termbase template",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/termbase-template-update-request"
              }
            }
          }
        },
        "description": "Updates the termbase template.",
        "tags": [
          "Termbase Template"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/termbaseTemplateId"
        }
      ]
    },
    "/termbase-templates/convert-xdt": {
      "post": {
        "summary": "Convert XDT to Termbase Structure",
        "operationId": "ConvertTermbaseTemplate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termbase-structure"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Converts a termbase definition (XDT file) to a termbase structure that will be returned in the response.\u003Cbr\u003E\nThe structure will not be stored in Language Cloud.",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The \u003Cb\u003E.xdt\u003C/b\u003E file (binary string) used for conversion."
                  }
                }
              }
            }
          },
          "description": "For details on multipart requests please see [this article](../docs/How-to-multipart.md)."
        },
        "tags": [
          "Termbase Template"
        ]
      },
      "parameters": []
    },
    "/termbases": {
      "get": {
        "summary": "List Termbases",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-termbases-response"
                },
                "examples": {
                  "termbases-list": {
                    "value": {
                      "items": [
                        {
                          "id": "test-id-1",
                          "name": "test-name-1",
                          "location": {
                            "id": "test-location-id-1",
                            "name": "test-location-name-1"
                          },
                          "termbaseStructure": {
                            "languages": [
                              {
                                "languageCode": "test-language-code-1"
                              }
                            ],
                            "fields": [
                              {
                                "id": "test-field-id-1",
                                "name": "test-field-name-1",
                                "type": "system",
                                "level": "entry",
                                "dataType": "text"
                              }
                            ]
                          },
                          "numberOfEntries": 1,
                          "status": "ready"
                        },
                        {
                          "id": "test-id-2",
                          "name": "test-name-2",
                          "location": {
                            "id": "test-location-id-2",
                            "name": "test-location-name-2"
                          },
                          "termbaseStructure": {
                            "languages": [
                              {
                                "languageCode": "test-language-code-2"
                              }
                            ],
                            "fields": [
                              {
                                "id": "test-field-id-2",
                                "name": "test-field-name-2",
                                "type": "userDefined",
                                "level": "language",
                                "dataType": "boolean"
                              }
                            ]
                          },
                          "numberOfEntries": 2,
                          "status": "ready"
                        }
                      ],
                      "itemCount": 2
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of it's dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListTermbase",
        "description": "List termbases.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          }
        ],
        "tags": [
          "Termbase"
        ]
      },
      "post": {
        "summary": "Create Termbase",
        "operationId": "CreateTermbase",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termbase"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"empty\": Empty mandatory value mentioned in the \"name\" field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to create a termbase.\n* \"benefitNotAvailable\": - Your subscription does not include access to the requested type of benefit.\n* \"quotaReached\": - You have reached the maximum allowable number of termbases for your account.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": - The specified location was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": There is already a termbase with the same name.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "description": "Creates a new termbase.\nThe termbase can be created with a termbase template by providing the templateId or by providing a custom termbaseStructure. \nIf only a `termbaseTemplateId` was provided, the termbase will be created using data from the template. \nIf only a `termbaseStructure` was provided, the termbase will be created using data from the structure. \nIf both, `termbaseTemplateId` and `termbaseStructure` are added in the request, the `termbaseStructure` takes precedence.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/termbase-create-request"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Termbase"
        ]
      }
    },
    "/termbases/{termbaseId}": {
      "get": {
        "summary": "Get Termbase",
        "tags": [
          "Termbase"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termbase"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to read the resource.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetTermbase",
        "description": "Retrieves a termbase by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ]
      },
      "delete": {
        "summary": "Delete Termbase",
        "operationId": "DeleteTermbase",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to delete the termbase\n* \"benefitNotAvailable\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the termbase could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"invalidStatus\": The termbase cannot be deleted as is currently being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Deletes a termbase by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "tags": [
          "Termbase"
        ]
      },
      "put": {
        "summary": "Update Termbase",
        "operationId": "UpdateTermbase",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"empty\": Empty mandatory value mentioned in the \"name\" field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.\n* \"duplicate\": The field name must be unique within the list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to update the termbase.\n* \"benefitNotAvailable\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": - The specified termbase identifier was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"duplicate\": There is already a termbase with the same name.\n* \"invalidStatus\": The termbase cannot be updated as is currently being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/termbase-update-request"
              }
            }
          }
        },
        "description": "Updates the termbase.\nThe termbase can be updated with a termbase template by providing the termbaseTemplateId or by providing a custom termbaseStructure. \n\nIf only a `termbaseTemplateId ` was provided, the termbase will be updated using data from the template. \nIf only a `termbaseStructure` was provided, the termbase will be updated using data from the structure. \nIf both, `termbaseTemplateId` and `termbaseStructure` are added in the request, the `termbaseStructure` takes precedence.",
        "tags": [
          "Termbase"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/termbaseId"
        }
      ]
    },
    "/termbases/{termbaseId}/entries": {
      "post": {
        "summary": "Create Termbase Entry",
        "operationId": "CreateTermbaseEntry",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termbase-entry"
                },
                "examples": {
                  "termbase-entry-create": {
                    "value": {
                      "id": "string",
                      "humanReadableId": "string",
                      "languages": [
                        {
                          "id": "string",
                          "language": {
                            "languageCode": "string",
                            "englishName": "string",
                            "direction": "string",
                            "parentLanguageCode": "string",
                            "defaultSpecificLanguageCode": "string",
                            "isNeutral": true
                          },
                          "terms": [
                            {
                              "id": "string",
                              "text": "string",
                              "termbaseFieldValues": [
                                {
                                  "id": "string",
                                  "name": "string",
                                  "termbaseFieldId": "string",
                                  "value": "string",
                                  "fieldValueLinks": [
                                    {
                                      "type": "term",
                                      "value": "string"
                                    }
                                  ],
                                  "createdAt": "2019-08-24T14:15:22.000Z",
                                  "createdBy": {
                                    "id": "string",
                                    "email": "string",
                                    "firstName": "string",
                                    "lastName": "string",
                                    "anonymized": true,
                                    "anonymizedUserName": "string",
                                    "location": {
                                      "id": "string",
                                      "name": "string"
                                    },
                                    "groups": [
                                      {
                                        "id": "string",
                                        "name": "string",
                                        "description": "string",
                                        "location": {
                                          "id": "string",
                                          "name": "string"
                                        },
                                        "users": [
                                          {
                                            "id": "string"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "lastModifiedAt": "2019-08-24T14:15:22.000Z",
                                  "lastModifiedBy": {
                                    "id": "string",
                                    "email": "string",
                                    "firstName": "string",
                                    "lastName": "string",
                                    "anonymized": true,
                                    "anonymizedUserName": "string",
                                    "location": {
                                      "id": "string",
                                      "name": "string"
                                    },
                                    "groups": [
                                      {
                                        "id": "string",
                                        "name": "string",
                                        "description": "string",
                                        "location": {
                                          "id": "string",
                                          "name": "string"
                                        },
                                        "users": [
                                          {
                                            "id": "string"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "createdAt": "2019-08-24T14:15:22.000Z",
                              "createdBy": {
                                "id": "string",
                                "email": "string",
                                "firstName": "string",
                                "lastName": "string",
                                "anonymized": true,
                                "anonymizedUserName": "string",
                                "location": {
                                  "id": "string",
                                  "name": "string"
                                },
                                "groups": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "description": "string",
                                    "location": {
                                      "id": "string",
                                      "name": "string"
                                    },
                                    "users": [
                                      {
                                        "id": "string"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "lastModifiedAt": "2019-08-24T14:15:22.000Z",
                              "lastModifiedBy": {
                                "id": "string",
                                "email": "string",
                                "firstName": "string",
                                "lastName": "string",
                                "anonymized": true,
                                "anonymizedUserName": "string",
                                "location": {
                                  "id": "string",
                                  "name": "string"
                                },
                                "groups": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "description": "string",
                                    "location": {
                                      "id": "string",
                                      "name": "string"
                                    },
                                    "users": [
                                      {
                                        "id": "string"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ],
                          "termbaseFieldValues": [
                            {
                              "id": "string",
                              "name": "string",
                              "termbaseFieldId": "string",
                              "value": "string",
                              "fieldValueLinks": [
                                {
                                  "type": "term",
                                  "value": "string"
                                }
                              ],
                              "createdAt": "2019-08-24T14:15:22.000Z",
                              "createdBy": {
                                "id": "string",
                                "email": "string",
                                "firstName": "string",
                                "lastName": "string",
                                "anonymized": true,
                                "anonymizedUserName": "string",
                                "location": {
                                  "id": "string",
                                  "name": "string"
                                },
                                "groups": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "description": "string",
                                    "location": {
                                      "id": "string",
                                      "name": "string"
                                    },
                                    "users": [
                                      {
                                        "id": "string"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "lastModifiedAt": "2019-08-24T14:15:22.000Z",
                              "lastModifiedBy": {
                                "id": "string",
                                "email": "string",
                                "firstName": "string",
                                "lastName": "string",
                                "anonymized": true,
                                "anonymizedUserName": "string",
                                "location": {
                                  "id": "string",
                                  "name": "string"
                                },
                                "groups": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "description": "string",
                                    "location": {
                                      "id": "string",
                                      "name": "string"
                                    },
                                    "users": [
                                      {
                                        "id": "string"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ],
                          "createdAt": "2019-08-24T14:15:22.000Z",
                          "createdBy": {
                            "id": "string",
                            "email": "string",
                            "firstName": "string",
                            "lastName": "string",
                            "anonymized": true,
                            "anonymizedUserName": "string",
                            "location": {
                              "id": "string",
                              "name": "string"
                            },
                            "groups": [
                              {
                                "id": "string",
                                "name": "string",
                                "description": "string",
                                "location": {
                                  "id": "string",
                                  "name": "string"
                                },
                                "users": [
                                  {
                                    "id": "string"
                                  }
                                ]
                              }
                            ]
                          },
                          "lastModifiedAt": "2019-08-24T14:15:22.000Z",
                          "lastModifedBy": {
                            "id": "string",
                            "email": "string",
                            "firstName": "string",
                            "lastName": "string",
                            "anonymized": true,
                            "anonymizedUserName": "string",
                            "location": {
                              "id": "string",
                              "name": "string"
                            },
                            "groups": [
                              {
                                "id": "string",
                                "name": "string",
                                "description": "string",
                                "location": {
                                  "id": "string",
                                  "name": "string"
                                },
                                "users": [
                                  {
                                    "id": "string"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "termbaseFieldValues": [
                        {
                          "id": "string",
                          "name": "string",
                          "termbaseFieldId": "string",
                          "value": "string",
                          "fieldValueLinks": [
                            {
                              "type": "term",
                              "value": "string"
                            }
                          ],
                          "createdAt": "2019-08-24T14:15:22.000Z",
                          "createdBy": {
                            "id": "string",
                            "email": "string",
                            "firstName": "string",
                            "lastName": "string",
                            "anonymized": true,
                            "anonymizedUserName": "string",
                            "location": {
                              "id": "string",
                              "name": "string"
                            },
                            "groups": [
                              {
                                "id": "string",
                                "name": "string",
                                "description": "string",
                                "location": {
                                  "id": "string",
                                  "name": "string"
                                },
                                "users": [
                                  {
                                    "id": "string"
                                  }
                                ]
                              }
                            ]
                          },
                          "lastModifiedAt": "2019-08-24T14:15:22.000Z",
                          "lastModifiedBy": {
                            "id": "string",
                            "email": "string",
                            "firstName": "string",
                            "lastName": "string",
                            "anonymized": true,
                            "anonymizedUserName": "string",
                            "location": {
                              "id": "string",
                              "name": "string"
                            },
                            "groups": [
                              {
                                "id": "string",
                                "name": "string",
                                "description": "string",
                                "location": {
                                  "id": "string",
                                  "name": "string"
                                },
                                "users": [
                                  {
                                    "id": "string"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "createdAt": "2019-08-24T14:15:22.000Z",
                      "createdBy": {
                        "id": "string",
                        "email": "string",
                        "firstName": "string",
                        "lastName": "string",
                        "anonymized": true,
                        "anonymizedUserName": "string",
                        "location": {
                          "id": "string",
                          "name": "string"
                        },
                        "groups": [
                          {
                            "id": "string",
                            "name": "string",
                            "description": "string",
                            "location": {
                              "id": "string",
                              "name": "string"
                            },
                            "users": [
                              {
                                "id": "string"
                              }
                            ]
                          }
                        ]
                      },
                      "lastModifiedAt": "2019-08-24T14:15:22.000Z",
                      "lastModifiedBy": {
                        "id": "string",
                        "email": "string",
                        "firstName": "string",
                        "lastName": "string",
                        "anonymized": true,
                        "anonymizedUserName": "string",
                        "location": {
                          "id": "string",
                          "name": "string"
                        },
                        "groups": [
                          {
                            "id": "string",
                            "name": "string",
                            "description": "string",
                            "location": {
                              "id": "string",
                              "name": "string"
                            },
                            "users": [
                              {
                                "id": "string"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"invalidLevel\" : The termbaseFieldId is invalid for the current termbaseField type\n* \"empty\": Empty mandatory value mentioned in the \"name\" field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to create an entry.\n* \"benefitNotAvailable\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"invalidStatus\": The termbase cannot be updated as is currently being processed.\n* \"duplicate\" : An entry with the same value already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "description": "Creates a new termbase entry. For more information about how to use `fieldValueLinks` see [`Create termbase entry`](../docs/termbase/Termbase-entries.md#creating-a-termbase-entry).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/termbase-entry-create-request"
              }
            }
          }
        },
        "tags": [
          "Termbase"
        ]
      },
      "get": {
        "summary": "List Termbase Entries",
        "operationId": "ListTermbaseEntries",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-termbase-entries-response"
                },
                "examples": {
                  "termbase-entries-list": {
                    "value": {
                      "items": [
                        {
                          "id": "test-id-1",
                          "humanReadableId": "test-humanReadableId-1",
                          "languages": [
                            {
                              "id": "test-languages-id-1",
                              "language": {
                                "languageCode": "test-language-code-1"
                              },
                              "terms": [
                                {
                                  "id": "test-terms-id-1",
                                  "text": "test-terms-test-1"
                                }
                              ]
                            }
                          ],
                          "termbaseFieldValues": [
                            {
                              "id": "test-termbaseFieldValues-id-1",
                              "name": "test-termbaseFieldValues-name-1",
                              "termbaseFieldId": "test-termbaseFieldValues-termbaseFieldId-1",
                              "value": "test-termbaseFieldValues-value-1",
                              "fieldValueLinks": [
                                {
                                  "type": "term",
                                  "value": "test-value-1"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "id": "test-id-2",
                          "humanReadableId": "test-humanReadableId-2",
                          "languages": [
                            {
                              "id": "test-languages-id-2",
                              "language": {
                                "languageCode": "test-language-code-2"
                              },
                              "terms": [
                                {
                                  "id": "test-terms-id-2",
                                  "text": "test-terms-test-2"
                                }
                              ]
                            }
                          ],
                          "termbaseFieldValues": [
                            {
                              "id": "test-termbaseFieldValues-id-2",
                              "name": "test-termbaseFieldValues-name-2",
                              "termbaseFieldId": "test-termbaseFieldValues-termbaseFieldId-2",
                              "value": "test-termbaseFieldValues-value-2",
                              "fieldValueLinks": [
                                {
                                  "type": "term",
                                  "value": "test-value-2"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "itemCount": 2
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"minSize\": Minimum size exceeded for the value mentioned in the \"name\" field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to read the entries.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of it's dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Retrieves a list of all the entries in a termbase.",
        "tags": [
          "Termbase"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/humanReadableIds"
          }
        ]
      },
      "delete": {
        "summary": "Delete Termbase Entries",
        "operationId": "DeleteTermbaseEntries",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to delete an entry.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Deletes all the entries in the termbase.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "tags": [
          "Termbase"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/termbaseId"
        }
      ]
    },
    "/termbases/{termbaseId}/entries/{entryId}": {
      "get": {
        "summary": "Get Termbase Entry",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termbase-entry"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to read the entry.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the entry could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetTermbaseEntry",
        "description": "Retrieves a termbase entry by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "tags": [
          "Termbase"
        ]
      },
      "put": {
        "summary": "Update Termbase Entry",
        "operationId": "UpdateTermbaseEntry",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"empty\": Empty mandatory value mentioned in the \"name\" field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to update the entry.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"invalidStatus\": The termbase cannot be updated as is currently being processed.\n* \"duplicate\" : An entry with the same value already exists.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Updates a termbase entry by identifier.\nThe request body will overwrite the existing data.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "tags": [
          "Termbase"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/termbase-entry-update-request"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Termbase Entry",
        "operationId": "DeleteTermbaseEntry",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to delete the termbase entries.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Deletes a termbase entry.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "tags": [
          "Termbase"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/termbaseId"
        },
        {
          "$ref": "#/components/parameters/entryId"
        }
      ]
    },
    "/termbases/{termbaseId}/exports": {
      "parameters": [
        {
          "$ref": "#/components/parameters/termbaseId"
        }
      ],
      "post": {
        "summary": "Export Termbase",
        "operationId": "ExportTermbase",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termbase-export-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to read entry.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": - The specified termbase was not found.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "format": {
                    "type": "string",
                    "enum": [
                      "xml",
                      "tbx"
                    ],
                    "default": "tbx",
                    "description": "The file format used to export the termbase."
                  },
                  "properties": {
                    "$ref": "#/components/schemas/termbase-export-properties-request"
                  }
                }
              }
            }
          }
        },
        "description": "Generates an asynchronous export operation.\u003Cbr\u003E\nUse the Poll Export Termbase endpoint to poll until the export status is `done`.",
        "tags": [
          "Termbase Export"
        ]
      }
    },
    "/termbases/{termbaseId}/exports/{exportId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/termbaseId"
        },
        {
          "$ref": "#/components/parameters/exportId"
        }
      ],
      "get": {
        "summary": "Poll Termbase Export",
        "operationId": "PollExportTermbase",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termbase-export-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to read entry.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": - The specified export was not found."
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "description": "Polls a termbase via an export operation. The exported termbase can be downloaded once the status is `done`.",
        "tags": [
          "Termbase Export"
        ]
      }
    },
    "/termbases/{termbaseId}/exports/{exportId}/download": {
      "parameters": [
        {
          "$ref": "#/components/parameters/termbaseId"
        },
        {
          "$ref": "#/components/parameters/exportId"
        }
      ],
      "get": {
        "summary": "Download Exported Termbase",
        "operationId": "DownloadExportedTermbase",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to read entry.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": - The specified termbase or export was not found.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "description": "Downloads the exported termbase when the poll operation status is `done`.",
        "tags": [
          "Termbase Export"
        ]
      }
    },
    "/termbases/{termbaseId}/export-template": {
      "parameters": [
        {
          "name": "termbaseId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The termbase identifier."
        }
      ],
      "get": {
        "summary": "Export Termbase Template",
        "tags": [
          "Termbase Export"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to read entry.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "DownloadTermbaseDefinition",
        "description": "Downloads the termbase definition.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ]
      }
    },
    "/termbases/{termbaseId}/terms/{sourceLanguageCode}": {
      "get": {
        "summary": "List Termbase Terms",
        "operationId": "ListTermbaseTerms",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-termbase-terms-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"minSize\": Minimum size exceeded for the value mentioned in the \"name\" field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to read the entries.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of it's dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 100
            },
            "in": "query",
            "name": "search",
            "description": "The text to search for."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "normal",
                "linguistic",
                "fuzzy"
              ],
              "default": "normal"
            },
            "in": "query",
            "name": "searchType",
            "description": "The type of the search performed."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "targetLanguageCode",
            "description": "The target language code used to list the terms."
          }
        ],
        "description": "Retrieves a list of all the terms of the termbase.\nSearch types:\n- normal: Use normal search to look for terms that match the text exactly as entered.\n- linguistic: Use linguistic search to look for terms that are similar to the search term. Linguistic search is based on stemming and other language-dependent aspects.\n- fuzzy: Use fuzzy search to look for terms that are similar to the search term. Fuzzy search is more fault-tolerant than linguistic search.",
        "tags": [
          "Termbase"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/termbaseId"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "sourceLanguageCode",
          "in": "path",
          "required": true,
          "description": "The source language code used to list the terms."
        }
      ]
    },
    "/termbases/{termbaseId}/imports": {
      "parameters": [
        {
          "$ref": "#/components/parameters/termbaseId"
        }
      ],
      "get": {
        "summary": "Get Termbase Import History",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-termbase-import-history"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"minSize\": Minimum size exceeded for the value mentioned in the \"name\" field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to read entry.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetImportHistory",
        "description": "Gets the import history for a termbase.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          }
        ],
        "tags": [
          "Termbase Import"
        ]
      },
      "post": {
        "summary": "Import Termbase",
        "operationId": "ImportTermbase",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termbase-import-response"
                },
                "examples": {
                  "import-termbase-ok": {
                    "value": {
                      "id": "test-import-id",
                      "status": "queued"
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to read entry.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "409": {
            "description": "Error codes:\n* \"invalidStatus\": Cannot import as the termbase is currently being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "schema": {
              "type": "boolean",
              "default": true
            },
            "in": "query",
            "name": "strictImport",
            "description": "Specifies if the entries are only imported into the exact language that matches your imported file.\u003Cbr\u003E `true` - The import will only occur if the language in your import file matches exactly with a language in your termbase.\u003Cbr\u003E `false` - The import will occur even there are non-matching languages, by trying to match them to a relevant main language or language variant, if available."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "ignore",
                "merge",
                "overwrite"
              ],
              "default": "overwrite"
            },
            "in": "query",
            "name": "duplicateEntriesStrategy",
            "description": "The strategy for duplicate entries. Determines how the duplicate entries will be handled.\u003Cbr\u003E `ignore` - The content of the current entry with the same identifier will be kept, and the new entry will be ignored\u003Cbr\u003E `merge` - The content of the current entry with the same identifier will be merged with the imported entry. If the identifier is not provided the content will be merged by text.\u003Cbr\u003E `overwrite` - The content of the current entry with the same identifier will be replaced by the imported entry."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file (binary string) to import into the termbase.\u003Cbr\u003E\nAccepted file types: \u003Cb\u003E.xml\u003C/b\u003E, \u003Cb\u003E.tbx\u003C/b\u003E\n\u003Cbr\u003E"
                  }
                }
              },
              "examples": {

              }
            }
          },
          "description": "For details on multipart requests please see [this article](../docs/How-to-multipart.md)."
        },
        "description": "Generates an asynchronous import operation.\u003Cbr\u003E\nUse the Poll Import Termbase endpoint to poll until the import status is `done`.\u003Cbr\u003E",
        "tags": [
          "Termbase Import"
        ]
      }
    },
    "/termbases/{termbaseId}/imports/{importId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/termbaseId"
        },
        {
          "$ref": "#/components/parameters/importId"
        }
      ],
      "get": {
        "summary": "Poll Termbase Import",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termbase-poll-import-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to read entry.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "PollTermbaseImport",
        "description": "Polls a termbase import operation.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "tags": [
          "Termbase Import"
        ]
      }
    },
    "/termbases/{termbaseId}/imports/{importId}/logs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/termbaseId"
        },
        {
          "$ref": "#/components/parameters/importId"
        }
      ],
      "get": {
        "summary": "Download Termbase Import Logs",
        "operationId": "DownloadTermbaseImportLog",
        "description": "Downloads the termbase import logs.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "tags": [
          "Termbase Import"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error code: \n  * \"invalid\": the value specified in the field \"name\" of the errorDetails is not an accepted value."
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": - The authenticated user is not allowed to read entry.\n* \"entitlementMissing\": - Your subscription does not include access to the requested type of benefit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        }
      }
    },
    "/tqa-profiles": {
      "get": {
        "summary": "List TQA Profiles",
        "tags": [
          "TQA Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-tqa-profiles-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of it's dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListTqaProfiles",
        "description": "List TQA Profiles.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ]
      }
    },
    "/tqa-profiles/{profileId}": {
      "get": {
        "summary": "Get TQA Profile",
        "tags": [
          "TQA Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tqa-profile"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the User could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetTqaProfile",
        "description": "Get a TQA Profile By identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/profileId"
        }
      ]
    },
    "/translation-memory/{translationMemoryId}": {
      "get": {
        "summary": "Get Translation Memory",
        "tags": [
          "Translation Memory"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/translation-memory"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The translation memory could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetTranslationMemory",
        "description": "Get a single Translation Memory by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ]
      },
      "put": {
        "summary": "Update Translation Memory",
        "operationId": "UpdateTranslationMemory",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.\n* \"minSize\": Minimum size not met for the value mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The translation memory could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Updates a Translation Memory. We recommend reading this page too [Updating data with PUT](../docs/Updating-data-with-PUT.md).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/translation-memory-update-request"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "tags": [
          "Translation Memory"
        ]
      },
      "delete": {
        "summary": "Delete Translation Memory",
        "operationId": "DeleteTranslationMemory",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The translation memory could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Deletes a Translation Memory.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "tags": [
          "Translation Memory"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "translationMemoryId",
          "in": "path",
          "required": true,
          "description": "The identifier of the translation memory"
        }
      ]
    },
    "/translation-memory/{translationMemoryId}/copy": {
      "post": {
        "summary": "Copy Translation Memory",
        "tags": [
          "Translation Memory"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/translation-memory"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The translation memory could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "CopyTranslationMemory",
        "description": "Creates a copy of a Translation Memory. The name will be suffixed with ' (Copy) '",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "translationMemoryId",
          "in": "path",
          "required": true,
          "description": "The identifier of the translation memory"
        }
      ]
    },
    "/translation-memory": {
      "get": {
        "summary": "List Translation Memories",
        "tags": [
          "Translation Memory"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-translation-memories-reposne"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of it's dependencies attempted to retrieve data outside the allowed range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListTranslationMemories",
        "description": "Retrieves all the Translation Memories.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ]
      },
      "post": {
        "summary": "Create Translation Memory",
        "operationId": "CreateTranslationMemory",
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/translation-memory-base"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.\n* \"empty\": Empty mandatory value mentioned in the \"name\" field on the error response.\n* \"maxSize\": Maximum size exceeded for the value mentioned in the \"name\" field on the error response.\n* \"minSize\": Minimum size not met for the value mentioned in the \"name\" field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "description": "Create a new Translation Memory.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/translation-memory-create-request"
              }
            }
          }
        },
        "tags": [
          "Translation Memory"
        ]
      }
    },
    "/translation-memory/field-templates": {
      "get": {
        "summary": "List Field Templates",
        "tags": [
          "Translation Memory"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-translation-memory-field-templates"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of its dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListFieldTemplates",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "description": "Retrieves all the Field Templates."
      },
      "parameters": []
    },
    "/translation-memory/field-templates/{fieldTemplateId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "fieldTemplateId",
          "in": "path",
          "required": true,
          "description": "The field template identifier"
        }
      ],
      "get": {
        "summary": "Get Field Template",
        "tags": [
          "Translation Memory"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/translation-memory-field-template"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetFieldTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "description": "Get a single Field Template by identifier."
      }
    },
    "/translation-memory/{translationMemoryId}/imports": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "translationMemoryId",
          "description": "The identifier of the Translation Memory.",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Translation Memory Import History",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-translation-memory-import-history"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to read the entry.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetTMImportHistory",
        "description": "Gets the import history for a translation memory.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          }
        ],
        "tags": [
          "Translation Memory Import"
        ]
      },
      "post": {
        "summary": "Import Translation Memory",
        "operationId": "ImportTranslationMemory",
        "responses": {
          "200": {
            "description": "OK - returned when the `status` field has one of the following values: `failed`, `done`, `cancelled`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/translation-memory-import-response"
                },
                "examples": {
                  "import-termbase-ok": {
                    "value": {
                      "id": "test-import-id",
                      "status": "queued"
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "202": {
            "description": "Accepted - returned when the `status` field has one of the following values: `queued`, `inProgress`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/translation-memory-import-response"
                },
                "examples": {
                  "import-termbase-ok": {
                    "value": {
                      "id": "test-import-id",
                      "status": "queued"
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the query/form parameter mentioned in the “name” field on the error response.\n* \"empty\": Empty mandatory value mentioned in the \"name\" field on the error response.\n* \"multiPartOrder\": The multipart order in the body is not correct. The `properties` must be first and then, file.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": Not authorized to import translation memories.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "properties",
                  "file"
                ],
                "properties": {
                  "properties": {
                    "$ref": "#/components/schemas/translation-memory-import-request"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file (binary string) to import into the translation memory. \u003Cbr\u003EAccepted file types: \u003Cb\u003E.tmx\u003C/b\u003E, \u003Cb\u003E.sdltm\u003C/b\u003E, \u003Cb\u003E.zip\u003C/b\u003E, \u003Cb\u003E.tmx.gz\u003C/b\u003E, \u003Cb\u003E.sdlxliff\u003C/b\u003E"
                  }
                }
              },
              "examples": {

              }
            }
          },
          "description": "For details on multipart requests please see [this article](../docs/How-to-multipart.md)."
        },
        "description": "Generates an asynchronous import operation. \n\u003Cbr\u003E\n\u003Cbr\u003E Read more about prerequisites and limitations on the [official documentation center](https://docs.rws.com/791595/741139/trados-enterprise/importing-tm-content).\n\u003Cbr\u003E\nNote: The order of the multipart form parameter must be implemented as such: properties first, file second.\n\u003Cbr\u003E\nUse the Poll Translation Memory Import endpoint to poll until the import status is `done`.\u003Cbr\u003E\nTo track the progress of the import please refer to [Poll Translation Memory Import](../reference/Public-API.v1.json/paths/~1translation-memory~1imports~1{importId}/get).\n",
        "tags": [
          "Translation Memory Import"
        ]
      }
    },
    "/translation-memory/imports/{importId}": {
      "parameters": [
        {
          "name": "importId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The import identifier."
        }
      ],
      "get": {
        "summary": "Poll Translation Memory Import",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/translation-memory-import-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the path parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to read the entry.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "PollTMImport",
        "description": "Polls a Translation Memory import operation. The import is finished when the status is `done`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "tags": [
          "Translation Memory Import"
        ]
      }
    },
    "/translation-memory/{translationMemoryId}/exports": {
      "parameters": [
        {
          "$ref": "#/components/parameters/translationMemoryId"
        }
      ],
      "post": {
        "summary": "Export Translation Memory",
        "operationId": "ExportTranslationMemory",
        "responses": {
          "200": {
            "description": "OK - returned when the `status` field has one of the following values: `failed`, `done`, `cancelled`",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/translation-memory-export-response"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - returned when the `status` field has one of the following values: `queued`, `inProgress`",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/translation-memory-export-response"
                }
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid input in the request parameters. Either the `translationMemoryId` or the `sourceLanguageCode`/`targetLanguageCode` are invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to export the translation memory.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The resource could not be found by identifier.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "description": "Generates an asynchronous export operation.\nUse the [Poll Translation Memory Export](../reference/Public-API.v1.json/paths/~1translation-memory~1exports~1{exportId}/get) endpoint to poll until the export status is `done`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/translation-memory-export-request"
              }
            }
          }
        },
        "tags": [
          "Translation Memory Export"
        ]
      }
    },
    "/translation-memory/exports/{exportId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/exportId"
        }
      ],
      "get": {
        "summary": "Poll Translation Memory Export",
        "tags": [
          "Translation Memory Export"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/translation-memory-export-response"
                }
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid `exportId` in the path parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to read the resource.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The resource could not be found by identifier.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "operationId": "PollTranslationMemoryExport",
        "description": "Polls a translation memory via an export operation. The exported translation memory can be downloaded once the status is `done`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ]
      }
    },
    "/translation-memory/exports/{exportId}/download": {
      "parameters": [
        {
          "$ref": "#/components/parameters/exportId"
        }
      ],
      "get": {
        "summary": "Download Exported Translation Memory",
        "tags": [
          "Translation Memory Export"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Error codes:\n* \"invalid\": Invalid `exportId` in the path parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": The authenticated user is not allowed to read the resource.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": The resource could not be found by identifier.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "operationId": "DownloadExportedTranslationMemory",
        "description": "Downloads the exported translation memory in the `tmx.gz` format when the poll operation status is `done`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get my User",
        "description": "Retrieves the authenticated user.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetMyUser"
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List Users",
        "description": "Retrieves a list of all the users in an account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-users-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of it's dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListUsers"
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User",
        "description": "Retrieves a user by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "error codes:\n* \"notFound\": the User could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetUser"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/userId"
        }
      ]
    },
    "/.well-known/jwks.json": {
      "get": {
        "summary": "List Public Keys",
        "tags": [
          "Public Keys"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-jwks"
                },
                "examples": {
                  "list-keys-ok": {
                    "value": [
                      {
                        "kty": "test-kty-1",
                        "n": "test-n-1",
                        "e": "test-e-1",
                        "alg": "test-alg-1",
                        "kid": "test-kid-1",
                        "use": "test-use-1"
                      },
                      {
                        "kty": "test-kty-2",
                        "n": "test-n-2",
                        "e": "test-e-2",
                        "alg": "test-alg-2",
                        "kid": "test-kid-2",
                        "use": "test-use-2"
                      }
                    ]
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\":  The requested entity or one of it's dependencies attempted to retrieve data outside the allowed range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListPublicKeys",
        "description": "List all available Public Keys."
      }
    },
    "/.well-known/jwks.json/{kid}": {
      "get": {
        "summary": "Get Public Key",
        "tags": [
          "Public Keys"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jwk"
                },
                "examples": {
                  "get-key-ok": {
                    "value": {
                      "kty": "test-kty",
                      "n": "test-n",
                      "e": "test-e",
                      "alg": "test-alg",
                      "kid": "test-kid",
                      "use": "test-use"
                    }
                  }
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the public key could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetPublicKey",
        "description": "Retrieves a public key by it's identifier."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "kid",
          "in": "path",
          "required": true,
          "description": "The key identifier."
        }
      ]
    },
    "/workflows/{workflowId}": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "Get Workflow",
        "description": "Retrieves a workflow by identifier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflow"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to read the workflow.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the resource could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "GetWorkflow"
      },
      "put": {
        "tags": [
          "Workflow"
        ],
        "summary": "Update Workflow",
        "description": "Updates the workflow in terms of: name, description, and task configuration (and its details). Observe the rules of [JSON Merge Patch Semantics](https://tools.ietf.org/html/rfc7386).",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workflow-update-request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the body parameter mentioned in the “name” field on the error response.\n* \"empty\": Empty input in the body parameter mentioned in the \"name\" field on the error response.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to update the Workflow.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the Workflow could not be found by identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "UpdateWorkflow"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/workflowId"
        }
      ]
    },
    "/workflows": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "List Workflows",
        "description": "Retrieves all the workflows in an account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/X-LC-Tenant"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/location"
          },
          {
            "$ref": "#/components/parameters/location-strategy"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list-workflows-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input in the query parameter mentioned in the “name” field on the error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "416": {
            "description": "Error codes:\n* \"requestedRangeNotSatisfiable\": The requested entity or one of its dependencies attempted to retrieve data outside the allowed range. Skip+Top might be outside the supported range.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "operationId": "ListWorkflows"
      }
    },
    "/projects/{projectId}/custom-fields/{customFieldKey}": {
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The project identifier."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "customFieldKey",
          "in": "path",
          "required": true,
          "description": "The custom field key."
        }
      ],
      "put": {
        "summary": "Update Custom Field",
        "operationId": "UpdateCustomField",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "400": {
            "description": "Error codes:\n* “invalid”: Invalid input for a readOnly field, with a different value than the deafult one. Also this code is used for invalid input values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "401": {
            "description": "The user could not be identified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "403": {
            "description": "Error codes:\n* \"forbidden\": the authenticated user is not allowed to update the Custom field for the Project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          },
          "404": {
            "description": "Error codes:\n* \"notFound\": the Project could not be found by identifier or Custom field key could not be found or does not belong to the desired resource type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            },
            "headers": {
              "X-LC-TraceId": {
                "$ref": "#/components/headers/X-LC-TraceId"
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/custom-field-update-request",
                "description": "Thew new value along wit"
              }
            }
          }
        },
        "tags": [
          "Project"
        ],
        "description": "Allows updating individual custom fields on a project.",
        "parameters": []
      }
    }
  },
  "components": {
    "schemas": {
      "account": {
        "title": "Account",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The account identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe account name.\u003C/div\u003E ",
            "x-default-field": true
          }
        },
        "required": [
          "id"
        ]
      },
      "add-projects-to-group-request": {
        "title": "Add Projects To Group Request",
        "type": "object",
        "description": "Input for adding projects to group.",
        "properties": {
          "projects": {
            "type": "array",
            "description": "The projects to be added to group.",
            "items": {
              "$ref": "#/components/schemas/project-group-project-request"
            }
          }
        },
        "required": [
          "projects"
        ]
      },
      "add-projects-to-group-response": {
        "title": "Add Projects To Group Response",
        "type": "object",
        "description": "Add Projects To Group response.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The project group identifier."
          },
          "name": {
            "type": "string",
            "description": "The project group name."
          },
          "description": {
            "type": "string",
            "description": "The project group description."
          },
          "status": {
            "type": "string",
            "description": "The status of the projects in the project group.\n\n- `new`: the group is new created, or all projects in the group have status New\n\n- `inProgress`: at least one project in the group is in progress\n\n- `completed`: all projects in the group have status Completed\n\n- `deleting`: the group is getting deleted and the projects are removing from it",
            "enum": [
              "new",
              "inProgress",
              "completed",
              "deleting"
            ]
          },
          "projects": {
            "type": "array",
            "description": "The projects in the project group.",
            "items": {
              "$ref": "#/components/schemas/project-group-project"
            }
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          },
          "shortId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the project group was created. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\"",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the project group was modified. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "format": "date-time"
          }
        },
        "required": [
          "id"
        ]
      },
      "additional-cost": {
        "title": "Additional Cost",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the additional cost. "
          },
          "type": {
            "type": "string",
            "enum": [
              "volume",
              "perTargetLanguage",
              "perFile",
              "hourly",
              "percentage",
              "perPage",
              "conditional"
            ],
            "description": "The type of the additional cost."
          },
          "index": {
            "type": "number",
            "description": "The number of the additional cost."
          },
          "costPerUnit": {
            "type": "number",
            "description": "The cost of a unit."
          },
          "unitCount": {
            "type": "number",
            "description": "The number of units for which a cost is applied."
          },
          "volumeUnitType": {
            "type": "string",
            "description": "The unit type of the 'volume' cost, used as reference for the unit cost.",
            "enum": [
              "words",
              "characters"
            ]
          },
          "conditionalCostType": {
            "type": "string",
            "description": "Only for the Conditional type.",
            "enum": [
              "absolute",
              "relative",
              "percentage"
            ]
          },
          "costOperator": {
            "type": "string",
            "description": "Only for the Conditional type.",
            "enum": [
              "less",
              "lessOrEqual",
              "greater",
              "greaterOrEqual"
            ]
          },
          "costVariable": {
            "type": "string",
            "description": "Only for the Conditional type.",
            "enum": [
              "wordCount",
              "runningTotal"
            ]
          },
          "operand": {
            "type": "number",
            "description": "Operand of the Conditional type cost."
          }
        },
        "required": [
          "name",
          "type",
          "index",
          "costPerUnit",
          "unitCount",
          "volumeUnitType",
          "conditionalCostType",
          "costOperator",
          "costVariable",
          "operand"
        ]
      },
      "additional-cost-language": {
        "title": "Additional Cost",
        "x-stoplight": {
          "id": "28d3xstakbk6t"
        },
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the additional cost. "
          },
          "type": {
            "type": "string",
            "enum": [
              "volume",
              "hourly",
              "percentage",
              "perPage",
              "conditional"
            ],
            "description": "The type of the additional cost."
          },
          "index": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003EThe number of the additional cost."
          },
          "costPerUnit": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003EThe cost of a unit."
          },
          "unitCount": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003EThe number of units for which a cost is applied."
          },
          "volumeUnitType": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003EThe unit type of the 'volume' cost, used as reference for the unit cost.",
            "enum": [
              "words",
              "characters"
            ]
          },
          "conditionalCostType": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003EOnly for the Conditional type.",
            "enum": [
              "absolute",
              "relative",
              "percentage"
            ]
          },
          "costOperator": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003EOnly for the Conditional type.",
            "enum": [
              "less",
              "lessOrEqual",
              "greater",
              "greaterOrEqual"
            ]
          },
          "costVariable": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003EOnly for the Conditional type.",
            "enum": [
              "wordCount",
              "runningTotal"
            ]
          },
          "operand": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003EOperand of the Conditional type cost."
          },
          "serviceTypes": {
            "type": "array",
            "x-stoplight": {
              "id": "gkyey7knc4j3v"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E Array of task type identifiers where this additional cost is applied.",
            "items": {
              "x-stoplight": {
                "id": "3e6kwmu58ut0p"
              },
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "analysis-statistics": {
        "title": "Analysis Statistics",
        "type": "object",
        "properties": {
          "exactMatch": {
            "$ref": "#/components/schemas/count",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EStatistics count.\u003C/div\u003E ",
            "x-default-field": true
          },
          "inContextExactMatch": {
            "$ref": "#/components/schemas/count",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EStatistics count.\u003C/div\u003E ",
            "x-default-field": true
          },
          "perfectMatch": {
            "$ref": "#/components/schemas/count",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EStatistics count.\u003C/div\u003E ",
            "x-default-field": true
          },
          "new": {
            "$ref": "#/components/schemas/count",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EStatistics count.\u003C/div\u003E ",
            "x-default-field": true
          },
          "repetitions": {
            "$ref": "#/components/schemas/count",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EStatistics count.\u003C/div\u003E ",
            "x-default-field": true
          },
          "crossDocumentRepetitions": {
            "$ref": "#/components/schemas/count",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EStatistics count.\u003C/div\u003E ",
            "x-default-field": true
          },
          "machineTranslation": {
            "$ref": "#/components/schemas/count",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EStatistics count.\u003C/div\u003E ",
            "x-default-field": true
          },
          "fuzzyMatch": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fuzzy-count"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EStatistics count.\u003C/div\u003E ",
            "x-default-field": true
          },
          "total": {
            "$ref": "#/components/schemas/count",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EStatistics count.\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "analytics": {
        "title": "Analytics",
        "type": "object",
        "properties": {
          "progress": {
            "$ref": "#/components/schemas/analytics-progress"
          },
          "overdueStatistics": {
            "$ref": "#/components/schemas/analytics-overdue-statistics"
          },
          "sourceFileStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/analytics-source-file-statistics"
            }
          },
          "workloadStatistics": {
            "$ref": "#/components/schemas/analytics-workload-statistics"
          },
          "taskTypeStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/analytics-task-type-statistics"
            }
          },
          "phaseStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/analytics-phase-statistics"
            }
          }
        },
        "description": "Project analytics."
      },
      "analytics-progress": {
        "title": "Analytics Progress",
        "type": "object",
        "description": "Overall progress.",
        "properties": {
          "overall": {
            "type": "integer",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe overall progress.\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "analytics-overdue-statistics": {
        "title": "Analytics Overdue Statistics",
        "type": "object",
        "description": "Statistics on overdue work.",
        "properties": {
          "overdueTasks": {
            "type": "integer",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe number of overdue tasks.\u003C/div\u003E ",
            "x-default-field": true
          },
          "dueDateCloseTasks": {
            "type": "integer",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe number of tasks closed after the due date.\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "analytics-source-file-statistics": {
        "title": "Analytics Source File Statistics",
        "type": "object",
        "description": "Source file statistics grouped by role.",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/file-role",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe file role.\u003C/div\u003E ",
            "x-default-field": true
          },
          "count": {
            "type": "integer",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe file count.\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "analytics-workload-statistics": {
        "title": "Analytics Workload Statistics",
        "type": "object",
        "description": "Statistics on workload progress.",
        "properties": {
          "completed": {
            "type": "integer",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "total": {
            "type": "integer",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "analytics-task-type-statistics": {
        "title": "Analytics Task Type Statistics",
        "type": "object",
        "description": "Task Type statistics grouped.",
        "properties": {
          "id": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "key": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "total": {
            "type": "integer",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "current": {
            "type": "integer",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "completed": {
            "type": "integer",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "error": {
            "type": "integer",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "analytics-phase-statistics": {
        "title": "Analytics Phase Statistics",
        "type": "object",
        "description": "Statistics for phases grouped.",
        "properties": {
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "total": {
            "type": "integer",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "completed": {
            "type": "integer",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "asynchronous-result": {
        "title": "Asynchronous Result",
        "type": "object",
        "description": "Represents the result of an asynchronous operation, including status and potential error information.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the asynchronous operation."
          },
          "status": {
            "type": "string",
            "description": "The status of the asynchronous operation.",
            "enum": [
              "created",
              "inProgress",
              "completed",
              "failed"
            ]
          },
          "errorMessage": {
            "type": "string",
            "description": "When the status is 'failed', it contains the error message explaining what went wrong."
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "count": {
        "title": "Count",
        "type": "object",
        "description": "Statistics count.",
        "properties": {
          "words": {
            "type": "integer",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ENumber of words.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "segments": {
            "type": "integer",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ENumber of segments.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "characters": {
            "type": "integer",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ENumber of characters.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "placeables": {
            "type": "integer",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ENumber of placeables.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "tags": {
            "type": "integer",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ENumber of tags.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          }
        }
      },
      "configuration-resource-request": {
        "title": "Configuration Resource Request",
        "type": "object",
        "description": "Resource configuration properties.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Configuration resource identifier."
          },
          "strategy": {
            "type": "string",
            "description": "\"copy\": A copy of the resource will be used for the project execution. This is the default strategy.\n\n\"use\": The actual resource will be used for the project execution.",
            "default": "copy",
            "enum": [
              "copy",
              "use"
            ]
          }
        },
        "required": [
          "id"
        ]
      },
      "customer": {
        "title": "Customer",
        "type": "object",
        "description": "Customer resource.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Customer identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ECustomer name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "keyContact": {
            "$ref": "#/components/schemas/user"
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          },
          "ragStatus": {
            "x-stoplight": {
              "id": "z7v6f1w7qrqdj"
            },
            "enum": [
              "green",
              "amber",
              "red"
            ]
          },
          "customFieldDefinitions": {
            "type": "array",
            "description": "The custom field definitions.",
            "items": {
              "$ref": "#/components/schemas/custom-field-resource"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "custom-field": {
        "title": "Custom Field",
        "type": "object",
        "description": "A Custom Field model.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Custom Field identifier."
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "ln5wrk75uaby5"
            },
            "description": "Custom Field name. (Not available for List Projects, Get Project Template and List Project Templates endpoints)"
          },
          "key": {
            "type": "string",
            "description": "Custom Field friendly key."
          },
          "value": {
            "type": "object",
            "description": "The value of the custom property. A date will be serialised as an ISO_8601 string."
          }
        },
        "required": [
          "id"
        ]
      },
      "customer-create-request": {
        "title": "Customer Create Request",
        "x-stoplight": {
          "id": "f8bca95391ffb"
        },
        "type": "object",
        "description": "Input for Customer creation.\n\n It will create an invitation for an account user account.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the customer.\\\nUnsupported characters in the name: `\\` `/` `:` ` *` `?` `\"` `\u003C` `\u003E` `|`",
            "maxLength": 50
          },
          "location": {
            "type": "string",
            "description": "The identifier of the parent folder for the customer."
          },
          "firstName": {
            "type": "string",
            "description": "Key contact first name. If you provide this field, pleaase also provide email and last name"
          },
          "lastName": {
            "type": "string",
            "description": "Key contact last name. If you provide this field, pleaase also provide email and first name"
          },
          "email": {
            "type": "string",
            "description": "Key contact email.. If you provide this field, pleaase also provide first name and last name"
          }
        },
        "required": [
          "name"
        ]
      },
      "customer-update-request": {
        "title": "Customer Update Request",
        "x-stoplight": {
          "id": "f8bca95391ffb"
        },
        "type": "object",
        "description": "Input for Customer update.\n\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the customer.\\\nUnsupported characters in the name: `\\` `/` `:` ` *` `?` `\"` `\u003C` `\u003E` `|`",
            "maxLength": 50
          },
          "keyContactId": {
            "type": "string",
            "description": "The ID of the account user set as key contact."
          },
          "ragStatus": {
            "type": "string",
            "description": "The color tag used to mark-up a customer in the UI.",
            "enum": [
              "green",
              "amber",
              "red"
            ]
          },
          "customFieldDefinitions": {
            "description": "The Custom Fields",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom-field-resource",
              "x-stoplight": {
                "id": "jwte0fv6wp2z7"
              }
            }
          },
          "folderVisibility": {
            "type": "string",
            "description": "The folder visibilty to its subfulders.",
            "enum": [
              "default",
              "private"
            ]
          }
        }
      },
      "custom-field-resource": {
        "title": "Custom Field Resource",
        "type": "object",
        "description": "A Custom Field resource model.",
        "properties": {
          "key": {
            "type": "string",
            "description": "Custom Field friendly key."
          },
          "value": {
            "type": "object",
            "description": "The value of the custom property. A date will be serialised as an ISO_8601 string."
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "custom-field-definition": {
        "title": "Custom Field Definition",
        "type": "object",
        "description": "The Custom Field definition.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the Custom Field Definition, generated by the service."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe display name of the Custom Field.\u003C/div\u003E ",
            "x-default-field": true
          },
          "key": {
            "type": "string",
            "description": "The key of the Custom Field, used for querying purposes."
          },
          "description": {
            "type": "string",
            "description": "The description of the Custom Field."
          },
          "type": {
            "type": "string",
            "description": "The value type supported by this Custom Field.",
            "enum": [
              "long",
              "double",
              "boolean",
              "date",
              "string",
              "checkbox",
              "longtext",
              "picklist",
              "multiSelectPicklist"
            ],
            "nullable": true
          },
          "pickListOptions": {
            "type": "array",
            "description": "Possible values if the type selected is \"picklist\" or \"multiSelectPicklist\".",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "resourceType": {
            "type": "string",
            "description": "The resource type to which this Custom Field can be applied.",
            "enum": [
              "project",
              "customer"
            ]
          },
          "isReadOnly": {
            "type": "boolean",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "description": "Specifies a default value for this Custom Field. This is required if the \"isReadOnly\" field is True."
          },
          "isMandatory": {
            "type": "boolean",
            "description": "Specifies if this Custom Field is mandatory when creating a resource of the supported type.",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          }
        },
        "required": [
          "id"
        ]
      },
      "custom-field-request": {
        "title": "Custom Field Request",
        "type": "object",
        "description": "A Custom Field model used at project creation or project update.",
        "properties": {
          "key": {
            "type": "string",
            "description": "Custom Field friendly key."
          },
          "value": {
            "type": "object",
            "description": "The value of the custom field. A date will be serialized as a ISO_8601 string. For read only custom fields (`isReadOnly`), it must be set exactly as the `defaultValue` from custom field definition. "
          }
        },
        "required": [
          "key"
        ]
      },
      "custom-field-update-request": {
        "title": "Custom Field Update Request",
        "x-stoplight": {
          "id": "69hm58ubq50j6"
        },
        "type": "object",
        "description": "",
        "properties": {
          "value": {
            "type": "object",
            "description": "The value of the custom field. A date will be serialized as a ISO_8601 string. For read only custom fields (`isReadOnly`), it must be set exactly as the `defaultValue` from custom field definition. "
          }
        },
        "required": [
          "value"
        ]
      },
      "date-time": {
        "type": "string",
        "title": "DateTime",
        "example": "2022-01-12T12:00:00.000Z",
        "description": "UTC Timezone  \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\"",
        "format": "date-time",
        "nullable": true
      },
      "error-response": {
        "title": "Error Response",
        "type": "object",
        "description": "Error response properties.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Retrieves a descriptive message that shows what went wrong."
          },
          "errorCode": {
            "type": "string",
            "description": "Concise code that describes the nature of the error."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error-detail-response"
            }
          }
        },
        "required": [
          "message",
          "errorCode"
        ]
      },
      "error-detail-response": {
        "title": "Error Detail Response",
        "type": "object",
        "description": "Error detail response properties.",
        "properties": {
          "name": {
            "type": "string",
            "description": ""
          },
          "code": {
            "type": "string",
            "description": ""
          },
          "value": {
            "type": "string"
          }
        }
      },
      "export-quote-report-response": {
        "title": "Export Quote Report Response",
        "type": "object",
        "description": "Export quote report response.\n\nThe field is optional and will be returned only if a custom quote template is associated with the project.\n\nWe currently have this known issue: when the export is not using a Quote Template, the response for this call will be empty. It will be addressed in the future.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The export quote report identifier."
          }
        }
      },
      "failed-task": {
        "title": "Failed Task",
        "type": "object",
        "description": "Failed Task.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The failed task identifier."
          },
          "name": {
            "type": "string",
            "description": "The failed task name."
          },
          "errors": {
            "type": "array",
            "description": "The failed task errors.",
            "items": {
              "$ref": "#/components/schemas/task-error"
            }
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "file-processing-configuration": {
        "title": "File Processing Configuration",
        "type": "object",
        "description": "File Processing Configuration resource. (Not available for List Projects endpoint)",
        "properties": {
          "id": {
            "type": "string",
            "description": "The file processing configuration identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe file processing configuration name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          }
        },
        "required": [
          "id"
        ]
      },
      "file-type-setting": {
        "title": "File Type Setting",
        "x-stoplight": {
          "id": "twyoqd5uer5g0"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The file type setting identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe file type name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string"
          },
          "typeId": {
            "type": "string",
            "description": "A short string representation of the file type identifier. The ID displayed in the Language Cloud UI."
          },
          "enabled": {
            "type": "boolean",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EIs this file type setting enabled. Disabled file types will not be included in operations (ex. Scan)\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "excluded": {
            "type": "boolean",
            "description": "Is this file type setting included in the file processing configuration. \n\nFile types will be added to a configuration as excluded = true by default and can be included by a consumer when needed (via the Language Cloud UI)\n\nExcluded file types will not be included in operations (ex. Scan)",
            "nullable": true
          },
          "deprecated": {
            "type": "boolean",
            "description": "This file type setting is planned for deprecation and will be removed in the future.",
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "description": "The order of the setting in the file type configuration."
          },
          "extensions": {
            "type": "array",
            "description": "A collection of extensions supported by this file type. Ex: \"*.xlsx\"",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id"
        ],
        "description": ""
      },
      "file-upload-response": {
        "title": "File Upload Response",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the uploaded file"
          },
          "fileName": {
            "type": "string",
            "description": "The name of the uploaded file"
          },
          "unzipStatus": {
            "type": "string",
            "enum": [
              "queued",
              "extracting",
              "extracted",
              "unzipError"
            ],
            "description": "The status of the unzipping operation. You can use this to determine if your .zip file has been extracted successfully."
          }
        },
        "required": [
          "id",
          "fileName"
        ]
      },
      "file-metadata-response": {
        "title": "File Metadata Response",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the uploaded file"
          },
          "fileName": {
            "type": "string",
            "description": "The name of the uploaded file"
          },
          "unzipStatus": {
            "type": "string",
            "enum": [
              "queued",
              "extracting",
              "extracted",
              "unzipError"
            ],
            "description": "The status of the unzipping operation. You can use this to determine if your .zip file has been extracted successfully."
          },
          "associatedFiles": {
            "type": "array",
            "description": "The files that were extracted from the uploaded .zip archive.",
            "items": {
              "$ref": "#/components/schemas/file-extracted-response"
            }
          }
        },
        "required": [
          "id",
          "fileName"
        ]
      },
      "file-extracted-response": {
        "title": "File Extracted Response",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the extracted file."
          },
          "fileName": {
            "type": "string",
            "description": "The name of the extracted file."
          },
          "filePath": {
            "type": "string",
            "description": "The file path of the extracted file. This is relative to the archive root."
          }
        },
        "required": [
          "id",
          "fileName",
          "filePath"
        ]
      },
      "file-role": {
        "type": "string",
        "title": "File-Role",
        "enum": [
          "translatable",
          "reference",
          "localizable",
          "unknown"
        ],
        "nullable": true
      },
      "file-version-export": {
        "title": "File Version Export",
        "description": "File Version Export. The resulted version can be downloaded once the status is completed.",
        "allOf": [
          {
            "$ref": "#/components/schemas/asynchronous-result"
          },
          {
            "type": "object",
            "properties": {
              "downloadUrl": {
                "type": "string",
                "description": "The url where the file can be downloaded."
              }
            }
          }
        ]
      },
      "file-version-import": {
        "title": "File Version Import",
        "allOf": [
          {
            "$ref": "#/components/schemas/asynchronous-result"
          },
          {
            "type": "object",
            "properties": {
              "fileVersionId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "folder": {
        "title": "Folder",
        "type": "object",
        "description": "Folder used for resource storage.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The folder identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe name of the folder.\u003C/div\u003E ",
            "x-default-field": true
          },
          "hasParent": {
            "type": "boolean",
            "description": "Indicates if the folder has a parent folder.",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/resource-folder"
          },
          "path": {
            "type": "array",
            "x-stoplight": {
              "id": "31bd3get7o6hk"
            },
            "description": "The hierarchical path. It consists of all the items of the path in reverse order, the parent of the current folder being the first in the list, and the root of the account being the last.",
            "items": {
              "$ref": "#/components/schemas/folder-path",
              "x-stoplight": {
                "id": "i4c2vlnydf80m"
              }
            }
          }
        },
        "required": [
          "id"
        ],
        "examples": [
          {
            "id": "1de8f71c357c4bb5a32626faf5f53ef1",
            "name": "consumer_A",
            "path": [
              {
                "id": "7fb808326daa4bb1988ckedcd0734aa6",
                "location": "0e6d1f1aa8df46e6b9b111ca9f388c9e",
                "name": "dexters_extensibility_consumer",
                "hasParent": true
              },
              {
                "id": "0e6d1f1aa8df46e6b9b111ca9f388c9e",
                "location": "61e801fa3d600fe2cfs12dd08",
                "name": "Customers",
                "hasParent": true
              },
              {
                "id": "61e801fa3d600fe2cfs12dd08",
                "name": "61e801fa3d600fe2cfs12dd08",
                "hasParent": false
              }
            ]
          }
        ]
      },
      "folder-v2": {
        "title": "Folder",
        "type": "object",
        "description": "Folder used for resource storage.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The folder identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe name of the folder.\u003C/div\u003E ",
            "x-default-field": true
          },
          "hasParent": {
            "type": "boolean",
            "description": "Indicates if the folder has a parent folder.",
            "nullable": true
          },
          "path": {
            "type": "array",
            "description": "The hierarchical path. It consists of all the items of the path in reverse order, the parent of the current folder being the first in the list, and the root of the account being the last.",
            "items": {
              "$ref": "#/components/schemas/folder-path"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "folder-path": {
        "title": "Folder Path",
        "type": "object",
        "description": "Path of a folder.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The folder identifier."
          },
          "name": {
            "type": "string",
            "description": "The name of the folder."
          },
          "location": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003EThe location identifier."
          },
          "hasParent": {
            "type": "boolean",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003EIndicates if the folder has a parent folder.",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "fuzzy-category": {
        "title": "Fuzzy Category",
        "type": "object",
        "description": "Fuzzy category range. Example of Fuzzy bands: 100-100%, 95-99%, 85-94%, 75-84%, 50-74%.",
        "properties": {
          "minimum": {
            "type": "integer",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe minimum of the range.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "maximum": {
            "type": "integer",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe maximum of the range.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          }
        }
      },
      "fuzzy-count": {
        "title": "Fuzzy Count",
        "type": "object",
        "description": "Statistics count for fuzzy matches.",
        "properties": {
          "count": {
            "$ref": "#/components/schemas/count",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EStatistics count.\u003C/div\u003E ",
            "x-default-field": true
          },
          "category": {
            "$ref": "#/components/schemas/fuzzy-category",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EFuzzy category range.\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "fuzzy-match-category": {
        "title": "Fuzzy Match Category",
        "type": "object",
        "description": "Fuzzy match category range.",
        "properties": {
          "minimumMatchValue": {
            "type": "integer",
            "nullable": true,
            "description": "Minimum matching value of this range."
          },
          "maximumMatchValue": {
            "type": "integer",
            "nullable": true,
            "description": "Maximum matching value of this range."
          }
        },
        "required": [
          "minimumMatchValue",
          "maximumMatchValue"
        ]
      },
      "fuzzy-match": {
        "title": "Fuzzy Match",
        "type": "object",
        "description": "Fuzzy match model.",
        "properties": {
          "price": {
            "type": "number",
            "description": "Fuzzy match price for the range expressed in the category field."
          },
          "category": {
            "$ref": "#/components/schemas/fuzzy-match-category"
          }
        },
        "required": [
          "price",
          "category"
        ]
      },
      "group": {
        "title": "Group",
        "type": "object",
        "description": "Group of Users.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The group identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe group name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "The group description."
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "group-request": {
        "title": "Group Request",
        "type": "object",
        "description": "Group of users.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The group identifier."
          },
          "name": {
            "type": "string",
            "description": "The group name."
          },
          "description": {
            "type": "string",
            "description": "The group description."
          },
          "location": {
            "$ref": "#/components/schemas/resource-folder-request"
          },
          "users": {
            "type": "array",
            "description": "The group users.",
            "items": {
              "$ref": "#/components/schemas/user-request"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "jwk": {
        "title": "JWK",
        "type": "object",
        "description": "A Json Web Key. \n\u003Cbr\u003E\nSee https://datatracker.ietf.org/doc/html/rfc7517 for details.",
        "properties": {
          "kty": {
            "type": "string",
            "description": "The cryptographic algorithm\n   family used with the key."
          },
          "n": {
            "type": "string",
            "description": "The RSA public modulus n."
          },
          "e": {
            "type": "string",
            "description": "The RSA public exponent e."
          },
          "alg": {
            "type": "string",
            "description": "The algorithm intended for use with the key."
          },
          "kid": {
            "type": "string",
            "description": "The \"kid\" (key ID) parameter is used to match a specific key."
          },
          "use": {
            "type": "string",
            "description": "The \"use\" parameter is employed to indicate whether a public key is used for encrypting data or verifying the signature on data."
          }
        }
      },
      "language": {
        "title": "Language",
        "type": "object",
        "description": "The language object.",
        "properties": {
          "languageCode": {
            "type": "string",
            "description": "Language code. ex: \"en-US\", \"de-DE\"."
          },
          "englishName": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EHuman readable name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "direction": {
            "type": "string"
          },
          "parentLanguageCode": {
            "type": "string"
          },
          "defaultSpecificLanguageCode": {
            "type": "string"
          },
          "isNeutral": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "languageCode"
        ]
      },
      "language-direction": {
        "title": "Language Direction",
        "type": "object",
        "description": "A Language Direction.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The language direction identifier."
          },
          "sourceLanguage": {
            "$ref": "#/components/schemas/language"
          },
          "targetLanguage": {
            "$ref": "#/components/schemas/language"
          },
          "analysisStatistics": {
            "$ref": "#/components/schemas/analysis-statistics"
          }
        },
        "required": [
          "id",
          "sourceLanguage",
          "targetLanguage"
        ]
      },
      "language-direction-no-statistics": {
        "title": "Language Direction",
        "x-stoplight": {
          "id": "o2ahlu8d180l0"
        },
        "type": "object",
        "description": "A Language Direction.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The language direction identifier."
          },
          "sourceLanguage": {
            "$ref": "#/components/schemas/language"
          },
          "targetLanguage": {
            "$ref": "#/components/schemas/language"
          }
        },
        "required": [
          "id",
          "sourceLanguage",
          "targetLanguage"
        ]
      },
      "language-direction-item": {
        "title": "Language Direction Item",
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "string",
            "description": "The language direction identifier."
          }
        },
        "required": [
          "id"
        ]
      },
      "language-price": {
        "title": "Language Prices",
        "x-stoplight": {
          "id": "a0c8ffb7ad3c9"
        },
        "type": "object",
        "properties": {
          "sourceLanguage": {
            "type": "string",
            "description": "The source language code. For example: \"en-US\", \"de-DE\"."
          },
          "targetLanguage": {
            "type": "string",
            "description": "The target language code. For example: \"en-US\", \"de-DE\"."
          },
          "contextMatch": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe price of context matches.",
            "x-default-field": true
          },
          "exactMatch": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E The price of exact matches.",
            "x-default-field": true
          },
          "new": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe price of new matches.",
            "type": "number",
            "x-default-field": true
          },
          "perfectMatch": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe price of perfect matches.",
            "x-default-field": true
          },
          "repetition": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe price of repetition matches.",
            "x-default-field": true
          },
          "machineTranslation": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E The price of machine translation matches.",
            "x-default-field": true
          },
          "pricingUnit": {
            "x-stoplight": {
              "id": "tg3y5wcaunacs"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E",
            "x-default-field": true,
            "enum": [
              "words",
              "characters"
            ]
          },
          "fuzzyMatches": {
            "type": "array",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E",
            "x-default-field": true,
            "items": {
              "$ref": "#/components/schemas/fuzzy-match",
              "x-stoplight": {
                "id": "0m8m8t4mg06hy"
              }
            }
          },
          "additionalCosts": {
            "type": "array",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E",
            "x-default-field": true,
            "items": {
              "$ref": "#/components/schemas/additional-cost-language",
              "x-stoplight": {
                "id": "eskiho7o9q38f"
              }
            }
          }
        },
        "required": [
          "sourceLanguage",
          "targetLanguage"
        ]
      },
      "language-direction-request": {
        "title": "Language Direction Request",
        "type": "object",
        "description": "The language directions model used for creating or updating a project.",
        "properties": {
          "sourceLanguage": {
            "$ref": "#/components/schemas/source-language-request"
          },
          "targetLanguage": {
            "$ref": "#/components/schemas/target-language-request"
          }
        },
        "required": [
          "sourceLanguage",
          "targetLanguage"
        ]
      },
      "language-processing-rule": {
        "title": "Language Processing Rule",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The language processing rule identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe language processing rule name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "The language processing rule description."
          }
        },
        "required": [
          "id"
        ]
      },
      "language-request": {
        "title": "Language Request",
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string"
          }
        },
        "required": [
          "languageCode"
        ]
      },
      "language-pair": {
        "title": "Language Pair",
        "x-stoplight": {
          "id": "61t8792ya7zez"
        },
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "x-stoplight": {
              "id": "0xwwyeclt9qb9"
            },
            "description": "Language code. ex: \"en-US\", de-DE\"."
          },
          "target": {
            "type": "string",
            "x-stoplight": {
              "id": "0ndrvic0areb1"
            },
            "description": "Language code. ex: \"en-US\", de-DE\"."
          }
        },
        "required": [
          "source",
          "target"
        ],
        "description": ""
      },
      "language-pair-resource": {
        "title": "Language Pair Resource",
        "x-stoplight": {
          "id": "62g4076dmqp0x"
        },
        "type": "object",
        "description": "Resource describing a Translation Memory, Termbase or Machine Translation used in a Translation Engine.",
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "0xwwyeclt9qb9"
            },
            "description": "The identifier of the Translation Memory, the Termbase or the Machine Translation."
          },
          "type": {
            "type": "string",
            "x-stoplight": {
              "id": "1smtmeliso6fm"
            },
            "description": "The resource type. ",
            "enum": [
              "TM",
              "MT",
              "TB"
            ]
          },
          "penalty": {
            "type": "integer",
            "x-stoplight": {
              "id": "465u0rm7i1n97"
            }
          },
          "lookup": {
            "type": "boolean",
            "x-stoplight": {
              "id": "bnsbqsinf3azu"
            }
          },
          "concordance": {
            "type": "boolean",
            "x-stoplight": {
              "id": "6h3n7qz9llokc"
            }
          },
          "update": {
            "type": "boolean",
            "x-stoplight": {
              "id": "euo2zyycwz99m"
            }
          },
          "systemId": {
            "type": "string",
            "x-stoplight": {
              "id": "xvf797250xe34"
            },
            "description": "Required only for neural Machine Translation resources."
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "list-customers-response": {
        "title": "List Customers Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/customer"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Customers endpoint."
      },
      "list-custom-field-definitions-response": {
        "title": "List Custom Field Definitions Response",
        "type": "object",
        "description": "A response for the List Custom Field Definitions endpoint.",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom-field-definition"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ]
      },
      "list-file-processing-configurations-response": {
        "title": "List File Processing Configurations Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/file-processing-configuration"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List File Processing Configurations endpoint."
      },
      "list-file-type-settings-response": {
        "title": "List File Type Settings Response",
        "type": "object",
        "description": "A response for the List File Type Settings endpoint.",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/file-type-setting"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ]
      },
      "list-folders-response": {
        "title": "List Folders Response",
        "type": "object",
        "description": "A response for the List Folders endpoint.",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/folder"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ]
      },
      "list-groups-response": {
        "title": "List Groups Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/group"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Groups endpoint."
      },
      "list-jwks": {
        "title": "List JWKs Response",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/jwk"
        }
      },
      "list-languages-response": {
        "title": "List Languages Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/language"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Languages endpoint."
      },
      "list-language-processing-rules": {
        "title": "List Language Processing Rules",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/language-processing-rule"
            }
          },
          "itemCount": {
            "type": "string"
          }
        },
        "required": [
          "items",
          "itemCount"
        ]
      },
      "list-machine-translations-response": {
        "title": "List Machine Translations Response",
        "x-stoplight": {
          "id": "fhk9xi0bpvf3x"
        },
        "type": "object",
        "description": "A response for the List Machine Translations endpoint.",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/machine-translation"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ]
      },
      "list-my-accounts-response": {
        "title": "List My Accounts Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/account"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List My Accounts endpoint."
      },
      "list-pricing-models-response": {
        "title": "List Pricing Models Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pricing-model"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Pricing Models endpoint."
      },
      "list-project-templates-response": {
        "title": "List Project Templates Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/project-template-response"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Project Templates endpoint."
      },
      "list-schedule-templates-response": {
        "title": "List Schedule Templates Response",
        "x-stoplight": {
          "id": "1rzz3ctuczv9f"
        },
        "type": "object",
        "description": "A response for the List Schedule Templates endpoint.",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schedule-template"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ]
      },
      "list-rate-limits-response": {
        "title": "List Rate Limits Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/rate-limit"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Rate Limits endpoint."
      },
      "list-project-groups-response": {
        "title": "List Project Groups Response",
        "type": "object",
        "description": "A response for the List Project Groups endpoint.",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/project-group"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ]
      },
      "list-projects-response": {
        "title": "List Projects Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/project"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Projects endpoint."
      },
      "list-source-files-response": {
        "title": "List Source Files Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/source-file"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Source Files endpoint."
      },
      "list-source-file-versions-response": {
        "title": "List Source File Versions Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/source-file-version"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Source File Versions endpoint."
      },
      "list-target-files-response": {
        "title": "List Target Files Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/target-file"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Target Files endpoint."
      },
      "list-target-file-versions-response": {
        "title": "List Target File Versions Response",
        "type": "object",
        "description": "A response for the List Target Files Versions endpoint.",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/target-file-version"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ]
      },
      "list-tasks-response": {
        "title": "List Tasks Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/task"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Tasks endpoint."
      },
      "list-task-types-response": {
        "title": "List Task Types Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/task-type"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Task types endpoint."
      },
      "list-tqa-profiles-response": {
        "title": "List TQA Profiles Response",
        "type": "object",
        "description": "",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tqa-profile"
            }
          },
          "itemCount": {
            "type": "integer"
          }
        },
        "required": [
          "items",
          "itemCount"
        ]
      },
      "list-termbase-templates-response": {
        "title": "List Termbase Templates Response",
        "type": "object",
        "description": "The termbase templates response.",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-template"
            }
          },
          "itemCount": {
            "type": "integer"
          }
        },
        "required": [
          "items",
          "itemCount"
        ]
      },
      "list-termbases-response": {
        "title": "List Termbases Response",
        "type": "object",
        "description": "The list termbases response.",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase"
            }
          },
          "itemCount": {
            "type": "integer"
          }
        },
        "required": [
          "items",
          "itemCount"
        ]
      },
      "list-termbase-terms-response": {
        "title": "List Termbase Terms Response",
        "type": "object",
        "description": "The list termbase terms response.",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-term"
            }
          },
          "itemCount": {
            "type": "integer"
          }
        },
        "required": [
          "items",
          "itemCount"
        ]
      },
      "list-termbase-entries-response": {
        "title": "List Termbase Entries Response",
        "type": "object",
        "description": "The list termbase entries response.",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-entry"
            }
          },
          "itemCount": {
            "type": "integer"
          }
        },
        "required": [
          "items",
          "itemCount"
        ]
      },
      "list-termbase-import-history": {
        "title": "Get Termbase Import History",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-import-history-response"
            }
          },
          "itemCount": {
            "type": "integer"
          }
        }
      },
      "list-translation-engines-response": {
        "title": "List Translation Engines Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/translation-engine"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Translation Engines endpoint."
      },
      "list-translation-memories-reposne": {
        "title": "List Translation Memories Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/translation-memory"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Translation Memories endpoint."
      },
      "list-translation-memory-import-history": {
        "title": "Get Translation Memory Import History",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/translation-memory-import-history-response"
            }
          },
          "itemCount": {
            "type": "integer"
          }
        }
      },
      "list-translation-memory-field-templates": {
        "title": "List Translation Memory Field Templates",
        "x-stoplight": {
          "id": "icrpz2hliblzj"
        },
        "type": "object",
        "description": "A response for the List Translation Memory Field Templates endpoint.",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/translation-memory-field-template"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ]
      },
      "list-users-response": {
        "title": "List Users Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Users endpoint."
      },
      "list-workflows-response": {
        "title": "List Workflows Response",
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflow"
            }
          }
        },
        "required": [
          "itemCount",
          "items"
        ],
        "description": "A response for the List Workflows endpoint."
      },
      "machine-translation": {
        "title": "Machine Translation",
        "x-stoplight": {
          "id": "q83tushwc71wu"
        },
        "type": "object",
        "description": "Machine translation resource.",
        "properties": {
          "id": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "description": "\u003Cdiv style=\"display: inline;\"\u003EProvider of the machine translation.\u003C/div\u003E ",
            "x-default-field": true,
            "x-stoplight": {
              "id": "o2vxfwxx5ypjq"
            }
          },
          "type": {
            "type": "string",
            "x-stoplight": {
              "id": "027ukef1wajci"
            },
            "description": "Type of the machine translation. Can be generic or neural."
          },
          "systemId": {
            "type": "string",
            "x-stoplight": {
              "id": "6inesg0lkfqtn"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003EAppears if the machine translation is neural."
          },
          "modelSourceLanguage": {
            "x-stoplight": {
              "id": "ujzglo1mwl4pl"
            },
            "type": "string",
            "description": "Model Source language"
          },
          "modelTargetLanguage": {
            "type": "string",
            "x-stoplight": {
              "id": "dssycbmasvpyc"
            },
            "description": "Model Target language"
          },
          "matchingSourceLanguage": {
            "type": "string",
            "x-stoplight": {
              "id": "rxm5xpz6oj11t"
            },
            "description": "Specific source language supported by the model, matching the query "
          },
          "matchingTargetLanguages": {
            "type": "array",
            "x-stoplight": {
              "id": "ncr79i78eof3x"
            },
            "description": "Specific target languages supported by the model, matching the query ",
            "items": {
              "x-stoplight": {
                "id": "7ekyl863df2e7"
              },
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "provider",
          "type",
          "modelSourceLanguage",
          "modelTargetLanguage",
          "matchingSourceLanguage",
          "matchingTargetLanguages"
        ]
      },
      "object-id": {
        "title": "Object Identifier",
        "type": "object",
        "description": "An object with identifier.",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "object-id-request": {
        "title": "Object Identifier Request",
        "type": "object",
        "description": "An object with identifier.",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "pricing-model": {
        "title": "Pricing Model",
        "type": "object",
        "description": "Pricing Model resource.  (Not available for List Projects endpoint)",
        "properties": {
          "id": {
            "type": "string",
            "description": "The pricing model identifier."
          },
          "name": {
            "type": "string",
            "description": "The name of the Pricing Model. "
          },
          "description": {
            "type": "string",
            "description": "The description of the Pricing Model. ",
            "x-stoplight": {
              "id": "ip7d3npquqhtm"
            }
          },
          "currencyCode": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe currency code (ISO 4217).\u003C/div\u003E ",
            "x-default-field": true
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2",
            "x-default-field": true
          },
          "languageDirectionPricing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/language-price",
              "x-stoplight": {
                "id": "iulcrkpbt2dkl"
              }
            }
          },
          "additionalCosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/additional-cost",
              "x-stoplight": {
                "id": "8mgl2ge6it23h"
              }
            }
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "project": {
        "title": "Project",
        "type": "object",
        "description": "Project resource.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The project identifier."
          },
          "shortId": {
            "type": "string",
            "description": "The short identifier of the project."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe project name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "The project description."
          },
          "dueBy": {
            "type": "string",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The project due date. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\"",
            "format": "date-time",
            "nullable": true
          },
          "deliveredBy": {
            "type": "string",
            "example": "2022-01-12T12:00:00.000Z",
            "description": " UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\"",
            "format": "date-time",
            "nullable": true,
            "x-stoplight": {
              "id": "xxmhjuc5d6ohd"
            }
          },
          "createdAt": {
            "type": "string",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The project's creation date and time. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\"",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "The project's status.",
            "enum": [
              "created",
              "inProgress",
              "completed",
              "archived"
            ],
            "nullable": true
          },
          "statusHistory": {
            "type": "array",
            "description": "The project's status history.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/project-status-history"
            }
          },
          "languageDirections": {
            "type": "array",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe project's language directions.\u003C/div\u003E ",
            "x-default-field": true,
            "items": {
              "$ref": "#/components/schemas/language-direction"
            }
          },
          "customer": {
            "$ref": "#/components/schemas/customer"
          },
          "createdBy": {
            "$ref": "#/components/schemas/user"
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe resource folder.\u003C/div\u003E ",
            "x-default-field": true
          },
          "projectTemplate": {
            "$ref": "#/components/schemas/project-template-response"
          },
          "translationEngine": {
            "$ref": "#/components/schemas/translation-engine"
          },
          "fileProcessingConfiguration": {
            "$ref": "#/components/schemas/file-processing-configuration"
          },
          "pricingModel": {
            "$ref": "#/components/schemas/pricing-model"
          },
          "workflow": {
            "$ref": "#/components/schemas/workflow"
          },
          "projectPlan": {
            "$ref": "#/components/schemas/project-plan"
          },
          "analytics": {
            "$ref": "#/components/schemas/analytics"
          },
          "analysisStatistics": {
            "$ref": "#/components/schemas/analysis-statistics"
          },
          "quote": {
            "$ref": "#/components/schemas/quote"
          },
          "customFields": {
            "type": "array",
            "description": "The Custom Fields",
            "items": {
              "$ref": "#/components/schemas/custom-field"
            }
          },
          "tqaProfile": {
            "$ref": "#/components/schemas/tqa-profile"
          },
          "forceOnline": {
            "type": "boolean",
            "description": "This forces the project to be translated using the Language Cloud Online Editor exclusively."
          },
          "quoteTemplate": {
            "$ref": "#/components/schemas/project-quote-template"
          },
          "projectGroup": {
            "$ref": "#/components/schemas/project-group"
          },
          "projectManagers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/project-manager-response"
            }
          },
          "scheduleTemplate": {
            "$ref": "#/components/schemas/schedule-template",
            "x-stoplight": {
              "id": "dsvy1i7nqqv3z"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "project-create-request": {
        "title": "Project Create Request",
        "type": "object",
        "description": "Input for Project creation.\n\nBefore starting the project, the required configuration resources (translation engine, file processing configuration and workflow) should be set either explicitly or through a project template that contains references to these configuration resources.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The project name.\\\nUnsupported characters in the name: `\\` `/` `:` ` *` `?` `\"` `\u003C` `\u003E` `|`",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "The project description.",
            "maxLength": 1000
          },
          "dueBy": {
            "$ref": "#/components/schemas/date-time"
          },
          "projectTemplate": {
            "$ref": "#/components/schemas/object-id-request"
          },
          "languageDirections": {
            "type": "array",
            "description": "The language directions.\n\nWhen creating a project using a project template that supports multiple source languages, you must supply the `languageDirections`.\u003Cbr\u003E Note: The values for source and targe language must have the same value as the source and target language from project template.",
            "items": {
              "$ref": "#/components/schemas/language-direction-request"
            }
          },
          "location": {
            "type": "string",
            "description": "The folder identifier where the project should be created."
          },
          "translationEngine": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "fileProcessingConfiguration": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "workflow": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "pricingModel": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom-field-request"
            }
          },
          "tqaProfile": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "forceOnline": {
            "type": "boolean",
            "description": "This forces the project to be translated using the Language Cloud Online Editor exclusively."
          },
          "projectManagers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/project-manager-request"
            }
          },
          "scheduleTemplate": {
            "$ref": "#/components/schemas/configuration-resource-request",
            "x-stoplight": {
              "id": "rg3f3u9tenpfl"
            }
          }
        },
        "required": [
          "name",
          "dueBy",
          "languageDirections",
          "location"
        ]
      },
      "project-configuration": {
        "title": "Project Configuration",
        "x-stoplight": {
          "id": "qx05l6h0joh9h"
        },
        "description": "The configuration settings for a project.",
        "type": "object",
        "properties": {
          "translationMemoryFields": {
            "$ref": "#/components/schemas/translation-memory-fields",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "updateTranslationMemory": {
            "$ref": "#/components/schemas/update-translation-memory",
            "x-stoplight": {
              "id": "akhqz2lu4ks2b"
            }
          }
        }
      },
      "project-configuration-request": {
        "title": "Project Configuration Request",
        "x-stoplight": {
          "id": "5ivmv9i754acq"
        },
        "type": "object",
        "description": "A request used to update the configuration settings for a project.",
        "properties": {
          "translationMemoryFieldsSettings": {
            "$ref": "#/components/schemas/translation-memory-fields-update-request"
          },
          "updateTranslationMemory": {
            "$ref": "#/components/schemas/update-translation-memory",
            "x-stoplight": {
              "id": "zx6orwsjfd51g"
            }
          }
        }
      },
      "project-group": {
        "title": "Project Group",
        "type": "object",
        "description": "Project Group resource. (Not available for List Projects endpoint)",
        "properties": {
          "id": {
            "type": "string",
            "description": "The project group identifier."
          },
          "shortId": {
            "type": "string",
            "description": "The short identifier of the project group."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe project group name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "The project group description."
          },
          "status": {
            "type": "string",
            "description": "The status of the projects in the project group.\n\n- `new`: the group is new created, or all projects in the group have status New\n\n- `inProgress`: at least one project in the group is in progress\n\n- `completed`: all projects in the group have status Completed\n\n- `deleting`: the group is getting deleted and the projects are removing from it",
            "enum": [
              "new",
              "inProgress",
              "completed",
              "deleting"
            ]
          },
          "projects": {
            "type": "array",
            "description": "The projects in the project group.",
            "items": {
              "$ref": "#/components/schemas/project-group-project"
            }
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          },
          "createdAt": {
            "type": "string",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the project group was created. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\" ",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the project group was modified. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\"",
            "format": "date-time"
          }
        },
        "required": [
          "id"
        ]
      },
      "project-group-create-response": {
        "title": "Project Group Create Response",
        "type": "object",
        "description": "The Project Group Create response. ",
        "properties": {
          "id": {
            "type": "string",
            "description": "The project group identifier."
          },
          "name": {
            "type": "string",
            "description": "The project group name."
          },
          "description": {
            "type": "string",
            "description": "The project group description."
          },
          "status": {
            "type": "string",
            "description": "The status of the projects in the project group.\n\n- `new`: the group is newly created, or all the projects in the group have the \"New\" status \n\n- `inProgress`: at least one project in the group is in progress\n\n- `completed`: all projects in the group have the \"Completed\" status \n\n- `deleting`: the group is being deleted and the projects will be removed",
            "enum": [
              "new",
              "inProgress",
              "completed",
              "deleting"
            ]
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          },
          "shortId": {
            "type": "string",
            "x-stoplight": {
              "id": "g72simvju3z9z"
            }
          },
          "createdAt": {
            "type": "string",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the project group was created. \u003Cbr\u003E UTC Timezone  \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\"",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the project group was modified. \u003Cbr\u003E UTC Timezone  \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\"",
            "format": "date-time"
          }
        },
        "required": [
          "id"
        ]
      },
      "project-group-project": {
        "title": "Project Group Project",
        "type": "object",
        "description": "Project resource for project group.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The project identifier."
          },
          "status": {
            "type": "string",
            "description": "The project's status.",
            "enum": [
              "attaching",
              "attached",
              "detaching",
              "updating",
              "failed"
            ]
          }
        },
        "required": [
          "id"
        ],
        "x-stoplight": {
          "id": "kia482tzj55ou"
        }
      },
      "project-group-project-request": {
        "title": "Project Group Project Request",
        "x-stoplight": {
          "id": "abqotabie1tzm"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A project id."
          }
        },
        "required": [
          "id"
        ]
      },
      "project-group-create-request": {
        "title": "Project Group Create Request",
        "type": "object",
        "description": "Input for project group creation.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The project group name.\\\nMust be unique per location.\\\nUnsupported characters in the name: `\\` `/` `:` ` *` `?` `\"` `\u003C` `\u003E` `|`",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "The project group description.",
            "maxLength": 1000
          },
          "location": {
            "type": "string",
            "description": "The folder identifier where the project group should be created. If it isn't mentioned, it will be created in the Root folder. If the user does not have access in Root, the request will fail with forbidden error. "
          }
        },
        "required": [
          "name"
        ]
      },
      "project-group-update-request": {
        "title": "Project Group Update Request",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The project group name.\\\nUnsupported characters in the name: `\\` `/` `:` ` *` `?` `\"` `\u003C` `\u003E` `|`",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "The project group description.",
            "maxLength": 1000
          }
        }
      },
      "project-manager-request": {
        "title": "Project Manager Request",
        "x-stoplight": {
          "id": "6j883j92igshf"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Depending on the type, User identifier or Group identifier."
          },
          "type": {
            "type": "string",
            "enum": [
              "group",
              "user"
            ]
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "project-manager-response": {
        "title": "Project Manager Response",
        "x-stoplight": {
          "id": "jpzqsh6pvehw6"
        },
        "type": "object",
        "description": "",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "group",
              "user"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/user"
          },
          "group": {
            "$ref": "#/components/schemas/group"
          }
        }
      },
      "project-update-request": {
        "title": "Project Update Request",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The project name.\\\nUnsupported characters in the name: `\\` `/` `:` ` *` `?` `\"` `\u003C` `\u003E` `|`",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "The project description.",
            "maxLength": 1000
          },
          "dueBy": {
            "$ref": "#/components/schemas/date-time"
          },
          "deliveredBy": {
            "$ref": "#/components/schemas/date-time",
            "x-stoplight": {
              "id": "jlta5oi7fu3kf"
            },
            "description": "Value used to automatically update dueBy of the project at the Customer Quote Approval step, if this step exists in the project workflow."
          },
          "translationEngine": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "fileProcessingConfiguration": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "pricingModel": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "workflow": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "projectPlan": {
            "$ref": "#/components/schemas/project-plan-update-request"
          },
          "tqaProfile": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "quote": {
            "$ref": "#/components/schemas/quote-update-request"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom-field-request"
            }
          },
          "projectManagers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/project-manager-request"
            }
          }
        }
      },
      "project-template-create-request": {
        "title": "Project Template Create Request",
        "type": "object",
        "description": "Input for Project Template creation.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The project template name.",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "The project description.",
            "maxLength": 1000
          },
          "location": {
            "type": "string",
            "description": "The folder identifier where the project should be created."
          },
          "fileProcessingConfiguration": {
            "$ref": "#/components/schemas/configuration-resource-request",
            "x-stoplight": {
              "id": "uj8d2oyrr72tr"
            }
          },
          "projectManagers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/project-manager-request"
            }
          },
          "scheduleTemplate": {
            "$ref": "#/components/schemas/configuration-resource-request",
            "x-stoplight": {
              "id": "rg3f3u9tenpfl"
            }
          },
          "languageDirections": {
            "type": "array",
            "description": "The language directions.\n\nWhen creating a project using a project template that supports multiple source languages, you must supply the `languageDirections`.\u003Cbr\u003E Note: The values for source and targe language must have the same value as the source and target language from project template.",
            "items": {
              "$ref": "#/components/schemas/language-direction-request"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom-field-request"
            }
          },
          "translationEngine": {
            "$ref": "#/components/schemas/configuration-resource-request",
            "x-stoplight": {
              "id": "thx33vvuk5gyo"
            }
          },
          "pricingModel": {
            "$ref": "#/components/schemas/configuration-resource-request",
            "x-stoplight": {
              "id": "qmx22fog888cz"
            }
          },
          "workflow": {
            "$ref": "#/components/schemas/configuration-resource-request",
            "x-stoplight": {
              "id": "7djywbuahg9ha"
            }
          },
          "settings": {
            "$ref": "#/components/schemas/project-template-settings-request",
            "x-stoplight": {
              "id": "ygnao3kecn7hc"
            }
          }
        },
        "required": [
          "name",
          "location",
          "fileProcessingConfiguration"
        ]
      },
      "project-template-update-request": {
        "title": "Project Template Update Request",
        "x-stoplight": {
          "id": "udaysucy7sgy4"
        },
        "type": "object",
        "description": "Input for Project Template creation.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The project template name.",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "The project description.",
            "maxLength": 1000
          },
          "fileProcessingConfiguration": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "projectManagers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/project-manager-request"
            }
          },
          "scheduleTemplate": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "languageDirections": {
            "type": "array",
            "description": "The language directions.\n\nWhen creating a project using a project template that supports multiple source languages, you must supply the `languageDirections`.\u003Cbr\u003E Note: The values for source and targe language must have the same value as the source and target language from project template.",
            "items": {
              "$ref": "#/components/schemas/language-direction-request"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom-field-request"
            }
          },
          "translationEngine": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "pricingModel": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "workflow": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "settings": {
            "$ref": "#/components/schemas/project-template-settings-update-request"
          }
        }
      },
      "project-template-response": {
        "title": "Project Template",
        "x-stoplight": {
          "id": "f513d3d83fd5d"
        },
        "type": "object",
        "description": "Project template resource.  (Not available for the List Projects endpoint.)",
        "properties": {
          "id": {
            "type": "string",
            "description": "The project template identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe project template name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "The project template description."
          },
          "languageDirections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/language-direction-no-statistics"
            }
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          },
          "translationEngine": {
            "$ref": "#/components/schemas/translation-engine"
          },
          "fileProcessingConfiguration": {
            "$ref": "#/components/schemas/file-processing-configuration"
          },
          "pricingModel": {
            "$ref": "#/components/schemas/pricing-model"
          },
          "workflow": {
            "$ref": "#/components/schemas/workflow"
          },
          "customFields": {
            "type": "array",
            "description": "The Custom Fields.",
            "items": {
              "$ref": "#/components/schemas/custom-field"
            }
          },
          "forceOnline": {
            "type": "boolean",
            "description": "(Deprecated) Moved under settings.general.forceOnline",
            "deprecated": true
          },
          "projectManagers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/project-manager-response"
            }
          },
          "quoteTemplate": {
            "$ref": "#/components/schemas/project-quote-template-deprecated"
          },
          "scheduleTemplate": {
            "$ref": "#/components/schemas/schedule-template",
            "x-stoplight": {
              "id": "anjnnapb4ow78"
            }
          },
          "settings": {
            "$ref": "#/components/schemas/project-template-settings-response",
            "x-stoplight": {
              "id": "gc5bqf2ashu1e"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "project-template-settings-request": {
        "title": "Project Template Settings",
        "x-stoplight": {
          "id": "188a054a839d7"
        },
        "type": "object",
        "description": "Input for Project Template settings.",
        "properties": {
          "general": {
            "$ref": "#/components/schemas/project-template-general-settings-request"
          },
          "qualityManagement": {
            "$ref": "#/components/schemas/project-template-quality-management-settings"
          }
        }
      },
      "project-template-settings-update-request": {
        "title": "Project Template Settings",
        "x-stoplight": {
          "id": "dn5d77vdz1lvw"
        },
        "type": "object",
        "description": "Input for Project Template settings.",
        "properties": {
          "general": {
            "$ref": "#/components/schemas/project-template-general-settings-update"
          },
          "qualityManagement": {
            "$ref": "#/components/schemas/project-template-quality-management-settings"
          }
        }
      },
      "project-template-settings-response": {
        "title": "Project Template Settings",
        "x-stoplight": {
          "id": "rfvf2oks12otx"
        },
        "type": "object",
        "description": "Project Template settings. See detailed description of options on the \u003Ca href=\"https://docs.rws.com/791595/1054430/trados-enterprise---accelerate/creating-project-templates/procedure\"\u003EOfficial Documentation\u003C/a\u003E page. \n\r (Not available for List Projects/ProjectTemplates endpoint)",
        "properties": {
          "general": {
            "$ref": "#/components/schemas/project-template-general-settings-response",
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EGeneral settings, are detailed in section 10.a\u003C/div\u003E "
          },
          "batchTasks": {
            "$ref": "#/components/schemas/project-template-batch-tasks-settings"
          },
          "verification": {
            "$ref": "#/components/schemas/project-template-verification-settings"
          },
          "qualityManagement": {
            "$ref": "#/components/schemas/project-template-quality-management-settings-response"
          },
          "translationMemorySettings": {
            "$ref": "#/components/schemas/project-template-translation-memory-settings"
          }
        }
      },
      "project-template-general-settings-request": {
        "title": "General settings",
        "x-stoplight": {
          "id": "96ba14884fdf8"
        },
        "type": "object",
        "description": "General settings",
        "properties": {
          "forceOnline": {
            "type": "boolean",
            "x-stoplight": {
              "id": "dya48eul3lslu"
            },
            "description": "This forces the project to be translated using the Language Cloud Online Editor exclusively.",
            "default": false
          },
          "quoteTemplate": {
            "$ref": "#/components/schemas/configuration-resource-request",
            "x-stoplight": {
              "id": "0l9y1waovurvh"
            }
          },
          "customerPortalVisibility": {
            "type": "boolean",
            "x-stoplight": {
              "id": "76vxoxivbrgmb"
            },
            "description": "Customer Portal visibility",
            "default": true
          }
        }
      },
      "project-template-general-settings-update": {
        "title": "General settings",
        "x-stoplight": {
          "id": "qjkldydwydntm"
        },
        "type": "object",
        "description": "General settings",
        "properties": {
          "forceOnline": {
            "type": "boolean",
            "description": "This forces the project to be translated using the Language Cloud Online Editor exclusively.",
            "default": false
          },
          "quoteTemplate": {
            "$ref": "#/components/schemas/configuration-resource-request"
          },
          "customerPortalVisibility": {
            "type": "boolean",
            "description": "Customer Portal visibility",
            "default": true
          }
        }
      },
      "project-template-general-settings-response": {
        "title": "General settings",
        "x-stoplight": {
          "id": "d6p1yr5skykdb"
        },
        "type": "object",
        "description": "General settings, are detailed in section 10.a",
        "properties": {
          "forceOnline": {
            "type": "boolean",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ERestrict file downloads.",
            "x-default-field": true,
            "default": false
          },
          "allowSourceEdit": {
            "type": "boolean",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EAllow editing of source text in segments.",
            "x-default-field": true,
            "default": false
          },
          "quoteTemplate": {
            "$ref": "#/components/schemas/project-quote-template",
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E"
          },
          "customerPortalVisibility": {
            "type": "boolean",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ECustomer Portal visibility",
            "x-default-field": true,
            "default": true
          }
        }
      },
      "project-template-batch-tasks-settings": {
        "title": "Project Template Batch Tasks Settings",
        "type": "object",
        "description": "Project Template Batch Tasks Settings",
        "properties": {
          "preProcessing": {
            "$ref": "#/components/schemas/project-template-batch-tasks-preprocessing-settings",
            "x-default-field": true,
            "x-stoplight": {
              "id": "fd9mooc8in0k8"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EPre-Processing Settings, configure how TMs are applied, are detailed in section 10.b\u003C/div\u003E "
          },
          "updateTranslationMemory": {
            "$ref": "#/components/schemas/update-translation-memory-settings",
            "x-default-field": true,
            "x-stoplight": {
              "id": "mm94ig682wabo"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EConfigure how TMs are updated throughout the project workflow depending on the status of the segments. Are detailed in section 10.c\u003C/div\u003E "
          }
        }
      },
      "project-template-verification-settings": {
        "title": "Project Template Verification Settings",
        "type": "object",
        "description": "",
        "properties": {
          "tagVerifier": {
            "$ref": "#/components/schemas/project-template-verification-tag-verifier-settings",
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ETag Verifier Settings, are detailed in section 10.d\u003C/div\u003E "
          },
          "qaChecker": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-settings",
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EQA Checker Settings, are detailed in section 10.e\u003C/div\u003E "
          }
        }
      },
      "project-template-quality-management-settings": {
        "title": "Quality Managment",
        "type": "object",
        "properties": {
          "tqaProfile": {
            "$ref": "#/components/schemas/configuration-resource-request",
            "x-stoplight": {
              "id": "9n13w0ndmh8tv"
            }
          }
        }
      },
      "project-template-quality-management-settings-response": {
        "title": "Quality Managment",
        "x-stoplight": {
          "id": "a5bkdzgg7q3eh"
        },
        "type": "object",
        "properties": {
          "tqaProfile": {
            "$ref": "#/components/schemas/tqa-profile",
            "x-stoplight": {
              "id": "ln71gs3m3v6lo"
            }
          }
        }
      },
      "project-template-translation-memory-settings": {
        "title": "Translation Memory settings",
        "x-stoplight": {
          "id": "f358c4e03ac33"
        },
        "type": "object",
        "description": "Translation Memory settings",
        "properties": {
          "penalties": {
            "$ref": "#/components/schemas/project-template-TM-penalties",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          }
        }
      },
      "project-template-batch-tasks-preprocessing-settings": {
        "title": "Pre-Processing Settings",
        "x-stoplight": {
          "id": "3dzxuz1skn1pl"
        },
        "type": "object",
        "description": "Pre-Processing Settings, configure how TMs are applied, are detailed in section 10.b",
        "properties": {
          "minimumMatchValue": {
            "type": "integer",
            "minimum": 50,
            "maximum": 100,
            "default": 70,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "translationOverwriteMode": {
            "enum": [
              "keepExisting",
              "overwriteIfBetter",
              "overwriteAlways",
              "overwriteExceptPerfectMatch"
            ],
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EOptions: \r\n- `keepExisting`: no segments are overwritten, existing segments are kept;\r\n- `overwriteIfBetter`: unlocked segments (including confirmed segments) are overwritten, while unlocked Perfect Match segments and locked segments are not overwritten; \r\n- `overwriteAlways`: Perfect Match segments (both locked and unlocked) are overwritten, while other locked segments are not overwritten;\r\n- `overwriteExceptPerfectMatch`: unlocked segments (including confirmed segments) and locked segments are overwritten, while unlocked Perfect Match segments are not overwritten; \u003C/div\u003E ",
            "x-default-field": true,
            "default": "overwriteIfBetter"
          },
          "afterApplyingTranslations": {
            "type": "array",
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EDefault: `confirmExactMatches`, `confirmContextMatches`\u003C/div\u003E ",
            "items": {
              "enum": [
                "confirmExactMatches",
                "confirmContextMatches",
                "lockExactMatches",
                "lockContextMatches"
              ],
              "default": "confirmContextMatches"
            }
          },
          "noMatchFoundAction": {
            "enum": [
              "leaveTargetSegmentsEmpty",
              "copySourceToTarget"
            ],
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "default": "leaveTargetSegmentsEmpty"
          },
          "reportCrossFileRepetition": {
            "type": "boolean",
            "default": false,
            "description": "If enabled repetitions are identified and included in analysis reports."
          },
          "excludeLockedSegments": {
            "type": "boolean",
            "default": false,
            "description": "If enabled locked segments (content that must not be translated) are excluded from translation. "
          }
        }
      },
      "project-template-verification-tag-verifier-settings": {
        "title": "Tag Verifier Settings",
        "type": "object",
        "description": "Tag Verifier Settings, are detailed in section 10.d",
        "properties": {
          "enabled": {
            "type": "boolean",
            "x-stoplight": {
              "id": "zzdaica4ipzsl"
            }
          },
          "checkAddedTags": {
            "type": "boolean",
            "x-stoplight": {
              "id": "7jxj0g9hrjxdd"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "addedTagsSeverity": {
            "x-stoplight": {
              "id": "ceijjmhck9qpn"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "error"
          },
          "checkDeletedTags": {
            "type": "boolean",
            "x-stoplight": {
              "id": "rw3qbpbox585c"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "deletedTagsSeverity": {
            "x-stoplight": {
              "id": "v1367u510xuxk"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "error"
          },
          "checkTagOrderChanged": {
            "type": "boolean",
            "x-stoplight": {
              "id": "ug2e4khwq9yjn"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "tagOrderChangedSeverity": {
            "x-stoplight": {
              "id": "61mcttvp5oynd"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "warning"
          },
          "checkSpacingAroundTags": {
            "type": "boolean",
            "x-stoplight": {
              "id": "vje5xtur0mstq"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "spaceAroundTagsSeverity": {
            "x-stoplight": {
              "id": "a8nhawfmukkbc"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "note"
          },
          "ignoreFormattingTags": {
            "type": "boolean",
            "x-stoplight": {
              "id": "ucwul9whydkkk"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "ignoreLockedSegments": {
            "type": "boolean",
            "x-stoplight": {
              "id": "votezrhazpcr8"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "ignoreDifferenceBetweenNormalAndNonBreakingSpace": {
            "type": "boolean",
            "x-stoplight": {
              "id": "2tutxpylevgp5"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          }
        },
        "required": [
          "enabled"
        ]
      },
      "project-template-verification-qa-checker-settings": {
        "title": "QA checker",
        "type": "object",
        "description": "QA Checker Settings, are detailed in section 10.e",
        "properties": {
          "enabled": {
            "type": "boolean",
            "x-stoplight": {
              "id": "ht01a321btv9x"
            },
            "default": true
          },
          "allLanguages": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-all-languages",
            "x-stoplight": {
              "id": "v2h7hwcxscvdm"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "perTargetLanguage": {
            "type": "array",
            "x-stoplight": {
              "id": "doi99m8k1nucn"
            },
            "items": {
              "$ref": "#/components/schemas/project-template-verification-qa-checker-per-target-language",
              "x-stoplight": {
                "id": "pt6p63qkx37fh"
              }
            }
          }
        },
        "required": [
          "enabled"
        ]
      },
      "project-template-verification-qa-checker-all-languages": {
        "title": "All Languages settings",
        "x-stoplight": {
          "id": "u7dex87q8i5am"
        },
        "type": "object",
        "properties": {
          "segmentsVerification": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-segments-verification",
            "x-stoplight": {
              "id": "gxhqy9p1q87jg"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "segmentsToExclude": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-segments-to-exclude",
            "x-stoplight": {
              "id": "z3drrdagwesm7"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "inconsistencies": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-inconsistencies",
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "punctuation": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-punctuation",
            "x-stoplight": {
              "id": "ps49964fkhoes"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "numbers": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-numbers",
            "x-stoplight": {
              "id": "0uo9yg9qgw90j"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "wordList": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-word-list",
            "x-stoplight": {
              "id": "j7c3kcgbk71ct"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "regularExpressions": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-regular-expressions",
            "x-stoplight": {
              "id": "dedwuc8etbbew"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "trademarkCheck": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-trademark-check",
            "x-stoplight": {
              "id": "f5jsh5byu5ncp"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "lengthVerification": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-length-verification",
            "x-stoplight": {
              "id": "e0fx768sgm9t2"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          }
        }
      },
      "project-template-verification-qa-checker-per-target-language": {
        "title": "Per Language Settings",
        "x-stoplight": {
          "id": "huunxvvs0cbps"
        },
        "type": "object",
        "properties": {
          "targetLanguage": {
            "x-stoplight": {
              "id": "k7hb7dlfim7t9"
            },
            "$ref": "#/components/schemas/language"
          },
          "punctuation": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-punctuation",
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "numbers": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-numbers",
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "wordList": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-word-list",
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "regularExpressions": {
            "$ref": "#/components/schemas/project-template-verification-qa-checker-regular-expressions",
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          }
        },
        "required": [
          "targetLanguage"
        ]
      },
      "project-template-verification-qa-checker-segments-verification": {
        "title": "Segments Verification",
        "x-stoplight": {
          "id": "p5v3db4luaxqz"
        },
        "type": "object",
        "properties": {
          "checkForgottenTranslation": {
            "type": "boolean",
            "default": true,
            "x-stoplight": {
              "id": "xsjmebx726d3x"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "forgottenTranslationSeverity": {
            "x-stoplight": {
              "id": "0jd2dz8tdy6br"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "error"
          },
          "checkSourceTargetIdentical": {
            "type": "boolean",
            "x-stoplight": {
              "id": "qmqj04ozi91bk"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "sourceTargetIdenticalSeverity": {
            "x-stoplight": {
              "id": "c907ccbq4vdxn"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "warning"
          },
          "identicalSegmentsIgnoreTags": {
            "type": "boolean",
            "x-stoplight": {
              "id": "g30eue1qg70r7"
            },
            "default": false
          },
          "identicalSegmentsIgnoreCase": {
            "type": "boolean",
            "x-stoplight": {
              "id": "ici43l9x3dxk1"
            },
            "default": false
          },
          "checkTargetLonger": {
            "type": "boolean",
            "x-stoplight": {
              "id": "n80w5dcs09kxa"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "longerByValue": {
            "type": "number",
            "x-stoplight": {
              "id": "4j31z4qch04fg"
            },
            "x-default-field": true,
            "default": 50,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkTargetShorter": {
            "type": "boolean",
            "x-stoplight": {
              "id": "hpzbjbr8t6zhx"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "shorterByValue": {
            "type": "number",
            "x-stoplight": {
              "id": "6h9vfjna8ialu"
            },
            "x-default-field": true,
            "default": 50,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "ignoreSegmentsFewerThanCount": {
            "type": "number",
            "x-stoplight": {
              "id": "0y7rzdh9vmpvr"
            },
            "x-default-field": true,
            "default": 2,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "ignoreSegmentsFewerThanBase": {
            "x-stoplight": {
              "id": "17melvff79o5q"
            },
            "enum": [
              "words",
              "characters"
            ],
            "default": "characters",
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkForbiddenChars": {
            "type": "boolean",
            "x-stoplight": {
              "id": "l4ma0z3xj33q3"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "forbiddenChars": {
            "type": "string",
            "x-stoplight": {
              "id": "wi6dozpt4rqaw"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "forbiddenCharsSeverity": {
            "x-stoplight": {
              "id": "widdgh98t4w1g"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "error"
          }
        }
      },
      "project-template-verification-qa-checker-segments-to-exclude": {
        "title": "Segments to Exclude",
        "x-stoplight": {
          "id": "1rb61vur5mzn3"
        },
        "type": "object",
        "properties": {
          "excludePerfectMatchSegments": {
            "type": "boolean",
            "default": true,
            "x-stoplight": {
              "id": "lns6fv1v15m9r"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "excludeExactMatches": {
            "type": "boolean",
            "x-stoplight": {
              "id": "hkmg7bvsderss"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "excludeFuzzyMatches": {
            "type": "boolean",
            "x-stoplight": {
              "id": "40bzc9xgu79j6"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "excludeFuzzyMatchesValue": {
            "type": "number",
            "x-stoplight": {
              "id": "6nb9cw19h7j8g"
            },
            "x-default-field": true,
            "default": 99,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "excludeNewTranslation": {
            "type": "boolean",
            "x-stoplight": {
              "id": "q9nay4my2ax0d"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "excludeConfirmedTranslations": {
            "type": "boolean",
            "x-stoplight": {
              "id": "5qr82fuljzh9c"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "excludeLockedSegments": {
            "type": "boolean",
            "x-stoplight": {
              "id": "zxvvu2p3el9vo"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "excludeIdentical": {
            "type": "boolean",
            "x-stoplight": {
              "id": "wt06ljmjtzxx1"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "elementContextExclusion": {
            "type": "boolean",
            "x-stoplight": {
              "id": "ihg0auk684zwo"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "exclusionContextList": {
            "type": "array",
            "x-stoplight": {
              "id": "w8wid64dh2ofd"
            },
            "x-default-field": true,
            "items": {
              "x-stoplight": {
                "id": "uold0rq8drd0g"
              },
              "type": "string"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "reportAllNonExcluded": {
            "type": "boolean",
            "x-stoplight": {
              "id": "two2plqqt9g76"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "reportAllNonExcludedSeverity": {
            "x-stoplight": {
              "id": "24w5oqpge9vtt"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "note"
          }
        }
      },
      "project-template-verification-qa-checker-inconsistencies": {
        "title": "QA Checker Inconsistencies",
        "x-stoplight": {
          "id": "iosfg9dirb8hw"
        },
        "type": "object",
        "properties": {
          "checkInconsistentTranslations": {
            "type": "boolean",
            "default": false,
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkInconsistentTranslationsSeverity": {
            "x-stoplight": {
              "id": "bsouwbxqv95ye"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "warning"
          },
          "checkInconsistentTranslationsIgnoreTags": {
            "type": "boolean",
            "x-stoplight": {
              "id": "3koq6k6fd9l44"
            },
            "default": false
          },
          "checkInconsistentTranslationsIgnoreCase": {
            "type": "boolean",
            "x-stoplight": {
              "id": "6cmbn8w6k7fg4"
            },
            "default": false
          },
          "checkRepeatedWords": {
            "type": "boolean",
            "x-stoplight": {
              "id": "57vj6px0vfsie"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkRepeatedWordsSeverity": {
            "x-stoplight": {
              "id": "72j1swplvu10s"
            },
            "enum": [
              "error",
              "warning",
              " Note"
            ],
            "default": "warning"
          },
          "checkRepeatedWordsIgnoreNumbers": {
            "type": "boolean",
            "x-stoplight": {
              "id": "h48hxx4si6aoh"
            },
            "default": false
          },
          "checkRepeatedWordsIgnoreCase": {
            "type": "boolean",
            "x-stoplight": {
              "id": "0pjpiv5gt6y7k"
            },
            "default": false
          },
          "checkUneditedSegmentsFuzzy": {
            "x-stoplight": {
              "id": "t9fk4h0hrr5co"
            },
            "type": "boolean",
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkUneditedSegmentsFuzzySeverity": {
            "x-stoplight": {
              "id": "ry42m8y5j21he"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "warning"
          },
          "checkOnlyConfirmedSegments": {
            "type": "boolean",
            "x-stoplight": {
              "id": "ng703myrxolr9"
            },
            "default": false
          },
          "checkIfMatchScoresBelow": {
            "type": "boolean",
            "x-stoplight": {
              "id": "i05vug43v8q0w"
            },
            "default": false
          },
          "checkIfMatchScoresBelowValue": {
            "type": "number",
            "x-stoplight": {
              "id": "i05vug43v8q0w"
            },
            "default": 99
          }
        }
      },
      "project-template-verification-qa-checker-punctuation": {
        "title": "QA Checker Punctuation",
        "x-stoplight": {
          "id": "9sidt6n9cxt5y"
        },
        "type": "object",
        "properties": {
          "checkIdenticalPunctuation": {
            "type": "boolean",
            "default": true,
            "x-default-field": true,
            "x-stoplight": {
              "id": "fvt9f95rf0uen"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkIdenticalPunctuationSeverity": {
            "x-stoplight": {
              "id": "1fcl96sxrs5wx"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "warning"
          },
          "checkSpanishPunctuation": {
            "x-stoplight": {
              "id": "7fnmgzkao3fxi"
            },
            "x-default-field": true,
            "default": false,
            "type": "boolean",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkSpanishPunctuationSeverity": {
            "x-stoplight": {
              "id": "f0umcr7ywjnsf"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "warning"
          },
          "checkUnintentionalSpacesBeforePunctuation": {
            "type": "boolean",
            "x-stoplight": {
              "id": "4wnyw10rl8k1m"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkUnintentionalSpacesBeforePunctuationSeverity": {
            "x-stoplight": {
              "id": "9up0q78jlw73a"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "warning"
          },
          "checkUnintentionalSpacesBeforePunctuationValues": {
            "type": "string",
            "x-stoplight": {
              "id": "bukb4vmlo01si"
            },
            "default": ":!?;"
          },
          "punctuationSpacesFrench": {
            "type": "boolean",
            "x-stoplight": {
              "id": "n2amwff6y1fru"
            },
            "default": false
          },
          "checkMultipleSpaces": {
            "type": "boolean",
            "x-stoplight": {
              "id": "371vnwmqt53uv"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkMultipleSpacesSeverity": {
            "x-stoplight": {
              "id": "z1snyx22cm8kp"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "note"
          },
          "checkMultipleDots": {
            "type": "boolean",
            "x-stoplight": {
              "id": "wxxvehvri3o8q"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkMultipleDotsSeverity": {
            "x-stoplight": {
              "id": "s3nerdbtbe17i"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "note"
          },
          "ignoreThreeDots": {
            "type": "boolean",
            "x-stoplight": {
              "id": "128751e5f7bb0"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkExtraSpace": {
            "type": "boolean",
            "x-stoplight": {
              "id": "rczo8oi443l7b"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkExtraSpaceSeverity": {
            "x-stoplight": {
              "id": "b9qsayeygu8d5"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "warning"
          },
          "checkCapitalizationOfInitials": {
            "type": "boolean",
            "x-stoplight": {
              "id": "94fhj5alcziax"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkCapitalizationOfInitialsSeverity": {
            "x-stoplight": {
              "id": "btsm5s1bzz7aq"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "warning"
          },
          "checkConsistencyOfGlobalCapitalization": {
            "x-stoplight": {
              "id": "2b9wdh315dahs"
            },
            "type": "boolean",
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkConsistencyOfGlobalCapitalizationSeverity": {
            "x-stoplight": {
              "id": "4eohngzh0e2bc"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "warning"
          },
          "checkBrackets": {
            "type": "boolean",
            "x-stoplight": {
              "id": "lw5s7boith817"
            },
            "x-default-field": true,
            "default": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkBracketsSeverity": {
            "x-stoplight": {
              "id": "f8rpatoa21n08"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "warning"
          }
        }
      },
      "project-template-verification-qa-checker-numbers": {
        "title": "QA Checker Numbers",
        "x-stoplight": {
          "id": "95nv42e499dwi"
        },
        "type": "object",
        "properties": {
          "checkNumbers": {
            "type": "boolean",
            "default": false,
            "x-default-field": true,
            "x-stoplight": {
              "id": "jmx3msjbemxdr"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkNumbersSeverity": {
            "x-stoplight": {
              "id": "05931rv7v34yd"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "error"
          },
          "checkTimes": {
            "type": "boolean",
            "x-stoplight": {
              "id": "yjnavlbjro7zn"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkTimesSeverity": {
            "x-stoplight": {
              "id": "p7a2a445i131t"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "error"
          },
          "checkDates": {
            "type": "boolean",
            "x-stoplight": {
              "id": "yccnoxkca39wp"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkDatesSeverity": {
            "x-stoplight": {
              "id": "9e40z6bd9mv8q"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "error"
          },
          "checkMeasurements": {
            "type": "boolean",
            "x-stoplight": {
              "id": "9w2l7x89okahm"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkMeasurementsSeverity": {
            "x-stoplight": {
              "id": "5isqhxzz365vq"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "error"
          }
        }
      },
      "project-template-verification-qa-checker-word-list": {
        "title": "QA Checker Word list",
        "x-stoplight": {
          "id": "jcu8333uzax64"
        },
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": false,
            "x-stoplight": {
              "id": "1i43kmdizt8f9"
            }
          },
          "searchWholeWords": {
            "type": "boolean",
            "x-stoplight": {
              "id": "mtexp5nafx5d4"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "ignoreCase": {
            "type": "boolean",
            "x-stoplight": {
              "id": "lw4spspstngjb"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkWordListSeverity": {
            "x-stoplight": {
              "id": "4dxqub35774eb"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "warning"
          },
          "wordList": {
            "type": "array",
            "x-stoplight": {
              "id": "rjn2ec0xqsm0k"
            },
            "x-default-field": true,
            "items": {
              "x-stoplight": {
                "id": "2rknpju6n8z56"
              },
              "type": "object",
              "properties": {
                "wrongForm": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "u9yi9ohufpdvp"
                  },
                  "x-default-field": true
                },
                "correctForm": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "h4itahton32nl"
                  },
                  "x-default-field": true
                }
              }
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          }
        },
        "required": [
          "enabled"
        ]
      },
      "project-template-verification-qa-checker-regular-expressions": {
        "title": "QA Checker Regular Expressions",
        "x-stoplight": {
          "id": "xem3u8m9wipd6"
        },
        "type": "object",
        "properties": {
          "checkRegularExpressions": {
            "type": "boolean",
            "default": false,
            "x-stoplight": {
              "id": "83h1307cwqhw9"
            },
            "description": ""
          },
          "regularExpressionSeverity": {
            "x-stoplight": {
              "id": "xmi8dmu62uzi8"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "warning"
          },
          "regularExpressions": {
            "type": "array",
            "x-stoplight": {
              "id": "6z45r3k1a1b4o"
            },
            "x-default-field": true,
            "items": {
              "$ref": "#/components/schemas/project-template-verification-qa-checker-regular-expressions-model",
              "x-stoplight": {
                "id": "5e6hkwes4mo6a"
              }
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          }
        },
        "required": [
          "checkRegularExpressions"
        ]
      },
      "project-template-verification-qa-checker-regular-expressions-model": {
        "title": "Regular Expressions Model",
        "x-stoplight": {
          "id": "2rx3df3vczsr1"
        },
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "x-stoplight": {
              "id": "20v4paozpk91g"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "regexSource": {
            "x-stoplight": {
              "id": "e9lfc0qm2td5k"
            },
            "type": "string",
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "regexTarget": {
            "type": "string",
            "x-stoplight": {
              "id": "k7olv3yojvixm"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "ignoreCase": {
            "type": "boolean",
            "x-stoplight": {
              "id": "21avhvnk4l142"
            },
            "x-default-field": true,
            "default": false,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "condition": {
            "x-stoplight": {
              "id": "nmhpp19inyk2n"
            },
            "enum": [
              "targetAndSource",
              "targetNotSource",
              "sourceNotTarget",
              "sourceOnly",
              "targetOnly",
              "differentCount",
              "groupedTargetAndSource"
            ],
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          }
        }
      },
      "project-template-verification-qa-checker-trademark-check": {
        "title": "QA Checker Trademark check",
        "x-stoplight": {
          "id": "l65c655atolg3"
        },
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": true,
            "x-stoplight": {
              "id": "hrisnih0vgd4w"
            }
          },
          "trademarkSeverity": {
            "x-stoplight": {
              "id": "dfa7w4qetxl2c"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "error"
          },
          "trademarkSymbols": {
            "type": "array",
            "x-stoplight": {
              "id": "i0um9xob8izp7"
            },
            "x-default-field": true,
            "items": {
              "x-stoplight": {
                "id": "d32mt39hj0fer"
              },
              "type": "string"
            },
            "default": [
              "®",
              "©",
              "™",
              "(c)",
              "(r)",
              "(tm)"
            ],
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          }
        },
        "required": [
          "enabled"
        ]
      },
      "project-template-verification-qa-checker-length-verification": {
        "title": "QA Checker Length Verification",
        "x-stoplight": {
          "id": "ex9iomj4a786f"
        },
        "type": "object",
        "properties": {
          "checkLengthLimitation": {
            "type": "boolean",
            "default": true,
            "x-default-field": true,
            "x-stoplight": {
              "id": "7bxsr6dzipk4m"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "checkLengthLimitationSeverity": {
            "x-stoplight": {
              "id": "3wlsd7f20hftl"
            },
            "enum": [
              "error",
              "warning",
              "note"
            ],
            "default": "error"
          },
          "targetSegmentsVerificationType": {
            "x-stoplight": {
              "id": "147n1oindvqf3"
            },
            "x-default-field": true,
            "enum": [
              "fileSpecificLimit",
              "absoluteCharacterCount"
            ],
            "default": "fileSpecificLimit",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E "
          },
          "absoluteCharCountValue": {
            "type": "number",
            "x-stoplight": {
              "id": "i88shddbsddjo"
            },
            "x-default-field": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EUsed in case `targetSegmentsVerificationType = absoluteCharacterCount`\u003C/div\u003E ",
            "default": 50
          }
        }
      },
      "project-template-TM-penalties": {
        "title": "Translation Memory Penalties",
        "type": "object",
        "description": "Translation Memory Penalties",
        "properties": {
          "standardPenalties": {
            "$ref": "#/components/schemas/project-template-TM-standard-penalties",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "object",
            "x-stoplight": {
              "id": "rx66lu3x78mvr"
            }
          },
          "translationUnitStatusPenalties": {
            "$ref": "#/components/schemas/project-template-TM-translation-unit-status-penalties",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "object",
            "x-stoplight": {
              "id": "7g27gag166myh"
            }
          }
        }
      },
      "project-template-TM-standard-penalties": {
        "title": "Translation Memory Standard Penalties",
        "type": "object",
        "description": "Translation Memory Standard Penalties",
        "properties": {
          "missingFormatting": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "x-stoplight": {
              "id": "pdzeu7k11vkc4"
            },
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 1
          },
          "differentFormatting": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "x-stoplight": {
              "id": "bspk3rj8xswag"
            },
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 1
          },
          "multipleTranslations": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 1
          },
          "autoLocalization": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 0
          },
          "textReplacement": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 0
          },
          "alignment": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 1
          },
          "characterWidthDifference": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 1
          }
        }
      },
      "project-template-TM-translation-unit-status-penalties": {
        "title": "Translation Memory Translation Unit Status Penalties",
        "type": "object",
        "description": "Translation Memory Translation Unit Status Penalties",
        "properties": {
          "translated": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 0
          },
          "rejectedTranslation": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 0
          },
          "approvedTranslation": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 0
          },
          "rejectedSignOff": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 0
          },
          "approvedSignOff": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 0
          },
          "notTranslated": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 0
          },
          "draft": {
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "default": 0
          }
        }
      },
      "project-plan": {
        "title": "Project Plan",
        "type": "object",
        "description": "The configurations of the tasks that will be created in the future. (Not available for List Projects endpoint)",
        "properties": {
          "taskConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/project-plan-task-configuration"
            }
          }
        }
      },
      "project-plan-task-configuration": {
        "title": "Project Plan Task Configuration",
        "type": "object",
        "description": "The configuration of a task that will be created in the future.",
        "properties": {
          "taskTemplate": {
            "$ref": "#/components/schemas/object-id"
          },
          "scope": {
            "$ref": "#/components/schemas/task-configuration-scope"
          },
          "assignees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflow-task-assignee"
            }
          },
          "isSkipped": {
            "type": "boolean",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ESpecifies if the task will be skipped.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "dueBy": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The due date of the future task. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\"",
            "nullable": true
          }
        },
        "required": [
          "taskTemplate",
          "scope"
        ]
      },
      "project-plan-task-assignee-request": {
        "title": "Project Plan Task Assignee Request",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "user",
              "group",
              "vendorOrderTemplate",
              "projectCreator"
            ]
          },
          "id": {
            "type": "string",
            "description": "The user, group or vendor identifier, depending on the type chosen. It is not required for `projectCreator`."
          }
        },
        "required": [
          "type"
        ]
      },
      "project-plan-update-request": {
        "title": "Project Plan Update Request",
        "type": "object",
        "description": "Updates the configurations of the tasks that will be created in the future. \nFor example, you can change the assignee of the \"translation\" task while the project is in the \"preprocessing\" phase.",
        "properties": {
          "taskConfigurations": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/project-plan-task-configuration-request"
            }
          }
        },
        "required": [
          "taskConfigurations"
        ]
      },
      "project-plan-task-configuration-request": {
        "title": "Project Plan Task Configuration Request",
        "type": "object",
        "description": "A project plan task configuration request. Used to update a task that will be created in the future.",
        "properties": {
          "taskTemplate": {
            "$ref": "#/components/schemas/object-id-request"
          },
          "isSkipped": {
            "type": "boolean",
            "description": "Specifies if the task will be skipped. \nIf you want to skip all the target languages for the given task, set the scope as \"global\"."
          },
          "assignees": {
            "type": "array",
            "description": "Specifies the list of assignees for the future task. When the 'isSkipped' field is set to 'true', an empty list of assignees should be specified.",
            "items": {
              "$ref": "#/components/schemas/project-plan-task-assignee-request"
            }
          },
          "scope": {
            "$ref": "#/components/schemas/task-configuration-scope-request"
          },
          "dueBy": {
            "$ref": "#/components/schemas/date-time"
          }
        },
        "required": [
          "taskTemplate",
          "isSkipped",
          "assignees",
          "scope"
        ]
      },
      "project-status-history": {
        "title": "Project Status History Item",
        "type": "object",
        "description": "An Item which describes a change in the status of the project.",
        "properties": {
          "from": {
            "type": "string",
            "description": "Specifies the project status previous to the change.",
            "enum": [
              "none",
              "created",
              "inProgress",
              "completed"
            ]
          },
          "to": {
            "type": "string",
            "description": "Specifies the project status post change.",
            "enum": [
              "created",
              "inProgress",
              "completed"
            ]
          },
          "by": {
            "$ref": "#/components/schemas/user"
          },
          "timestamp": {
            "$ref": "#/components/schemas/date-time",
            "x-default-field": true,
            "description": "The time and date when the status history was updated.  \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\""
          }
        },
        "required": [
          "from",
          "to"
        ]
      },
      "quote": {
        "title": "Quote",
        "type": "object",
        "description": "Project quote.",
        "properties": {
          "totalAmount": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ETotal translation fee.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "currencyCode": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe currency code (ISO 4217).\u003C/div\u003E ",
            "x-default-field": true
          },
          "translationCosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/quote-translation-cost"
            }
          },
          "languageCosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/quote-language-cost"
            }
          },
          "additionalCosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/quote-additional-cost"
            }
          }
        }
      },
      "quote-additional-cost": {
        "title": "Quote Additional Cost",
        "type": "object",
        "description": "Other extra fees not captured by translationCosts and languageCosts.",
        "properties": {
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe name of the additional cost.\u003C/div\u003E "
          },
          "count": {
            "type": "number",
            "description": "The number of units used to compute the total. Used only for 'volume', 'hourly', 'perPage' and 'percentage' cost types.",
            "nullable": true
          },
          "total": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe computed cost.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "cost": {
            "type": "number",
            "description": "The cost of a unit.",
            "nullable": true
          },
          "costType": {
            "type": "string",
            "enum": [
              "volume",
              "perTargetLanguage",
              "perFile",
              "hourly",
              "percentage",
              "perPage",
              "conditional"
            ],
            "description": "The type of the additional cost.",
            "nullable": true
          },
          "volumeUnitType": {
            "type": "string",
            "description": "The unit type of the 'volume' cost, used as a reference for the unit cost.",
            "enum": [
              "words",
              "characters"
            ],
            "nullable": true
          },
          "costOrder": {
            "type": "integer",
            "description": "Indicates the order in which the additional cost is computed.",
            "nullable": true
          },
          "conditionalCostType": {
            "type": "string",
            "description": "Describes how the cost of type 'conditional' will be added to total cost.",
            "enum": [
              "absolute",
              "relative",
              "percentage"
            ],
            "nullable": true
          },
          "conditionalCostOperator": {
            "type": "string",
            "description": "The operator applied between the 'costVariable' and 'operand'.",
            "enum": [
              "less",
              "lessOrEqual",
              "greater",
              "greaterOrEqual"
            ],
            "nullable": true
          },
          "conditionalCostVariable": {
            "type": "string",
            "description": "The variable that is evaluated against the 'operand' based on the 'costOperator'.",
            "enum": [
              "wordCount",
              "runningTotal"
            ],
            "nullable": true
          },
          "conditionalCostThreshold": {
            "description": "The value that is evaluated against the 'costVariable' based on the 'costOperator'.",
            "type": "number",
            "nullable": true
          },
          "runningTotal": {
            "type": "number",
            "description": "The sum of all the previously computed costs.",
            "nullable": true
          }
        }
      },
      "quote-additional-cost-request": {
        "title": "Quote Additional Cost Request",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the additional cost."
          },
          "count": {
            "type": "number",
            "description": "The number of units used to compute the total. Used only for 'volume', 'hourly', 'perPage' and 'percentage' cost types."
          },
          "cost": {
            "type": "number",
            "description": "The cost of a unit."
          },
          "costType": {
            "type": "string",
            "enum": [
              "volume",
              "perTargetLanguage",
              "perFile",
              "hourly",
              "percentage",
              "perPage",
              "conditional"
            ],
            "description": "The type of the additional cost.",
            "nullable": true
          },
          "volumeUnitType": {
            "type": "string",
            "description": "The unit type of the 'volume' cost, used for counting the units.",
            "enum": [
              "words",
              "characters"
            ],
            "nullable": true
          },
          "costOrder": {
            "type": "integer",
            "description": "Indicates the order in which the additional cost is computed."
          },
          "conditionalCostType": {
            "type": "string",
            "description": "Describes how the cost of type 'conditional' will be added to total cost.",
            "enum": [
              "absolute",
              "relative",
              "percentage"
            ],
            "nullable": true
          },
          "conditionalCostOperator": {
            "type": "string",
            "description": "The operator applied between the 'costVariable' and 'operand'.",
            "enum": [
              "less",
              "lessOrEqual",
              "greater",
              "greaterOrEqual"
            ],
            "nullable": true
          },
          "conditionalCostVariable": {
            "type": "string",
            "description": "The variable that is evaluated against the 'operand' based on the 'costOperator'.",
            "enum": [
              "wordCount",
              "runningTotal"
            ],
            "nullable": true
          },
          "conditionalCostThreshold": {
            "description": "The value that is evaluated against the 'costVariable' based on the 'costOperator'.",
            "type": "number"
          }
        },
        "required": [
          "name",
          "count",
          "cost",
          "costOrder",
          "conditionalCostThreshold"
        ]
      },
      "quote-language-cost": {
        "title": "Quote Language Cost",
        "type": "object",
        "description": "Fees relevant for a specific target language.",
        "properties": {
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe name of the additional cost.\u003C/div\u003E ",
            "x-default-field": true
          },
          "count": {
            "type": "number",
            "description": "The number of units used to compute the total. Used only for 'volume', 'hourly', 'perPage' and 'percentage' cost types.",
            "nullable": true
          },
          "total": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe computed cost.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "cost": {
            "type": "number",
            "description": "The cost of a unit.",
            "nullable": true
          },
          "costType": {
            "type": "string",
            "enum": [
              "volume",
              "perTargetLanguage",
              "perFile",
              "hourly",
              "percentage",
              "perPage",
              "conditional"
            ],
            "description": "The type of the additional cost.",
            "nullable": true
          },
          "volumeUnitType": {
            "type": "string",
            "description": "The unit type of the 'volume' cost, used as a reference for the unit cost.",
            "enum": [
              "words",
              "characters"
            ],
            "nullable": true
          },
          "targetLanguage": {
            "$ref": "#/components/schemas/language"
          },
          "costOrder": {
            "type": "integer",
            "description": "Indicates the order in which the additional cost is computed.",
            "nullable": true
          },
          "conditionalCostType": {
            "type": "string",
            "description": "The condition type of the conditional cost.",
            "enum": [
              "absolute",
              "relative",
              "percentage"
            ],
            "nullable": true
          },
          "conditionalCostOperator": {
            "type": "string",
            "description": "The operator applied between the 'costVariable' and 'operand'.",
            "enum": [
              "less",
              "lessOrEqual",
              "greater",
              "greaterOrEqual"
            ],
            "nullable": true
          },
          "conditionalCostVariable": {
            "type": "string",
            "description": "The variable that is evaluated against the 'operand' based on the 'costOperator'.",
            "enum": [
              "wordCount",
              "runningTotal"
            ],
            "nullable": true
          },
          "conditionalCostThreshold": {
            "description": "The value that is evaluated against the 'costVariable' based on the 'costOperator'.",
            "type": "number",
            "nullable": true
          },
          "runningTotal": {
            "type": "number",
            "description": "The sum of all the previously computed costs.",
            "nullable": true
          }
        }
      },
      "quote-language-cost-request": {
        "title": "Quote Language Cost Request",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the additional cost."
          },
          "count": {
            "type": "number",
            "description": "The number of units used to compute the total. Used only for 'volume', 'hourly', 'perPage' and 'percentage' cost types."
          },
          "cost": {
            "type": "number",
            "description": "The cost of a unit."
          },
          "costType": {
            "type": "string",
            "enum": [
              "volume",
              "perTargetLanguage",
              "perFile",
              "hourly",
              "percentage",
              "perPage",
              "conditional"
            ],
            "description": "The type of the additional cost.",
            "nullable": true
          },
          "volumeUnitType": {
            "type": "string",
            "description": "The unit type of the 'volume' cost, used for counting the units.",
            "enum": [
              "words",
              "characters"
            ],
            "nullable": true
          },
          "targetLanguage": {
            "$ref": "#/components/schemas/target-language-request"
          },
          "costOrder": {
            "type": "integer",
            "description": "Indicates the order in which the additional cost is computed."
          },
          "conditionalCostType": {
            "type": "string",
            "description": "Describes how the cost of type 'conditional' will be added to total cost.",
            "enum": [
              "absolute",
              "relative",
              "percentage"
            ],
            "nullable": true
          },
          "conditionalCostOperator": {
            "type": "string",
            "description": "The operator applied between the 'costVariable' and 'operand'.",
            "enum": [
              "less",
              "lessOrEqual",
              "greater",
              "greaterOrEqual"
            ],
            "nullable": true
          },
          "conditionalCostVariable": {
            "type": "string",
            "description": "The variable that is evaluated against the 'operand' based on the 'costOperator'.",
            "enum": [
              "wordCount",
              "runningTotal"
            ],
            "nullable": true
          },
          "conditionalCostThreshold": {
            "description": "The value that is evaluated against the 'costVariable' based on the 'costOperator'.",
            "type": "number"
          }
        },
        "required": [
          "name",
          "count",
          "cost",
          "costOrder",
          "conditionalCostThreshold"
        ]
      },
      "quote-translation-cost": {
        "title": "Quote Translation Cost",
        "type": "object",
        "description": "Fees calculated based on segment status (new, translated, signed off) and previous leverage (100% match and identical context, 100% match, \u003C100%match, cross-file repetitions).",
        "properties": {
          "total": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe total cost for the current target language.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "targetLanguage": {
            "$ref": "#/components/schemas/language"
          },
          "exactMatch": {
            "$ref": "#/components/schemas/translation-cost-item"
          },
          "inContextExactMatch": {
            "$ref": "#/components/schemas/translation-cost-item"
          },
          "new": {
            "$ref": "#/components/schemas/translation-cost-item"
          },
          "perfectMatch": {
            "$ref": "#/components/schemas/translation-cost-item"
          },
          "repetitions": {
            "$ref": "#/components/schemas/translation-cost-item"
          },
          "machineTranslation": {
            "$ref": "#/components/schemas/translation-cost-item"
          },
          "fuzzyMatch": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/translation-cost-fuzzy-item"
            }
          },
          "runningTotal": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe sum of all the previously computed costs.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          }
        }
      },
      "quote-update-request": {
        "title": "Quote Update Request",
        "type": "object",
        "properties": {
          "languageCosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/quote-language-cost-request"
            }
          },
          "additionalCosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/quote-additional-cost-request"
            }
          }
        }
      },
      "project-quote-template": {
        "title": "Project Quote Template",
        "type": "object",
        "description": "Project Quote Template resource.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the quote template."
          },
          "name": {
            "type": "string",
            "description": "The name of the quote template."
          },
          "description": {
            "type": "string",
            "description": "The description of the quote template."
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          }
        },
        "required": [
          "id"
        ],
        "x-stoplight": {
          "id": "0sp6j7989p1j7"
        }
      },
      "project-quote-template-deprecated": {
        "title": "Project Quote Template",
        "type": "object",
        "description": "(Deprecated) moved under settings.general.quoteTemplate",
        "deprecated": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the quote template."
          },
          "name": {
            "type": "string",
            "description": "The name of the quote template."
          },
          "description": {
            "type": "string",
            "description": "The description of the quote template."
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          }
        },
        "required": [
          "id"
        ],
        "x-stoplight": {
          "id": "0sp6j7989p1j7"
        }
      },
      "rate-limit": {
        "title": "Rate Limit",
        "type": "object",
        "description": "Rate Limit entry",
        "properties": {
          "policyName": {
            "type": "string",
            "description": "Name of the rate limit policy."
          },
          "description": {
            "type": "string",
            "description": "Describes which endpoints are affected by this limit, and for which time frame."
          },
          "limit": {
            "type": "integer",
            "description": "The limit in effect for the endpoint and time frame."
          },
          "remainingQuota": {
            "type": "integer",
            "description": "The remaining quota in effect for the endpoint and time frame."
          }
        },
        "required": [
          "policyName",
          "description",
          "limit",
          "remainingQuota"
        ]
      },
      "resource-folder": {
        "title": "Resource Folder",
        "type": "object",
        "description": "The resource folder.",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe name of the folder.\u003C/div\u003E ",
            "x-default-field": true
          }
        },
        "required": [
          "id"
        ],
        "deprecated": true
      },
      "resource-folder-request": {
        "title": "Resource Folder Request",
        "type": "object",
        "description": "Resource folder.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The folder identifier."
          },
          "name": {
            "type": "string",
            "description": "The name of the folder."
          }
        },
        "required": [
          "id"
        ]
      },
      "remove-projects-from-group-request": {
        "title": "Remove Projects From Group Request",
        "type": "object",
        "description": "Input for removing projects from group.",
        "properties": {
          "projects": {
            "type": "array",
            "description": "The projects to be removed from group.",
            "items": {
              "$ref": "#/components/schemas/project-group-project-request"
            }
          }
        },
        "required": [
          "projects"
        ]
      },
      "schedule-template": {
        "title": "Schedule Template",
        "x-stoplight": {
          "id": "c2a2ilce5ag48"
        },
        "type": "object",
        "description": "Schedule Template resource",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ESchedule Template name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "Schedule Template description."
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          },
          "configurations": {
            "type": "array",
            "x-stoplight": {
              "id": "w3yw55a536y3m"
            },
            "items": {
              "$ref": "#/components/schemas/schedule-template-configuration",
              "x-stoplight": {
                "id": "z1pcd596vxyhe"
              }
            }
          },
          "projectScheduleConfiguration": {
            "$ref": "#/components/schemas/schedule-template-project-configuration",
            "x-stoplight": {
              "id": "jh0as6p6odfm0"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "schedule-template-configuration": {
        "title": "Schedule Template Configuration",
        "x-stoplight": {
          "id": "p8wulrz2rytzj"
        },
        "type": "object",
        "description": "Schedule Template Configuration resource",
        "properties": {
          "taskTypeId": {
            "type": "string",
            "x-stoplight": {
              "id": "ussbf9yycjf0h"
            },
            "description": "The identifier of the human task type. "
          },
          "taskTypeName": {
            "type": "string",
            "x-stoplight": {
              "id": "lny75nk7b0g3j"
            },
            "description": "The name of the task type."
          },
          "schedules": {
            "x-stoplight": {
              "id": "iu34k91wl2eql"
            },
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schedule-template-configuration-schedules",
              "x-stoplight": {
                "id": "j29hssjf8a1nu"
              }
            }
          }
        },
        "required": [
          "taskTypeId"
        ]
      },
      "schedule-template-project-configuration": {
        "title": "Schedule Template Project Configuration",
        "x-stoplight": {
          "id": "ezrw8kwy2cc2x"
        },
        "type": "object",
        "description": "Schedule Template Project Configuration resource",
        "properties": {
          "duration": {
            "type": "integer",
            "x-stoplight": {
              "id": "ml3qutq4qy3km"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EExpressed in minutes.\u003C/div\u003E ",
            "default": 0,
            "minimum": 0
          },
          "reminder": {
            "x-stoplight": {
              "id": "3z5tzoznv1gci"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EExpressed in minutes.\u003C/div\u003E ",
            "enum": [15, 30, 60, 120, 480, 1440, 2880]
          }
        }
      },
      "schedule-template-configuration-request": {
        "title": "Schedule Template Configuration Request",
        "x-stoplight": {
          "id": "pzjg39ikgktrd"
        },
        "type": "object",
        "description": "Schedule Template Configuration resource",
        "properties": {
          "taskTypeId": {
            "type": "string",
            "description": "The identifier of the human task type. "
          },
          "schedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schedule-template-configuration-schedules"
            }
          }
        },
        "required": [
          "taskTypeId"
        ]
      },
      "schedule-template-configuration-schedules": {
        "title": "Schedule Template Configuration Schedules",
        "x-stoplight": {
          "id": "9kw1yuhfb39q1"
        },
        "type": "object",
        "description": "The Configuration Schedules resource.",
        "properties": {
          "scope": {
            "type": "string",
            "x-stoplight": {
              "id": "gn25uzdk9mu85"
            },
            "description": "The scope of this configuration schedule. \\\r\nglobal -\u003E schedule of the task \\\r\nsourceLanguage -\u003E schedule of the specific task when the sourceLanguage matches this object's sourceLanguage\\\r\nlanguageDirection -\u003E schedule of the specific task when the languageDirection matches this object's languageDirection",
            "enum": [
              "global",
              "sourceLanguage",
              "languageDirection"
            ]
          },
          "duration": {
            "type": "integer",
            "x-stoplight": {
              "id": "r20a6jq7s4a99"
            },
            "description": "Expressed in minutes.",
            "minimum": 0
          },
          "reminder": {
            "x-stoplight": {
              "id": "wa77577h9gchk"
            },
            "description": "Expressed in minutes.\r\n\r\n",
            "enum": [15, 30, 60, 120, 480, 1440, 2880]
          },
          "sourceLanguage": {
            "type": "string",
            "x-stoplight": {
              "id": "x9sswos4516kw"
            },
            "example": " \"en-US\", de-DE\""
          },
          "targetLanguage": {
            "type": "string",
            "x-stoplight": {
              "id": "kptfl33vpqdt7"
            },
            "example": " \"en-US\", de-DE\""
          }
        },
        "required": [
          "scope"
        ]
      },
      "schedule-template-update-request": {
        "title": "Schedule Template Update Request",
        "x-stoplight": {
          "id": "eurbufhjxy71a"
        },
        "type": "object",
        "description": "Schedule Template update request model",
        "properties": {
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display: inline;\"\u003ESchedule Template name.\u003C/div\u003E ",
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "description": "Schedule Template description.",
            "maxLength": 1000
          },
          "configurations": {
            "type": "array",
            "x-stoplight": {
              "id": "nzqkfrvaq8mck"
            },
            "items": {
              "$ref": "#/components/schemas/schedule-template-configuration-request",
              "x-stoplight": {
                "id": "kw88kaez7l361"
              }
            }
          },
          "projectScheduleConfiguration": {
            "$ref": "#/components/schemas/schedule-template-project-configuration",
            "x-stoplight": {
              "id": "glzz39c8n1mpo"
            }
          }
        }
      },
      "schedule-template-create-request": {
        "title": "Schedule Template Create Request",
        "x-stoplight": {
          "id": "nzunuxlururt7"
        },
        "type": "object",
        "description": "Schedule Template create request model",
        "properties": {
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display: inline;\"\u003ESchedule Template name.\u003C/div\u003E ",
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "description": "Schedule Template description.",
            "maxLength": 1000
          },
          "location": {
            "type": "string",
            "x-stoplight": {
              "id": "j38jg0ywij0e6"
            },
            "description": "The folder identifier where the schedule template should be created. "
          },
          "configurations": {
            "type": "array",
            "x-stoplight": {
              "id": "eufab0pne7lzd"
            },
            "items": {
              "$ref": "#/components/schemas/schedule-template-configuration-request",
              "x-stoplight": {
                "id": "oxk22epaz3rbi"
              }
            }
          },
          "projectScheduleConfiguration": {
            "$ref": "#/components/schemas/schedule-template-project-configuration",
            "x-stoplight": {
              "id": "rqi0t3ue6dm3m"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "simple-language-direction": {
        "title": "Simple Language Direction",
        "type": "object",
        "description": "A basic language direction.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The language direction identifier."
          },
          "sourceLanguage": {
            "$ref": "#/components/schemas/language",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe language object.\u003C/div\u003E ",
            "x-default-field": true
          },
          "targetLanguage": {
            "$ref": "#/components/schemas/language",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe language object.\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "source-file": {
        "title": "Source File",
        "type": "object",
        "description": "Source File.",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe file name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "role": {
            "$ref": "#/components/schemas/file-role",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe file role.\u003C/div\u003E ",
            "x-default-field": true
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "versions": {
            "type": "array",
            "description": "The source file versions. (Not available for List endpoints).",
            "items": {
              "$ref": "#/components/schemas/source-file-version"
            }
          },
          "targetLanguages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/language"
            }
          },
          "path": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "source-file-request": {
        "type": "object",
        "title": "Source File Request",
        "description": "Source file properties sent as a JSON inside a text part.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the source file.\n\n\nThe character limit is calculated together with the `path` length.",
            "minLength": 1,
            "maxLength": 255
          },
          "role": {
            "type": "string",
            "enum": [
              "translatable",
              "reference",
              "unknown"
            ],
            "description": "The role of the source file. When set to unknown or translatable, the system will try to detect the file type."
          },
          "type": {
            "type": "string",
            "enum": [
              "native",
              "bcm",
              "sdlxliff"
            ],
            "description": "The type of the file."
          },
          "language": {
            "type": "string",
            "description": "The language of the file in code 5 (ex. en-US)"
          },
          "targetLanguages": {
            "type": "array",
            "description": "A list of target languages in code 5 (ex. en-US)",
            "items": {
              "type": "string"
            }
          },
          "path": {
            "type": "array",
            "description": "Path represents the hierarchy of the source file inside the zip. For example `/ZipWithFolders/Finance/2021/Finance_2021_dummy_EN.txt` would be sent as: \n\n```json \n\"path\": [ \n  \"ZipWithFolders\", \n  \"Finance\", \n  \"2021\", \n  \"Finance_2021_dummy_EN.txt\" \n]\n```\n\nThe character limit is calculated together with the `name` length.",
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            }
          }
        },
        "required": [
          "name",
          "role",
          "type",
          "language"
        ]
      },
      "source-file-rename-request": {
        "title": "Source File Rename Request",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the source file.\\\nThe name should not contain the extension.\\\nUnsupported characters in the name: `\u003C`, `\u003E`, `:`, `\"`, `/`, `\\`, `|`, `?`, `*`.",
            "minLength": 1
          },
          "updateTargetFilesName": {
            "type": "boolean",
            "default": false,
            "description": "Option for renaming also the target files."
          }
        },
        "required": [
          "name"
        ]
      },
      "source-files-update-request": {
        "title": "Source Files Update Request",
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/source-file-update-request"
            }
          }
        },
        "required": [
          "files"
        ]
      },
      "source-file-update-request": {
        "title": "Source File Update Request",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The source file identifier.",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The source file name.\\\nThe name should not contain the extension.\\\nUnsupported characters in the name: `\u003C`, `\u003E`, `:`, `\"`, `/`, `\\`, `|`, `?`, `*`.",
            "minLength": 1
          },
          "updateTargetFilesName": {
            "type": "boolean",
            "default": false,
            "description": "Option for renaming the target files too."
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "source-file-attachment-request": {
        "title": "Source File Attachment Request",
        "type": "object",
        "description": "",
        "properties": {
          "sourceFilesAttachment": {
            "type": "array",
            "description": "List of Attached Source File properties referencing previously uploaded file",
            "items": {
              "$ref": "#/components/schemas/source-file-attachment-request-item"
            }
          }
        }
      },
      "source-file-attachment-response": {
        "title": "Source File Attachment Response",
        "type": "object",
        "description": "",
        "properties": {
          "sourceFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/source-file"
            }
          }
        }
      },
      "source-file-attachment-request-item": {
        "title": "Source File Attachment Request Item",
        "type": "object",
        "description": "Attached Source File properties referencing previously uploaded file",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the source file.\n\nThe character limit is calculated together with the `path` length.",
            "maxLength": 200,
            "minLength": 1
          },
          "role": {
            "type": "string",
            "enum": [
              "translatable",
              "reference",
              "unknown"
            ],
            "description": "The role of the source file. When set to unknown or translatable, the system will try to detect the file type."
          },
          "fileUrl": {
            "type": "string",
            "description": "The identifier of the previously uploaded file."
          },
          "type": {
            "type": "string",
            "enum": [
              "native",
              "bcm",
              "sdlxliff"
            ],
            "description": "The type of the file."
          },
          "language": {
            "$ref": "#/components/schemas/source-language-request"
          },
          "targetLanguages": {
            "type": "array",
            "description": "A list of target languages in code 5 (ex. en-US)",
            "items": {
              "$ref": "#/components/schemas/target-language-request"
            }
          },
          "path": {
            "type": "array",
            "description": "Path represents the hierarchy of the source file inside the zip. For example `/ZipWithFolders/Finance/2021/Finance_2021_dummy_EN.txt` would be sent as: \n\n```json \n\"path\": [ \n  \"ZipWithFolders\", \n  \"Finance\", \n  \"2021\", \n  \"Finance_2021_dummy_EN.txt\" \n]\n```\n\nThe character limit is calculated together with the   `name` length.",
            "items": {
              "type": "string",
              "maxLength": 200,
              "minLength": 0
            }
          }
        },
        "required": [
          "name",
          "role",
          "fileUrl",
          "type",
          "language"
        ]
      },
      "source-file-properties-response": {
        "title": "Source File Properties Response",
        "type": "object",
        "description": "",
        "properties": {
          "fileRole": {
            "type": "string",
            "description": "The file's role.",
            "enum": [
              "translatable",
              "reference"
            ]
          },
          "fileTypeSettingsId": {
            "type": "string",
            "description": "The file type settings identifier."
          }
        },
        "required": [
          "fileRole",
          "fileTypeSettingsId"
        ]
      },
      "source-file-properties-update-request": {
        "title": "Source File Properties Update Request",
        "type": "object",
        "description": "",
        "properties": {
          "fileRole": {
            "type": "string",
            "description": "The file role.",
            "enum": [
              "translatable",
              "reference"
            ]
          },
          "fileTypeSettingsId": {
            "type": "string",
            "description": "The file type settings identifier."
          }
        }
      },
      "source-file-version-properties-create-request": {
        "title": "Source File Version Properties Create Request",
        "type": "object",
        "description": "",
        "properties": {
          "type": {
            "type": "string",
            "description": "The version type.",
            "enum": [
              "bcm",
              "native"
            ]
          },
          "fileTypeSettingsId": {
            "type": "string",
            "description": "The file type settings identifier."
          }
        },
        "required": [
          "type"
        ]
      },
      "source-file-version": {
        "title": "Source File Version",
        "type": "object",
        "description": "Source File Version.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The source file version identifier."
          },
          "type": {
            "type": "string",
            "enum": [
              "native",
              "bcm"
            ],
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe version type.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe file version name. This is a synthetic value, typically constructed from the version number and the originating task name.\u003C/div\u003E",
            "x-default-field": true
          },
          "version": {
            "type": "integer",
            "description": "A numeric value, incremented for each new version."
          },
          "originatingTaskId": {
            "type": "string",
            "x-stoplight": {
              "id": "fsakhiag03gl9"
            },
            "description": "The identifier of the task that generated the file."
          }
        },
        "required": [
          "id",
          "version"
        ]
      },
      "source-file-version-response": {
        "title": "Source File Version Response",
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "string",
            "description": "The source file version identifier."
          },
          "type": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe version type.\u003C/div\u003E ",
            "enum": [
              "native",
              "bcm"
            ],
            "x-default-field": true
          }
        },
        "required": [
          "id"
        ]
      },
      "source-language-request": {
        "title": "Source Language Request",
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string",
            "description": "The language code."
          }
        },
        "required": [
          "languageCode"
        ]
      },
      "target-file-version-properties-create-request": {
        "title": "Target File Version Properties Create Request",
        "type": "object",
        "description": "",
        "properties": {
          "type": {
            "type": "string",
            "description": "The version type.",
            "enum": [
              "bcm",
              "native"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "target-file-version-response": {
        "title": "Target File Version Response",
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "string",
            "description": "The target file version identifier."
          },
          "type": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe version type.\u003C/div\u003E ",
            "enum": [
              "native",
              "bcm"
            ],
            "x-default-field": true
          }
        },
        "required": [
          "id"
        ]
      },
      "task": {
        "title": "Task",
        "type": "object",
        "description": "Task.",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe task status.\u003C/div\u003E ",
            "enum": [
              "created",
              "inProgress",
              "completed",
              "failed",
              "skipped",
              "canceled"
            ],
            "x-default-field": true,
            "nullable": true
          },
          "taskType": {
            "$ref": "#/components/schemas/task-type"
          },
          "input": {
            "$ref": "#/components/schemas/task-input"
          },
          "inputFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/task-input-file"
            }
          },
          "owner": {
            "$ref": "#/components/schemas/user"
          },
          "assignees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/task-assignee"
            }
          },
          "dueBy": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The task due date. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\"",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the task was created.  \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\" ",
            "nullable": true
          },
          "applicableOutcomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/task-outcome"
            }
          },
          "outcome": {
            "type": "string",
            "description": "The outcome of the task type. It is retrieved only if the task is completed. It should match one of the legal outcomes in the task type."
          },
          "comment": {
            "type": "string",
            "description": "The comment associated with this task at completion."
          },
          "project": {
            "$ref": "#/components/schemas/project"
          },
          "failedTask": {
            "$ref": "#/components/schemas/failed-task"
          },
          "completedAt": {
            "$ref": "#/components/schemas/date-time",
            "description": "The completion timestamp  of the task. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sssZ\""
          }
        },
        "required": [
          "id"
        ]
      },
      "task-error": {
        "title": "Task Error",
        "type": "object",
        "description": "Task Error.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The task error name."
          },
          "code": {
            "type": "string",
            "description": "The task error code."
          },
          "value": {
            "type": "string",
            "description": "The task error value."
          }
        }
      },
      "task-assignee": {
        "title": "Task Assignee",
        "type": "object",
        "description": "Task assignee. Based on the \"type\", the following properties can be retrieved: \"user\", \"group\" or \"vendorOrderTemplate\". For \"projectCreator\" and \"projectManager\" no other properties are available.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "user",
              "group",
              "vendorOrderTemplate",
              "projectCreator"
            ],
            "description": "Type \"projectCreator\" - reserved for future use. Should be able to handle it and ignore it if received."
          },
          "user": {
            "$ref": "#/components/schemas/user",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EA user.\u003C/div\u003E ",
            "x-default-field": true
          },
          "group": {
            "$ref": "#/components/schemas/group",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EA group of users.\u003C/div\u003E ",
            "x-default-field": true
          },
          "vendorOrderTemplate": {
            "$ref": "#/components/schemas/vendor-order-template"
          }
        },
        "required": [
          "type"
        ]
      },
      "task-assignee-request": {
        "title": "Task Assignee Request",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the assignee that should correspond to a resource based on the “type” field. Only required for the `user`, `group`, and `vendorOrderTemplate` types."
          },
          "type": {
            "type": "string",
            "enum": [
              "user",
              "group",
              "vendorOrderTemplate",
              "projectManager",
              "projectCreator"
            ],
            "description": "The assignee type."
          }
        },
        "required": [
          "type"
        ]
      },
      "task-assign-request": {
        "title": "Task Assign Request",
        "type": "object",
        "description": "Properties of task assignment.",
        "properties": {
          "assignees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/task-assignee-request"
            }
          }
        }
      },
      "task-complete-request": {
        "title": "Task Complete Request",
        "type": "object",
        "description": "Properties of task completion.",
        "properties": {
          "outcome": {
            "type": "string",
            "description": "The outcome should be one of the valid applicable outcomes of the task. If not specified, the default one will be taken."
          },
          "comment": {
            "type": "string",
            "description": "The comment associated with this task completion.",
            "maxLength": 1000
          }
        },
        "required": [
          "outcome"
        ]
      },
      "task-input": {
        "title": "Task Input",
        "type": "object",
        "description": "Task input. Based on the \"type\", the following fields can be retrieved: \"project\", \"sourceFile\", \"targetFile\".",
        "properties": {
          "type": {
            "type": "string",
            "description": "The input type.",
            "enum": [
              "project",
              "sourceFile",
              "targetFile",
              "languageDirection"
            ]
          },
          "project": {
            "$ref": "#/components/schemas/project",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EProject resource\u003C/div\u003E ",
            "x-default-field": true
          },
          "sourceFile": {
            "$ref": "#/components/schemas/source-file",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ESource file.\u003C/div\u003E ",
            "x-default-field": true
          },
          "targetFile": {
            "$ref": "#/components/schemas/target-file",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ETarget file.\u003C/div\u003E ",
            "x-default-field": true
          },
          "languageDirection": {
            "$ref": "#/components/schemas/language-direction",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EA language direction.\u003C/div\u003E ",
            "x-default-field": true
          },
          "vendorOrder": {
            "$ref": "#/components/schemas/vendor-order",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EA vendor order resource.\u003C/div\u003E ",
            "x-default-field": true
          }
        },
        "required": [
          "type"
        ]
      },
      "task-input-file": {
        "title": "Task Input File",
        "type": "object",
        "description": "Task input file. Based on the \"type\", only the \"sourceFile\" or \"targetFile\" can be retrieved.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "sourceFile",
              "targetFile"
            ],
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "sourceFile": {
            "$ref": "#/components/schemas/source-file",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ESource file.\u003C/div\u003E ",
            "x-default-field": true
          },
          "targetFile": {
            "$ref": "#/components/schemas/target-file",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ETarget file.\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "task-type": {
        "title": "Task Type",
        "type": "object",
        "description": "Task type.",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EIdentifier key for the task.\u003C/div\u003E ",
            "x-default-field": true
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "apiInternalId": {
            "type": "string",
            "x-stoplight": {
              "id": "tavwkrljagcmc"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E Unique identifier of custom task types. Null for default task types."
          },
          "description": {
            "type": "string"
          },
          "automatic": {
            "type": "boolean",
            "description": "This indicates whether the task is automatic or human.",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "description": "The resource type scope for the task.",
            "enum": [
              "file",
              "targetLanguage",
              "batch",
              "vendorOrder",
              "task"
            ],
            "nullable": true
          },
          "outcomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/task-type-outcome"
            }
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          }
        },
        "required": [
          "id"
        ]
      },
      "task-outcome": {
        "title": "Task Outcome",
        "type": "object",
        "description": "Outcome a task can be completed with. List will be populated after the task is accepted.",
        "properties": {
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E Outcome to be used with complete endpoint.",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "A human-friendly form of the outcome."
          },
          "default": {
            "type": "boolean",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E Specifies if the outcome is the default one for the task.",
            "x-default-field": true
          }
        }
      },
      "task-type-outcome": {
        "title": "Task Type Outcome",
        "type": "object",
        "description": "The task type outcome.",
        "properties": {
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string"
          },
          "default": {
            "type": "boolean",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "task-configuration-scope": {
        "title": "Workflow Task Configuration Scope",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The applicability impact of the workflow configuration:\n- global: used for global tasks which are not associated to a target language\n- sourceLanguage: changes affect only the task associated to the source language specified in **sourceLanguage** field\n- targetLanguage: changes affect only the task associated to the target language specified in **targetLanguage** field\n- languageDirection: changes affect only the task associated to the language direction specified in **languageDirection** field",
            "enum": [
              "global",
              "sourceLanguage",
              "targetLanguage",
              "languageDirection"
            ]
          },
          "sourceLanguage": {
            "$ref": "#/components/schemas/language"
          },
          "targetLanguage": {
            "$ref": "#/components/schemas/language"
          },
          "languageDirection": {
            "$ref": "#/components/schemas/language-direction-item"
          }
        },
        "required": [
          "type"
        ]
      },
      "task-configuration-scope-request": {
        "title": "Workflow Task Configuration Scope Request",
        "type": "object",
        "description": "",
        "properties": {
          "type": {
            "type": "string",
            "description": "The applicability impact of the workflow configuration:\n- global: used for global tasks, that are not associated to a target language \n- sourceLanguage: changes affect only the task associated to the source language specified in `sourceLanguage` field. For using this type, must include the `sourceLanguage` field.\n- targetLanguage: changes affect only the task associated to the target language specified in `targetLanguage` field. For using this type, must include the `targetLanguage` field.\n- languageDirection: changes affect only the task associated to the language direction specified in `languageDirection` field. For using this type, must include the `languageDirection` field.",
            "enum": [
              "global",
              "sourceLanguage",
              "targetLanguage",
              "languageDirection"
            ]
          },
          "sourceLanguage": {
            "$ref": "#/components/schemas/source-language-request"
          },
          "targetLanguage": {
            "$ref": "#/components/schemas/target-language-request"
          },
          "languageDirection": {
            "$ref": "#/components/schemas/language-direction-item"
          }
        },
        "required": [
          "type"
        ]
      },
      "target-file": {
        "title": "Target File",
        "type": "object",
        "description": "Target File.",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe target file name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "languageDirection": {
            "$ref": "#/components/schemas/language-direction",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EA basic language direction.\u003C/div\u003E ",
            "x-default-field": true
          },
          "sourceFile": {
            "$ref": "#/components/schemas/source-file"
          },
          "latestVersion": {
            "$ref": "#/components/schemas/target-file-latest-version"
          },
          "analysisStatistics": {
            "$ref": "#/components/schemas/analysis-statistics"
          },
          "status": {
            "type": "string",
            "description": "Shows if the file is still being processed (inProgress) or if it has been fully processed (finished) by the workflow. A target file is automatically marked as finished by the workflow engine, once there are no more tasks to be performed on it.",
            "enum": [
              "inProgress",
              "finished",
              "canceled"
            ],
            "nullable": true
          }
        },
        "required": [
          "id"
        ]
      },
      "target-file-rename-request": {
        "title": "Target File Rename Request",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the target file.\\\nThe name should not contain the extension.\\\nUnsupported characters in the name: `\u003C`, `\u003E`, `:`, `\"`, `/`, `\\`, `|`, `?`, `*`.",
            "minLength": 1
          }
        },
        "required": [
          "name"
        ]
      },
      "target-files-update-request": {
        "title": "Target Files Update Request",
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/target-file-update-request"
            }
          }
        },
        "required": [
          "files"
        ]
      },
      "target-file-update-request": {
        "title": "Target File Update Request",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The target file identifier.",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "description": "The target file name.\\\nThe name should not contain the extension.\\\nUnsupported characters in the name: `\u003C`, `\u003E`, `:`, `\"`, `/`, `\\`, `|`, `?`, `*`.",
            "minLength": 1
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "target-file-version": {
        "title": "Target File Version",
        "type": "object",
        "description": "Target File Version.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The target file version identifier."
          },
          "type": {
            "type": "string",
            "enum": [
              "native",
              "bcm"
            ],
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe version type.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe file version name. This is a synthetic value, typically constructed from the version number and the originating task name.\u003C/div\u003E",
            "x-default-field": true
          },
          "version": {
            "type": "integer",
            "description": "A numeric value, incremented for each new version."
          },
          "originatingTaskId": {
            "type": "string",
            "x-stoplight": {
              "id": "yxst0hpphv0tq"
            },
            "description": "The identifier of the task that generated the file."
          }
        },
        "required": [
          "id",
          "version"
        ]
      },
      "target-file-latest-version": {
        "title": "Target File Latest Version",
        "x-stoplight": {
          "id": "0zlvlegfodgta"
        },
        "type": "object",
        "description": "Target File Latest Version.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The target file version identifier."
          },
          "type": {
            "type": "string",
            "enum": [
              "native",
              "bcm"
            ],
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe version type.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "version": {
            "type": "integer",
            "description": "A numeric value, incremented for each new version."
          }
        },
        "required": [
          "id",
          "version"
        ]
      },
      "target-language-request": {
        "title": "Target Language Request",
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string",
            "description": "The language code."
          }
        },
        "required": [
          "languageCode"
        ],
        "description": ""
      },
      "termbase-template": {
        "title": "Termbase Template",
        "type": "object",
        "description": "The termbase template.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the termbase template."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe name of the termbase template.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "The description of the termbase template.",
            "nullable": true
          },
          "copyright": {
            "type": "string",
            "description": "The copyright of the termbase template.",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe resource folder.\u003C/div\u003E ",
            "x-default-field": true
          },
          "createdAt": {
            "type": "string",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the termbase template was created. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the termbase template was modified. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "description": "The type of the termbase template.",
            "enum": [
              "system",
              "userDefined"
            ]
          },
          "languages": {
            "type": "array",
            "description": "The languages of the termbase template.",
            "items": {
              "$ref": "#/components/schemas/language"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field"
            }
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "termbase-template-update-request": {
        "title": "Termbase Template Update Request",
        "type": "object",
        "description": "The termbase template update request.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Termbase template.",
            "maxLength": 50,
            "minLength": 1
          },
          "description": {
            "type": "string",
            "description": "The description of the Termbase template.",
            "minLength": 0,
            "maxLength": 200,
            "nullable": true
          },
          "copyright": {
            "type": "string",
            "description": "The copyright of the Termbase template.",
            "minLength": 0,
            "maxLength": 50,
            "nullable": true
          },
          "languages": {
            "type": "array",
            "description": "The languages of the termbase template.",
            "items": {
              "$ref": "#/components/schemas/language-request"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-update-request"
            }
          }
        }
      },
      "termbase-template-create-request": {
        "title": "Termbase Template Create Request",
        "type": "object",
        "description": "The termbase template create request.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the termbase template.",
            "minLength": 0,
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "description": "The description of the termbase template.",
            "minLength": 0,
            "maxLength": 200,
            "nullable": true
          },
          "copyright": {
            "type": "string",
            "description": "The copyright of the termbase template.",
            "minLength": 0,
            "maxLength": 50,
            "nullable": true
          },
          "location": {
            "type": "string",
            "description": "The folder identifier where the termbase template should be created. If not mentioned, it will be created in the Root folder. If the user does not have access in Root, the request will fail with forbidden error."
          },
          "languages": {
            "type": "array",
            "description": "The languages of the termbase template.",
            "items": {
              "$ref": "#/components/schemas/language-request"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-create-request"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "termbase-structure": {
        "title": "Termbase Structure",
        "type": "object",
        "description": "The termbase structure.",
        "properties": {
          "languages": {
            "type": "array",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe languages of the termbase.\u003C/div\u003E ",
            "items": {
              "$ref": "#/components/schemas/language"
            },
            "x-default-field": true
          },
          "fields": {
            "type": "array",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe termbase fields.  (Not available for List Termbases endpoint).\u003C/div\u003E ",
            "items": {
              "$ref": "#/components/schemas/termbase-field"
            },
            "x-default-field": true
          }
        }
      },
      "termbase-structure-create-request": {
        "title": "Termbase Structure Create Request",
        "type": "object",
        "description": "The termbase structure create request.",
        "properties": {
          "languages": {
            "type": "array",
            "description": "The languages of the termbase. If not supplied, the termbase will be created using the languages from the specified template. Otherwise it will override the  languages from the template.",
            "items": {
              "$ref": "#/components/schemas/language-request"
            }
          },
          "fields": {
            "type": "array",
            "description": "Describes the field structure. If not supplied, the termbase will be created using the fields from the specified template. Otherwise it will override the fields from the template.",
            "items": {
              "$ref": "#/components/schemas/termbase-field-create-request"
            }
          }
        }
      },
      "termbase-structure-update-request": {
        "title": "Termbase Structure Update Request",
        "type": "object",
        "description": "The termbase structure update request.",
        "properties": {
          "languages": {
            "type": "array",
            "description": "The languages of the termbase. If not supplied, the termbase will be updated using the languages from the specified template. Otherwise it will override the  languages from the template.",
            "items": {
              "$ref": "#/components/schemas/language-request"
            }
          },
          "fields": {
            "type": "array",
            "description": "Describes the field structure. If not supplied, the termbase will be updated using the fields from the specified template. Otherwise it will override the fields from the template.",
            "items": {
              "$ref": "#/components/schemas/termbase-field-update-request"
            }
          }
        }
      },
      "termbase-field": {
        "title": "Termbase Field",
        "type": "object",
        "description": "The termbase field.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the termbase field."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe name of the termbase field.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "The description of the termbase field",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of the termbase field - system or userDefined.",
            "enum": [
              "system",
              "userDefined"
            ]
          },
          "level": {
            "type": "string",
            "enum": [
              "entry",
              "language",
              "term"
            ],
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe level of which this field applies.\u003C/div\u003E ",
            "x-default-field": true
          },
          "dataType": {
            "type": "string",
            "enum": [
              "text",
              "double",
              "date",
              "picklist",
              "boolean"
            ],
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe data type of the field.\u003C/div\u003E ",
            "x-default-field": true
          },
          "pickListValues": {
            "type": "array",
            "uniqueItems": false,
            "description": "The pick list options. Only if dataType is \"picklist\".",
            "items": {
              "type": "string"
            }
          },
          "allowCustomValues": {
            "type": "boolean",
            "description": "Specifies if the field allows custom values."
          },
          "allowMultiple": {
            "type": "boolean",
            "description": "Specifies if the field can be used multiple times."
          },
          "isMandatory": {
            "type": "boolean",
            "description": "Specifies if the field is mandatory."
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "termbase-field-update-request": {
        "title": "Termbase Field Update Request",
        "type": "object",
        "description": "The termbase field update request.\n\nIf dataType is `picklist` and pickListValues array is empty `allowCustomValues` must be true.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the termbase field to updated. If missing will add a new field."
          },
          "name": {
            "type": "string",
            "description": "The name of the termbase field. Must be unique.",
            "minLength": 1,
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "description": "The description of the termbase field.",
            "minLength": 1,
            "maxLength": 200,
            "nullable": true
          },
          "level": {
            "type": "string",
            "enum": [
              "entry",
              "language",
              "term"
            ],
            "description": "The level of which this field applies."
          },
          "dataType": {
            "type": "string",
            "enum": [
              "text",
              "double",
              "date",
              "picklist",
              "boolean"
            ],
            "description": "The data type of the field."
          },
          "pickListValues": {
            "type": "array",
            "uniqueItems": true,
            "description": "The pick list options. Only if dataType is \"picklist\".",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 1000
            }
          },
          "allowCustomValues": {
            "type": "boolean",
            "description": "Specifies if the field allows custom values. Must be true if pickListValues is empty.",
            "default": false
          },
          "allowMultiple": {
            "type": "boolean",
            "description": "Specifies if the field can be used multiple times.",
            "default": true
          },
          "isMandatory": {
            "type": "boolean",
            "description": "Specifies if the field is mandatory.",
            "default": false
          }
        },
        "required": [
          "name",
          "level",
          "dataType"
        ]
      },
      "termbase-field-create-request": {
        "title": "Termbase Field Create Request",
        "type": "object",
        "description": "The termbase field request.\n\nIf dataType is `picklist` and pickListValues array is empty `allowCustomValues` must be true.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the termbase field. Must be unique.",
            "minLength": 1,
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "description": "The description of the termbase field.",
            "minLength": 1,
            "maxLength": 200,
            "nullable": true
          },
          "level": {
            "type": "string",
            "enum": [
              "entry",
              "language",
              "term"
            ],
            "description": "The level of which this field applies."
          },
          "dataType": {
            "type": "string",
            "enum": [
              "text",
              "double",
              "date",
              "picklist",
              "boolean"
            ],
            "description": "The data type of the field."
          },
          "pickListValues": {
            "type": "array",
            "uniqueItems": true,
            "description": "The pick list values. Only if dataType is \"picklist\". Values must be unique.",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 1000
            }
          },
          "allowCustomValues": {
            "type": "boolean",
            "description": "Specifies if the field allows custom values. Must be true if pickListValues is empty.",
            "default": false
          },
          "allowMultiple": {
            "type": "boolean",
            "description": "Specifies if the field can be used multiple times.",
            "default": true
          },
          "isMandatory": {
            "type": "boolean",
            "description": "Specifies if the field is mandatory.",
            "default": false
          }
        },
        "required": [
          "name",
          "level",
          "dataType"
        ]
      },
      "termbase": {
        "title": "Termbase",
        "type": "object",
        "description": "The termbase.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the termbase."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe name of the termbase.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "The description of the termbase.",
            "nullable": true
          },
          "copyright": {
            "type": "string",
            "description": "The copyright of the termbase.",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe resource folder.\u003C/div\u003E ",
            "x-default-field": true
          },
          "termbaseStructure": {
            "$ref": "#/components/schemas/termbase-structure"
          },
          "numberOfEntries": {
            "type": "number",
            "description": "The number of entries included in the termbase. (Not available for List Termbases endpoint)"
          },
          "status": {
            "type": "string",
            "enum": [
              "ready",
              "processingContent",
              "exportingContent",
              "deletingContent"
            ],
            "description": "The status of the termbase. (Not available for List Termbases endpoint)"
          },
          "createdAt": {
            "type": "string",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the termbase was created. (Not available for List Termbases endpoint) \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the termbase was last updated. (Not available for List Termbases endpoint) \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "format": "date-time"
          }
        },
        "required": [
          "id"
        ]
      },
      "termbase-create-request": {
        "title": "Termbase Create Request",
        "type": "object",
        "description": "Termbase create request.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the termbase.",
            "minLength": 1,
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "description": "The description of the termbase.",
            "minLength": 0,
            "maxLength": 200,
            "nullable": true
          },
          "copyright": {
            "type": "string",
            "description": "The copyright of the termbase.",
            "minLength": 0,
            "maxLength": 50,
            "nullable": true
          },
          "location": {
            "type": "string",
            "description": "The folder identifier where the termbase should be created. If not specified, it will be created in the Root folder. If the user does not have access in Root, the request will fail with forbidden error."
          },
          "termbaseTemplateId": {
            "type": "string",
            "description": "The termbase template identifier."
          },
          "termbaseStructure": {
            "$ref": "#/components/schemas/termbase-structure-create-request"
          }
        },
        "required": [
          "name"
        ]
      },
      "termbase-update-request": {
        "title": "Termbase Update Request",
        "type": "object",
        "description": "Termbase update request.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the termbase.",
            "minLength": 1,
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "description": "The description of the termbase.",
            "minLength": 0,
            "maxLength": 200,
            "nullable": true
          },
          "copyright": {
            "type": "string",
            "description": "The copyright of the termbase.",
            "minLength": 0,
            "maxLength": 50,
            "nullable": true
          },
          "termbaseTemplateId": {
            "type": "string",
            "description": "The termbase template identifier."
          },
          "termbaseStructure": {
            "$ref": "#/components/schemas/termbase-structure-update-request"
          }
        }
      },
      "termbase-field-value-link": {
        "title": "Termbase Field Value Link",
        "type": "object",
        "description": "The field value link.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "term",
              "entry",
              "external"
            ],
            "description": "The type of the link."
          },
          "value": {
            "type": "string",
            "description": "The value of the link."
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "termbase-field-value-link-update-request": {
        "title": "Termbase Field Value Link Update Request",
        "type": "object",
        "description": "The field value link update request.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "term",
              "entry",
              "external"
            ],
            "description": "The type of the link."
          },
          "value": {
            "type": "string",
            "description": "The value of the link."
          }
        }
      },
      "termbase-field-value-link-create-request": {
        "title": "Termbase Field Value Link Create Request",
        "type": "object",
        "description": "The field value link create request.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "term",
              "entry",
              "external"
            ],
            "description": "The type of link."
          },
          "value": {
            "type": "string",
            "description": "The value of the link.",
            "minLength": 1
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "termbase-field-value": {
        "title": "Termbase Field Value",
        "type": "object",
        "description": "The termbase field value.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The field value identifier."
          },
          "name": {
            "type": "string",
            "description": "The field value name."
          },
          "termbaseFieldId": {
            "type": "string",
            "description": "The termbase field identifier."
          },
          "value": {
            "type": "string",
            "description": "The value of the field."
          },
          "fieldValueLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-value-link"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the termbase field value was created. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "nullable": true
          },
          "createdBy": {
            "$ref": "#/components/schemas/user"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the termbase field value was last modified. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "nullable": true
          },
          "lastModifiedBy": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "id",
          "name",
          "termbaseFieldId",
          "value"
        ]
      },
      "termbase-field-value-update-request": {
        "title": "Termbase Field Value Update request",
        "type": "object",
        "description": "The termbase field value update request.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The field value identifier. Either the `id` or the `name` is mandatory to be provided."
          },
          "name": {
            "type": "string",
            "description": "The field value name. Either the `id` or the `name` is mandatory to be provided."
          },
          "termbaseFieldId": {
            "type": "string",
            "description": "The termbase field value identifier. Must match with the fieldId from the termbase."
          },
          "value": {
            "type": "string",
            "description": "The value of the field.",
            "minLength": 1,
            "maxLength": 4096
          },
          "fieldValueLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-value-link-update-request"
            }
          }
        },
        "required": [
          "termbaseFieldId",
          "value"
        ]
      },
      "termbase-field-value-create-request": {
        "title": "Termbase Field Value Create Request",
        "type": "object",
        "description": "The termbase field value create request.",
        "properties": {
          "termbaseFieldId": {
            "type": "string",
            "description": "The termbase field identifier. It must match the `fieldId` from the termbase."
          },
          "value": {
            "type": "string",
            "description": "The value of the field.",
            "minLength": 1,
            "maxLength": 4096
          },
          "fieldValueLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-value-link-create-request"
            }
          }
        },
        "required": [
          "termbaseFieldId",
          "value"
        ]
      },
      "termbase-entry-term": {
        "title": "Termbase Entry Term",
        "type": "object",
        "description": "The termbase entry term.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The term identifier."
          },
          "text": {
            "type": "string",
            "description": "The term text."
          },
          "termbaseFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-value"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the term entry was created. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "nullable": true
          },
          "createdBy": {
            "$ref": "#/components/schemas/user"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the term entry was last modified. \u003Cbr\u003E UTC Timezone \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "nullable": true
          },
          "lastModifiedBy": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "id",
          "text"
        ]
      },
      "termbase-entry-term-update-request": {
        "title": "Termbase Entry Term Update Request",
        "type": "object",
        "description": "The termbase entry term update request.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The term identifier that will be updated. If not supplied, a new term will be created."
          },
          "text": {
            "type": "string",
            "description": "The term text.",
            "minLength": 1,
            "maxLength": 1024
          },
          "termbaseFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-value-update-request"
            }
          }
        },
        "required": [
          "text"
        ]
      },
      "termbase-term-create-request": {
        "title": "Termbase Entry Term Create Request",
        "type": "object",
        "description": "The termbase entry term request.",
        "properties": {
          "text": {
            "type": "string",
            "description": "The term text.",
            "maxLength": 1024,
            "minLength": 1
          },
          "termbaseFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-value-create-request"
            }
          }
        },
        "required": [
          "text"
        ]
      },
      "termbase-entry-language": {
        "title": "Termbase Entry Language",
        "type": "object",
        "description": "The termbase entry language.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The termbase language identifier."
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-entry-term"
            }
          },
          "termbaseFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-value"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the language entry was created. \u003Cbr\u003E UTC Timezone  \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "nullable": true
          },
          "createdBy": {
            "$ref": "#/components/schemas/user"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the language entry was last modified. \u003Cbr\u003E UTC Timezone  \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "nullable": true
          },
          "lastModifedBy": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "id",
          "language"
        ]
      },
      "termbase-entry-language-update-request": {
        "title": "Termbase Entry Language Update Request",
        "type": "object",
        "description": "The termbase entry language update request.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The termbase language identifier."
          },
          "language": {
            "$ref": "#/components/schemas/language-request"
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-entry-term-update-request"
            }
          },
          "termbaseFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-value-update-request"
            }
          }
        },
        "required": [
          "language",
          "terms"
        ]
      },
      "termbase-entry-language-create-request": {
        "title": "Termbase Entry Language Create Request",
        "type": "object",
        "description": "The termbase entry language create request.",
        "properties": {
          "language": {
            "$ref": "#/components/schemas/language-request"
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-term-create-request"
            }
          },
          "termbaseFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-value-create-request"
            }
          }
        },
        "required": [
          "language",
          "terms"
        ]
      },
      "termbase-entry": {
        "title": "Termbase Entry",
        "type": "object",
        "description": "The termbase entry.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The termbase entry identifier."
          },
          "humanReadableId": {
            "type": "string",
            "description": "An identifier that can be provided externally, or generated automatically by Language Cloud, used for creating cross-references. You can use it to set its value to be correlated to your system. The format of the generated value is not guaranteed."
          },
          "languages": {
            "description": "The termbase entry languages.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-entry-language"
            }
          },
          "termbaseFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-value"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the termbase entry was created.  \u003Cbr\u003E UTC Timezone  \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "nullable": true
          },
          "createdBy": {
            "$ref": "#/components/schemas/user"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The date and time when the termbase entry was last modified. \u003Cbr\u003E UTC Timezone   \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "nullable": true
          },
          "lastModifiedBy": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "id",
          "languages"
        ]
      },
      "termbase-entry-update-request": {
        "title": "Termbase Entry Update Request",
        "type": "object",
        "description": "The termbase entry update request.",
        "properties": {
          "humanReadableId": {
            "type": "string",
            "description": "An identifier that can be provided externally, or generated automatically by Language Cloud, used for creating cross-references. You can use it to set its value to be correlated to your system. The format of the generated value is not guaranteed."
          },
          "languages": {
            "description": "The termbase entry languages.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-entry-language-update-request"
            }
          },
          "termbaseFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-value-update-request"
            }
          }
        },
        "required": [
          "languages"
        ]
      },
      "termbase-entry-create-request": {
        "title": "Termbase Entry Create Request",
        "type": "object",
        "description": "The termbase entry create request.",
        "properties": {
          "humanReadableId": {
            "type": "string",
            "description": "An identifier that can be provided externally, or generated automatically by Language Cloud, used for creating cross-references. You can use it to set its value to be correlated to your system.\nThe format of the generated value is not guaranteed."
          },
          "languages": {
            "description": "The termbase entry languages.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-entry-language-create-request"
            }
          },
          "termbaseFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termbase-field-value-create-request"
            }
          }
        },
        "required": [
          "languages"
        ]
      },
      "termbase-export-properties-request": {
        "title": "Termbase Export Properties Request",
        "type": "object",
        "properties": {
          "downloadCompressed": {
            "type": "boolean",
            "description": "Download compressed ( zipped ).",
            "default": false
          }
        }
      },
      "termbase-export-response": {
        "title": "Termbase Export Response",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The termbase export identifier."
          },
          "status": {
            "type": "string",
            "description": "The status of the export operation.\u003Cbr\u003E\n`queued` - The export passed the structural validation and it's waiting to be processed.\u003Cbr\u003E\n`processing` - The export is in progress.\u003Cbr\u003E\n`done` - The export was successfully processed .\u003Cbr\u003E\n`cancelled` - The export process was interrupted.\u003Cbr\u003E\n`error` - The export was unsuccessful due to an internal error.",
            "enum": [
              "queued",
              "processing",
              "done",
              "cancelled",
              "error"
            ]
          },
          "errorMessage": {
            "type": "string",
            "description": "When status is 'error', contains the error message explaining what went wrong."
          },
          "downloadUrl": {
            "type": "string",
            "description": "The url where the file can be downloaded."
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "termbase-term": {
        "title": "Termbase Term Response",
        "type": "object",
        "description": "The termbase term.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The term identifier."
          },
          "entryId": {
            "type": "string",
            "description": "The entry identifier."
          },
          "text": {
            "type": "string",
            "description": "The term text."
          }
        },
        "required": [
          "id",
          "entryId",
          "text"
        ]
      },
      "termbase-import-response": {
        "title": "Termbase Import Response",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the import operation."
          },
          "status": {
            "type": "string",
            "description": "The status of the import operation.\u003Cbr\u003E\n`queued` - The import passed the structural validation and it's waiting to be processed.\u003Cbr\u003E\n`processing` - The import is in progress.\u003Cbr\u003E\n`done` - The import was successfully processed and at least an entry changed its structure ( either inserted or modified )\u003Cbr\u003E\n`cancelled` - The import process was interrupted.\u003Cbr\u003E\n`failed` - The import was unsuccessful. Either one of the import files is not compliant with the TBX structure or no entry changed during the import process.\u003Cbr\u003E\n`error` - The import was unsuccessful due to an internal error.",
            "enum": [
              "queued",
              "processing",
              "done",
              "cancelled",
              "failed",
              "error"
            ]
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "termbase-poll-import-response": {
        "title": "Termbase Poll Import Response",
        "type": "object",
        "description": "The termbase poll import response.\u003Cbr\u003E\nThe import was successfully processed when the status is `done`.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the import operation."
          },
          "status": {
            "type": "string",
            "description": "The status of the import operation.\u003Cbr\u003E\n`queued` - The import passed the structural validation and it's waiting to be processed.\u003Cbr\u003E\n`processing` - The import is in progress.\u003Cbr\u003E\n`done` - The import was successfully processed and at least an entry changed its structure ( either inserted or modified )\u003Cbr\u003E\n`cancelled` - The import process was interrupted.\u003Cbr\u003E\n`failed` - The import was unsuccessful. Either one of the import files is not compliant with the TBX structure or no entry changed during the import process.\u003Cbr\u003E\n`error` - The import was unsuccessful due to an internal error.",
            "enum": [
              "queued",
              "processing",
              "done",
              "cancelled",
              "failed",
              "error"
            ]
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "termbase-import-history-response": {
        "title": "Termbase Import History Response",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The termbase import identifier."
          },
          "fileName": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe file name of the imported file.\u003C/div\u003E ",
            "x-default-field": true
          },
          "fileSize": {
            "type": "integer",
            "description": "The file size of the imported file.",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": "The status of the import operation.\u003Cbr\u003E\n`pending` - The import was just created and it's waiting for user input.\u003Cbr\u003E\n`queued` - The import passed the structural validation and it's waiting to be processed.\u003Cbr\u003E\n`processing` - The import is in progress.\u003Cbr\u003E\n`done` - The import was successfully processed and at least an entry changed its structure ( either inserted or modified )\u003Cbr\u003E\n`cancelled` - The import process was interrupted.\u003Cbr\u003E\n`failed` - The import was unsuccessful. Either one of the import files is not compliant with the TBX structure or no entry changed during the import process.\u003Cbr\u003E\n`error` - The import was unsuccessful due to an internal error.",
            "enum": [
              "pending",
              "queued",
              "processing",
              "done",
              "cancelled",
              "failed",
              "error"
            ]
          },
          "createdAt": {
            "$ref": "#/components/schemas/date-time"
          },
          "elapsedTime": {
            "type": "integer",
            "description": "The last modified date of the import."
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "tqa-profile": {
        "title": "TQA Profile",
        "type": "object",
        "description": "As a project manager, you choose a TQA configuration and use it to automatically assess the quality of a translation document.\n\nThe TQA configuration specifies:\n - Categories and subcategories that reviewers will use to classify the translation issues in a document.\n - Severities to define custom metrics you want to use to assess translation quality.\n - Score to measure the importance of each category or subcategory of an issue.\n - Pass/Fail Threshold to define the maximum number of penalty points admitted before failing the translation document.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the TQA profile."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe name of the TQA Profile.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe TQA Profile description.\u003C/div\u003E ",
            "x-default-field": true
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          },
          "passFailThreshold": {
            "$ref": "#/components/schemas/tqa-profile-passFailThreshold",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EPass/Fail Threshold is used to define the maximum number of penalty points admitted before failing the translation document.\u003C/div\u003E ",
            "x-default-field": true
          },
          "categories": {
            "type": "array",
            "description": "Categories and subcategories are assessment options that reviewers can use to classify any translation-related issue that they find in a file.",
            "items": {
              "$ref": "#/components/schemas/tqa-profile-category"
            }
          },
          "severities": {
            "type": "array",
            "description": "Severities are custom metrics that reviewers can use to measure the importance of any translation-related issues that they find in a file.",
            "items": {
              "$ref": "#/components/schemas/tqa-profile-severity"
            }
          },
          "scores": {
            "type": "array",
            "description": "The TQA scoring indicates whether translations pass or fail the acceptance threshold.",
            "items": {
              "$ref": "#/components/schemas/tqa-profile-score"
            }
          },
          "path": {
            "type": "array",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/folder"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "tqa-profile-category": {
        "title": "TQA Profile Category",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The category identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe category name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "The category description."
          },
          "abbreviation": {
            "type": "string",
            "description": "The category abbreviation."
          }
        }
      },
      "tqa-profile-severity": {
        "title": "TQA Profile Severity",
        "type": "object",
        "description": "Severities are custom metrics that reviewers can use to measure the importance of any translation-related issues that they find in a file.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The severity identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe severity name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "type": {
            "type": "string",
            "description": "The severity type."
          }
        }
      },
      "tqa-profile-passFailThreshold": {
        "title": "TQA Profile PassFailThreshold",
        "type": "object",
        "description": "Pass/Fail Threshold is used to define the maximum number of penalty points admitted before failing the translation document.",
        "properties": {
          "points": {
            "type": "integer",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe penalty points.\u003C/div\u003E ",
            "x-default-field": true
          },
          "quantity": {
            "type": "integer",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe quantity against which the points are measured.\u003C/div\u003E ",
            "x-default-field": true
          },
          "scope": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EWords or characters.\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "tqa-profile-score": {
        "title": "TQA Profile Score",
        "type": "object",
        "description": "The TQA scoring indicates whether translations pass or fail the acceptance threshold.",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/tqa-profile-category",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe TQA category.\u003C/div\u003E ",
            "x-default-field": true
          },
          "severity": {
            "$ref": "#/components/schemas/tqa-profile-severity",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ESeverities are custom metrics that reviewers can use to measure the importance of any translation-related issues that they find in a file.\u003C/div\u003E ",
            "x-default-field": true
          },
          "penalty": {
            "type": "integer",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe associated penalty for this score's category and severity.\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "translation-cost-item": {
        "title": "Translation Cost Item",
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe total number of units.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "rate": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe cost of a unit.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "total": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe total cost for the current item.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "runningTotal": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe sum of all the previously computed costs.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          }
        }
      },
      "translation-cost-fuzzy-item": {
        "title": "Translation Cost Fuzzy Item",
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe total number of units.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "rate": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe cost of a unit.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "total": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe total cost for the current item.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "runningTotal": {
            "type": "number",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe sum of all the previously computed costs.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "fuzzyCategory": {
            "$ref": "#/components/schemas/fuzzy-category",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EFuzzy category range.\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "translation-engine": {
        "title": "Translation Engine",
        "type": "object",
        "description": "Translation Engine resource. (Not available for List Projects endpoint)",
        "properties": {
          "id": {
            "type": "string",
            "description": "The translation engine identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe translation engine name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "x-stoplight": {
              "id": "h2kzvu2xlq1dh"
            }
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          },
          "definition": {
            "$ref": "#/components/schemas/translation-engine-definition",
            "x-stoplight": {
              "id": "gesu0kld6jyxg"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "translation-engine-update-request": {
        "title": "Translation Engine Update Request",
        "x-stoplight": {
          "id": "qjks6cvd5ej43"
        },
        "type": "object",
        "description": "Translation Engine resource update request",
        "properties": {
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe translation engine name.\u003C/div\u003E ",
            "x-default-field": true,
            "minLength": 1,
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "x-stoplight": {
              "id": "h2kzvu2xlq1dh"
            },
            "maxLength": 1000
          },
          "definition": {
            "$ref": "#/components/schemas/translation-engine-definition",
            "x-stoplight": {
              "id": "gesu0kld6jyxg"
            }
          }
        }
      },
      "translation-engine-definition": {
        "title": "Translation Engine Definition",
        "x-stoplight": {
          "id": "yb3ai5ltnbu49"
        },
        "type": "object",
        "description": "The definition of a translation engine.",
        "properties": {
          "languageProcessingRuleId": {
            "type": "string",
            "x-stoplight": {
              "id": "ixoi0dqka8bkw"
            }
          },
          "languagePairDefinitions": {
            "type": [
              "array"
            ],
            "x-stoplight": {
              "id": "891hvyzbxnaqm"
            },
            "items": {
              "$ref": "#/components/schemas/translation-engine-definition-language-pair",
              "x-stoplight": {
                "id": "nbfh6uvky8c4o"
              }
            }
          }
        }
      },
      "translation-engine-definition-language-pair": {
        "title": "Language Pair Definition",
        "x-stoplight": {
          "id": "isibhifp9qrao"
        },
        "type": "object",
        "properties": {
          "languagePair": {
            "$ref": "#/components/schemas/language-pair",
            "x-stoplight": {
              "id": "ixoi0dqka8bkw"
            }
          },
          "resources": {
            "type": "array",
            "x-stoplight": {
              "id": "foi4rdwsrevkj"
            },
            "items": {
              "$ref": "#/components/schemas/language-pair-resource",
              "x-stoplight": {
                "id": "d2b4btupa9mu1"
              }
            }
          }
        },
        "required": [
          "languagePair",
          "resources"
        ]
      },
      "translation-memory-field": {
        "title": "Translation Memory Field",
        "type": "object",
        "description": "The unique identifier of the field.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the field."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe name of the field.\u003C/div\u003E ",
            "x-default-field": true
          },
          "type": {
            "type": "string",
            "enum": [
              "unknown",
              "singleString",
              "multipleString",
              "dateTime",
              "singlePicklist",
              "multiplePicklist",
              "integer"
            ],
            "description": "The data type of the field."
          },
          "values": {
            "type": "array",
            "description": "A collection of values for this field.",
            "items": {
              "$ref": "#/components/schemas/translation-memory-field-value"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "translation-memory-fields": {
        "title": "Translation Memory Fields",
        "type": "object",
        "properties": {
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/translation-memory-fields-settings"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "translation-memory-field-template": {
        "title": "Translation Memory Field Template",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the translation memory field template."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe name of the field template.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "The field template description."
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          },
          "fieldDefinitions": {
            "type": "array",
            "description": "A collection of translation memory fields.",
            "items": {
              "$ref": "#/components/schemas/translation-memory-field"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "translation-memory-field-value": {
        "title": "Translation Memory Field Value",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier associated with this value."
          },
          "value": {
            "type": "string",
            "description": "A translation memory field value."
          }
        },
        "required": [
          "id"
        ]
      },
      "translation-memory": {
        "title": "Translation Memory",
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the translation memory."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe translation memory name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "The translation memory description."
          },
          "copyright": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/folder"
          },
          "languageDirections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/translation-memory-language-direction"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EA collection of language directions\u003C/div\u003E ",
            "x-default-field": true
          },
          "languageProcessingRule": {
            "$ref": "#/components/schemas/language-processing-rule"
          },
          "fieldTemplate": {
            "$ref": "#/components/schemas/translation-memory-field-template"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The `DateTime` when the translation memory was created. \u003Cbr\u003E UTC Timezone  \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "nullable": true
          },
          "createdBy": {
            "$ref": "#/components/schemas/user"
          },
          "lastRecomputedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The `DateTime` when the translation memory statistics were last updated.  \u003Cbr\u003E UTC Timezone  \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "nullable": true
          },
          "lastReIndexedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The `DateTime` when the translation memory reindexing was performed.  \u003Cbr\u003E UTC Timezone  \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss",
            "nullable": true
          }
        },
        "required": [
          "id"
        ]
      },
      "translation-memory-fields-update-request": {
        "title": "Translation Memory Fields Update Request",
        "x-stoplight": {
          "id": "lcpur5t4ewvi2"
        },
        "type": "object",
        "properties": {
          "settings": {
            "type": "array",
            "description": "The configuration settings for Translation Memory Fields.",
            "items": {
              "$ref": "#/components/schemas/translation-memory-fields-settings-request"
            }
          }
        },
        "required": [
          "settings"
        ]
      },
      "translation-memory-field-update-type": {
        "type": "string",
        "title": "Translation Memory Field Update Type",
        "x-stoplight": {
          "id": "vq3s0tuc4yp5u"
        },
        "enum": [
          "dateTime",
          "singlePicklist",
          "multiplePicklist",
          "integer",
          "singleString",
          "multipleString"
        ],
        "description": "The data type of the value."
      },
      "translation-memory-fields-settings-request": {
        "title": "Translation Memory Fields Settings Request",
        "type": "object",
        "description": "",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the translation memory field."
          },
          "values": {
            "type": "array",
            "description": "A collection of values.",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "$ref": "#/components/schemas/translation-memory-field-update-type"
          }
        },
        "required": [
          "name",
          "values",
          "type"
        ]
      },
      "translation-memory-fields-settings": {
        "title": "Translation Memory Fields Settings",
        "x-stoplight": {
          "id": "adnwx8tlwr674"
        },
        "type": "object",
        "description": "The configuration settings for Translation Memory Fields.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the translation memory field."
          },
          "values": {
            "type": "array",
            "description": "A collection of values.",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "$ref": "#/components/schemas/translation-memory-field-update-type"
          }
        },
        "required": [
          "name",
          "values",
          "type"
        ]
      },
      "translation-memory-base": {
        "title": "Translation Memory",
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique translation memory identifier."
          },
          "name": {
            "type": "string",
            "description": "The translation memory name."
          },
          "description": {
            "type": "string",
            "description": "The translation memory description"
          },
          "copyright": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/folder"
          },
          "languageDirections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/translation-memory-language-direction"
            }
          },
          "languageProcessingRule": {
            "$ref": "#/components/schemas/language-processing-rule"
          },
          "fieldTemplate": {
            "$ref": "#/components/schemas/translation-memory-field-template"
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The `DateTime` when the translation memory was created.",
            "nullable": true
          },
          "createdBy": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "id"
        ]
      },
      "translation-memory-create-request": {
        "title": "Translation Memory Create Request",
        "type": "object",
        "description": "The model to use when creating a new Translation Memory.",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 151,
            "minLength": 1,
            "description": "The Translation Memory name."
          },
          "description": {
            "type": "string",
            "maxLength": 1024,
            "description": "The Translation Memory description."
          },
          "copyright": {
            "type": "string",
            "maxLength": 1024
          },
          "location": {
            "type": "string",
            "description": "The folder identifier where the translation memory should be created."
          },
          "languageDirections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/language-direction-request"
            }
          },
          "languageProcessingRuleId": {
            "type": "string",
            "description": "The Language Processing Rule to be associated with the Translation Memory."
          },
          "fieldTemplateId": {
            "type": "string",
            "description": "A Field Template to be associated with the Translation Memory."
          }
        },
        "required": [
          "name",
          "languageDirections",
          "languageProcessingRuleId",
          "fieldTemplateId"
        ]
      },
      "translation-memory-update-request": {
        "title": "Translation Memory Update Request",
        "type": "object",
        "description": "",
        "properties": {
          "name": {
            "type": "string",
            "description": "The translation memory name",
            "minLength": 1,
            "maxLength": 151
          },
          "description": {
            "type": "string",
            "maxLength": 1024,
            "description": "The translation memory description"
          },
          "copyright": {
            "type": "string",
            "maxLength": 1024
          },
          "languageDirections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/language-direction-request"
            }
          },
          "languageProcessingRuleId": {
            "type": "string",
            "description": "The language processing rule to be associated with the translation memory."
          },
          "fieldTemplateId": {
            "type": "string",
            "description": "A field template to be associated with the translation memory."
          }
        }
      },
      "translation-memory-language-direction": {
        "title": "Translation Memory Language Direction",
        "x-stoplight": {
          "id": "lxtdb1sy4fdbi"
        },
        "type": "object",
        "description": "A language direction representation specific to translation memories.",
        "properties": {
          "languageDirection": {
            "$ref": "#/components/schemas/simple-language-direction",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EA basic language direction.\u003C/div\u003E ",
            "x-default-field": true
          },
          "translationUnits": {
            "type": "integer",
            "description": "The number of translation units for this language pair. Sum up all language pairs to get the total for the translation memory.",
            "nullable": true
          },
          "unalignedTranslationUnits": {
            "type": "integer",
            "description": "The number of translation units that are unaligned for this language pair. Sum up all language pairs to get the total for the translation memory.",
            "nullable": true
          }
        }
      },
      "translation-memory-import-request": {
        "title": "Translation Memory Import Properties",
        "type": "object",
        "description": "Translation Memory Import properties sent as a JSON inside a text part.",
        "properties": {
          "sourceLanguageCode": {
            "type": "string",
            "description": "The code of the source language  of the translation memory."
          },
          "targetLanguageCode": {
            "type": "string",
            "description": "The code of the target language  of the translation memory."
          },
          "importAsPlainText": {
            "type": "boolean",
            "default": false
          },
          "exportInvalidTranslationUnits": {
            "type": "boolean",
            "default": true
          },
          "triggerRecomputeStatistics": {
            "type": "boolean",
            "default": false
          },
          "targetSegmentsDifferOption": {
            "type": "string",
            "description": "Option to specify how to handle translation units in the Translation Memory, if target segments differ.",
            "enum": [
              "addNew",
              "overwrite",
              "leaveUnchanged",
              "keepMostRecent"
            ],
            "default": "addNew"
          },
          "unknownFieldsOption": {
            "type": "string",
            "description": "Option to specify how to handle translation units and unknown fields in the Translation Memory.",
            "enum": [
              "skipTranslationUnit",
              "ignore",
              "addToTranslationMemory",
              "failTranslationUnitImport"
            ],
            "default": "addToTranslationMemory"
          },
          "onlyImportSegmentsWithConfirmationLevels": {
            "description": "Only segments with the these confirmation levels will be imported. Default if the field is not set or null: [translated, approvedSignOff, approvedTranslation]. Empty array will be treated as not specified.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "translated",
                "approvedTranslation",
                "approvedSignOff",
                "draft",
                "rejectedTranslation",
                "rejectedSignOff"
              ]
            }
          }
        },
        "required": [
          "sourceLanguageCode",
          "targetLanguageCode"
        ]
      },
      "translation-memory-import-response": {
        "title": "Translation Memory Import Response",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the import operation."
          },
          "status": {
            "type": "string",
            "description": "The status of the import operation.\n* `queued` - the import has been queued and is waiting to be processed\n* `inProgress` - the import is being processed\n* `failed` - the import has failed due to internal errors\n* `done` - the import has finished successfully\n* `cancelled` - the import has been interrupted",
            "enum": [
              "queued",
              "inProgress",
              "failed",
              "done",
              "cancelled"
            ]
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "translation-memory-import-history-response": {
        "title": "Translation Memory Import History Response",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the import operation."
          },
          "status": {
            "type": "string",
            "description": "The status of the import operation.\n* `queued` - the import has been queued\n* `inPorgress` - the import is being processed\n* `failed` - the import has failed\n* `done` - the import has finished successfully\n* `cancelled` - the import has been cancelled",
            "enum": [
              "queued",
              "inProgress",
              "failed",
              "done",
              "cancelled"
            ]
          },
          "displayName": {
            "type": "string",
            "description": "The assigned name of the import operation."
          },
          "settings": {
            "$ref": "#/components/schemas/translation-memory-import-settings"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The creation date of the import operation. \u003Cbr\u003E UTC Timezone  \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-12T12:00:00.000Z",
            "description": "The last update time of the import operation.  \u003Cbr\u003E UTC Timezone  \u003Cbr\u003E Allowed formats: \u003Cbr\u003E \"YYYY-MM-DDThh:mmZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.ssZ\" \u003Cbr\u003E \"YYYY-MM-DDThh:mm:ss.sss"
          },
          "ownerId": {
            "type": "string",
            "description": "Owner of the import operation, corresponds with the tenant identifier."
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "translation-memory-import-settings": {
        "title": "Translation Memory Import Settings",
        "type": "object",
        "description": "The properties provided by the client, when the Import Operation was triggered.",
        "properties": {
          "onlyImportSegmentsWithConfirmationLevels": {
            "description": "Only segments with the these confirmation levels were be imported.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "translated",
                "approvedTranslation",
                "approvedSignOff",
                "draft",
                "rejectedTranslation",
                "rejectedSignOff"
              ]
            }
          },
          "unknownFieldsOption": {
            "description": "This option describes how were the translation units handled when there were unknown fields in the request.",
            "enum": [
              "skipTranslationUnit",
              "ignore",
              "addToTranslationMemory",
              "failTranslationUnitImport"
            ],
            "type": "string"
          },
          "targetSegmentsDifferOption": {
            "description": "This option describes how were the translation units handled when there were differences in target segments.",
            "enum": [
              "addNew",
              "overwrite",
              "leaveUnchanged",
              "keepMostRecent"
            ],
            "type": "string"
          },
          "importAsPlainText": {
            "description": "This option describes if the translation units were imported as plain text.",
            "type": "boolean"
          },
          "exportInvalidTranslationUnits": {
            "description": "This option describes if the invalid translation units were exported during the original translation memory import operation.",
            "type": "boolean"
          },
          "triggerRecomputeStatistics": {
            "description": "This option describes if fuzzy index statistics were  recomputed after the original import operation.",
            "type": "boolean"
          },
          "fileName": {
            "description": "The name of the file attached to the import request.",
            "type": "string"
          },
          "sourceLanguageCode": {
            "description": "The source language code of the import request.",
            "type": "string"
          },
          "targetLanguageCode": {
            "description": "The target language code of the import request.",
            "type": "string"
          },
          "traceId": {
            "description": "The trace identifier of the import operation.",
            "type": "string"
          }
        },
        "required": [
          "onlyImportSegmentsWithConfirmationLevels",
          "unknownFieldsOption",
          "targetSegmentsDifferOption",
          "importAsPlainText",
          "exportInvalidTranslationUnits",
          "triggerRecomputeStatistics",
          "fileName",
          "sourceLanguageCode",
          "targetLanguageCode",
          "traceId"
        ]
      },
      "translation-memory-export-response": {
        "title": "Translation Memory Export Response",
        "x-stoplight": {
          "id": "ol4kmgwlbdr8f"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The translation memory export identifier."
          },
          "status": {
            "type": "string",
            "description": "The translation memory export status.\n* `queued` - the export has been queued to be processed\n* `inProgress` - the export is being processed\n* `failed` - the export has failed due to internal errors\n* `done` - the export has finished successfully\n* `cancelled` - the export has been interrupted",
            "enum": [
              "queued",
              "inProgress",
              "failed",
              "done",
              "cancelled"
            ]
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "translation-memory-export-language-direction": {
        "title": "Translation Memory Export Language Direction",
        "x-stoplight": {
          "id": "sgv1fy31ffmba"
        },
        "type": "object",
        "description": "",
        "properties": {
          "sourceLanguage": {
            "$ref": "#/components/schemas/source-language-request"
          },
          "targetLanguage": {
            "$ref": "#/components/schemas/target-language-request"
          }
        },
        "required": [
          "sourceLanguage",
          "targetLanguage"
        ]
      },
      "translation-memory-export-request": {
        "title": "Translation Memory Export Request",
        "x-stoplight": {
          "id": "ivlpf7ccfd3is"
        },
        "description": "",
        "type": "object",
        "properties": {
          "languageDirection": {
            "$ref": "#/components/schemas/translation-memory-export-language-direction"
          }
        },
        "required": [
          "languageDirection"
        ]
      },
      "update-translation-memory": {
        "title": "Update Translation Memory",
        "x-stoplight": {
          "id": "7imfj2yp6ndh4"
        },
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/update-translation-memory-settings",
            "description": "The configuration settings for Update Translation Memory\r\n.",
            "x-default-field": true
          }
        },
        "required": [
          "settings"
        ]
      },
      "update-translation-memory-settings": {
        "title": "Update Translation Memory Settings",
        "x-stoplight": {
          "id": "ns9gqapkdazxv"
        },
        "type": "object",
        "properties": {
          "segmentsConfirmationLevels": {
            "type": "array",
            "x-stoplight": {
              "id": "1sf7j3cudjzag"
            },
            "items": {
              "x-stoplight": {
                "id": "7tg40rat3gilo"
              },
              "type": "string",
              "enum": [
                "approvedTranslation",
                "approvedSignOff",
                "draft",
                "notTranslated",
                "translated",
                "rejectedTranslation",
                "rejectedSignOff"
              ]
            },
            "description": "Default values are: \n\r [`translated`, `approvedTranslation`, `approvedSignOff`]."
          },
          "targetSegmentsDifferOption": {
            "type": "string",
            "x-stoplight": {
              "id": "2ndpsnxl5k5qq"
            },
            "enum": [
              "addNew",
              "overwrite",
              "keepMostRecent",
              "leaveUnchanged",
              "merge"
            ],
            "description": "Options:\r\n- `merge`: replace (update) only the TU (from which a match was retrieved for the edited TU) with the latest available translation AND keep the other duplicates as they are. Use this option to have multiple translations for the same source together with Multiple Translation Penalty = 0.\r\n- `addNew`: add translations as new TUs to the TM. Specify the status of the TUs (which will be added) under Segment status. This means that the existing TUs in the TM are not overwritten.\r\n- `overwriteExisting`: delete all TUs (which have the same source, all TU duplicates) and keep only the last added TU (the latest available translation). Use this option to prevent inconsistent translations.\r\n- `leaveUnchanged`: keep the existing TUs and do not add any new ones.\r\n- `keepMostRecent`: replace (update) only the most recent TU (from which a match was retrieved for the edited TU) with the latest available translation AND delete all other duplicates.\r\n",
            "default": "merge"
          }
        },
        "required": [
          "segmentsConfirmationLevels",
          "targetSegmentsDifferOption"
        ]
      },
      "user": {
        "title": "User",
        "type": "object",
        "description": "User in the account.",
        "properties": {
          "id": {
            "type": "string",
            "description": "User account identifier."
          },
          "email": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe user's email address. Retrieved only for RWS ID (formerly SDL ID) users (not service users) that the authenticated entity is authorized to read.\u003C/div\u003E ",
            "x-default-field": true
          },
          "firstName": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe user's first name. Retrieved only for RWS ID (formerly SDL ID) users (not service users) that the authenticated entity is authorized to read.\u003C/div\u003E ",
            "x-default-field": true
          },
          "lastName": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe user's last name. Retrieved only for RWS ID (formerly SDL ID) users (not service users) that the authenticated entity is authorized to read.\u003C/div\u003E ",
            "x-default-field": true
          },
          "anonymized": {
            "type": "boolean",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThis shows if the authenticated entity has access to read the details of the user or not. If true, then the 'anonymizedUserName' should be retrieved.\u003C/div\u003E ",
            "nullable": true,
            "x-default-field": true
          },
          "anonymizedUserName": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003ERetrieved if the authenticated entity does not have access to read the User.\u003C/div\u003E ",
            "x-default-field": true
          },
          "location": {
            "$ref": "#/components/schemas/folder-v2"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/group"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "user-request": {
        "title": "User Request",
        "type": "object",
        "description": "User in the account.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The user identifier."
          },
          "email": {
            "type": "string",
            "description": "User’s email. Retrieved only for RWS ID (formerly SDL ID) users (not service users) that the authenticated entity is authorized to read."
          },
          "firstName": {
            "type": "string",
            "description": "User’s first name. Retrieved only for RWS ID (formerly SDL ID) users (not service users) that the authenticated entity is authorized to read."
          },
          "lastName": {
            "type": "string",
            "description": "User’s last name. Retrieved only for RWS ID (formerly SDL ID) users (not service users) that the authenticated entity is authorized to read."
          },
          "location": {
            "$ref": "#/components/schemas/resource-folder-request"
          },
          "groups": {
            "type": "array",
            "description": "The groups.",
            "items": {
              "$ref": "#/components/schemas/group-request"
            }
          },
          "anonymized": {
            "type": "boolean",
            "description": "Shows if the authenticated entity has access to read the details of the user or not. If true then the ‘anonymizedUserName’ should be retrieved.",
            "nullable": true
          },
          "anonymizedUserName": {
            "type": "string",
            "description": "Retrieved if the authenticated entity does not have access to read the User."
          }
        },
        "required": [
          "id"
        ]
      },
      "vendor-order": {
        "title": "Vendor Order",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "quote": {
            "$ref": "#/components/schemas/quote"
          }
        },
        "required": [
          "id"
        ],
        "description": "A vendor order resource."
      },
      "vendor-order-template-request": {
        "title": "Vendor Order Template Request",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "vendor-order-template": {
        "title": "Vendor Order Template",
        "description": "The vendor order template.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "workflow": {
        "title": "Workflow",
        "type": "object",
        "description": "The steps a project goes through. (Not available for List Projects endpoint)",
        "properties": {
          "id": {
            "type": "string",
            "description": "The workflow identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe workflow name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "The workflow description."
          },
          "location": {
            "$ref": "#/components/schemas/folder"
          },
          "workflowTemplate": {
            "$ref": "#/components/schemas/workflow-template"
          },
          "taskConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflow-task-configuration"
            }
          },
          "languageDirections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/language-direction-no-statistics"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "workflow-task-assignee": {
        "title": "Workflow Task Assignee",
        "type": "object",
        "description": "Task assignee. Based on the \"type\", further details can be retrieved. For ex. for \"type\"=\"user\", \"user\" property is available. For \"projectCreator\" and \"projectManager\" no other property is available.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "user",
              "group",
              "vendorOrderTemplate",
              "projectCreator",
              "projectManager"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/user",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EUser in the account\u003C/div\u003E ",
            "x-default-field": true
          },
          "group": {
            "$ref": "#/components/schemas/group",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EGroup of users.\u003C/div\u003E ",
            "x-default-field": true
          },
          "vendorOrderTemplate": {
            "$ref": "#/components/schemas/vendor-order-template",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EA vendor oder template.\u003C/div\u003E ",
            "x-default-field": true
          }
        },
        "required": [
          "type"
        ]
      },
      "workflow-task-assignee-request": {
        "title": "Workflow Task Assignee Request",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "user",
              "group",
              "vendorOrderTemplate",
              "projectCreator",
              "projectManager"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/user-request"
          },
          "group": {
            "$ref": "#/components/schemas/group-request"
          },
          "vendorOrderTemplate": {
            "$ref": "#/components/schemas/vendor-order-template-request"
          }
        },
        "required": [
          "type"
        ]
      },
      "workflow-task-configuration": {
        "title": "Workflow Task Configuration",
        "type": "object",
        "description": "Properties of a workflow task.",
        "properties": {
          "scope": {
            "$ref": "#/components/schemas/task-configuration-scope"
          },
          "assignees": {
            "$ref": "#/components/schemas/workflow-task-assignee"
          },
          "isSkipped": {
            "type": "boolean",
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "taskTemplate": {
            "$ref": "#/components/schemas/workflow-task-template"
          }
        },
        "required": [
          "scope",
          "taskTemplate"
        ]
      },
      "workflow-phase": {
        "title": "Workflow Phase",
        "type": "object",
        "description": "A set of workflow steps which work together towards a localization outcome.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The phase identfier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe phase name.\u003C/div\u003E ",
            "x-default-field": true
          }
        },
        "required": [
          "id"
        ]
      },
      "workflow-task-configuration-request": {
        "title": "Workflow Task Configuration Request",
        "type": "object",
        "description": "A task configuration request.",
        "properties": {
          "taskTemplate": {
            "$ref": "#/components/schemas/object-id"
          },
          "isSkipped": {
            "type": "boolean"
          },
          "assignees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflow-task-assignee-request"
            }
          },
          "scope": {
            "$ref": "#/components/schemas/task-configuration-scope-request"
          }
        },
        "required": [
          "taskTemplate",
          "isSkipped",
          "assignees",
          "scope"
        ]
      },
      "workflow-task-template": {
        "title": "Workflow Task Template",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The workflow task template identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe workflow task template name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "apiInternalId": {
            "type": "string",
            "x-stoplight": {
              "id": "dd6vytpa9vo41"
            },
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EUnique identifier of workflow task templates\r\n\u003C/div\u003E "
          },
          "description": {
            "type": "string"
          },
          "canSkip": {
            "type": "boolean",
            "nullable": true
          },
          "requiresAssignment": {
            "type": "boolean",
            "nullable": true
          },
          "taskType": {
            "$ref": "#/components/schemas/task-type"
          },
          "phase": {
            "$ref": "#/components/schemas/workflow-phase"
          }
        },
        "required": [
          "id"
        ]
      },
      "workflow-template": {
        "title": "Workflow Template",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The workflow template identifier."
          },
          "name": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003EThe workflow template name.\u003C/div\u003E ",
            "x-default-field": true
          },
          "description": {
            "type": "string",
            "description": "The workflow template description."
          },
          "taskTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflow-task-template"
            }
          },
          "phases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflow-phase"
            }
          },
          "transitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflow-template-transition"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "workflow-template-transition": {
        "title": "Workflow Template Transition",
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/workflow-template-transition-node",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "to": {
            "$ref": "#/components/schemas/workflow-template-transition-node",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "condition": {
            "$ref": "#/components/schemas/workflow-template-transition-condition"
          }
        }
      },
      "workflow-template-transition-condition": {
        "title": "Workflow Template Transition Condition",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "outcome",
              "expression"
            ],
            "nullable": true,
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "value": {
            "type": "string",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "workflow-template-transition-node": {
        "title": "Workflow Template Transition Node",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "taskTemplate",
              "start",
              "end"
            ],
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          },
          "taskTemplate": {
            "$ref": "#/components/schemas/workflow-task-template",
            "description": "\u003Cdiv style=\"display:inline; float:right; color:#008080; margin-top:-23px; font-size:11px\"\u003Edefault\u003C/div\u003E\u003Cdiv style=\"display: inline;\"\u003E\u003C/div\u003E ",
            "x-default-field": true
          }
        }
      },
      "workflow-update-request": {
        "title": "Workflow Update Request",
        "type": "object",
        "description": "A model to update a workflow.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The workflow name."
          },
          "description": {
            "type": "string",
            "description": "The workflow description."
          },
          "taskConfigurations": {
            "type": "array",
            "description": "The task configurations.",
            "items": {
              "$ref": "#/components/schemas/workflow-task-configuration-request"
            }
          }
        }
      }
    },
    "parameters": {
      "export-format": {
        "name": "format",
        "in": "query",
        "schema": {
          "type": "string",
          "default": "native",
          "enum": [
            "native",
            "sdlxliff"
          ]
        },
        "description": "The file format."
      },
      "quote-report-format": {
        "name": "format",
        "in": "query",
        "schema": {
          "type": "string",
          "default": "pdf",
          "enum": [
            "pdf",
            "excel"
          ]
        },
        "description": "The file format of the quote report."
      },
      "X-LC-Tenant": {
        "name": "X-LC-Tenant",
        "in": "header",
        "description": "The identifier of the account where the request is executed.",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "Authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "The bearer access token provided by Auth0.",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "top": {
        "name": "top",
        "in": "query",
        "description": "The number of items to include inside the page.",
        "schema": {
          "maximum": 100,
          "minimum": 1,
          "type": "integer",
          "default": 100
        }
      },
      "skip": {
        "name": "skip",
        "in": "query",
        "description": "The number of items that are skipped to reach the desired page.",
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        }
      },
      "location": {
        "name": "location",
        "in": "query",
        "description": "The identifiers of the resource folders. You can control the behavior by using the 'locationStrategy'. ",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "location-strategy": {
        "name": "locationStrategy",
        "in": "query",
        "description": "Options: \u003Cbr\u003E - `location`: all the resources located strictly in the folders from the 'location' parameter (default); \u003Cbr\u003E - `lineage`: all the resources located in the folders specified in the 'location' parameter, as well as the subfolders; \u003Cbr\u003E - `bloodline`: all the resources located in the folders specified in the 'location' parameter, as well as the ancestor folders; \u003Cbr\u003E - `genealogy`: the resources located in the folders specified in the 'location' parameter together with subfolders and ancestors.",
        "schema": {
          "type": "string",
          "enum": [
            "location",
            "lineage",
            "bloodline",
            "genealogy"
          ]
        }
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "description": "A comma separated list of fields used to sort the resources in the response. Each field can have a unary negative to imply descending sort order.",
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "name": "fields",
        "in": "query",
        "description": "A comma separated list of fields to include in the response.\n        Every value in the list should either consist of a top-level property name (excluding the items envelope for endpoints returning lists) or refer to a property of a top-level property of type object, in the following form: \"toplevelpropertyname.subpropertyname\".\n        When this query parameter is omitted, default resource representations are returned (excluding fields marked as optional). The same applies to nested objects when just specifying the top-level property name, without explicitly listing sub-property names. When specifying the fields query parameter, only the specified fields are returned.\n        The id property is always returned.",
        "schema": {
          "type": "string"
        }
      },
      "customerId": {
        "name": "customerId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The customer identifier."
      },
      "projectId": {
        "name": "projectId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The project identifier."
      },
      "taskId": {
        "name": "taskId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The task identifier."
      },
      "sourceFileId": {
        "name": "sourceFileId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The source file identifier."
      },
      "targetFileId": {
        "name": "targetFileId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The target file identifier."
      },
      "exportId": {
        "name": "exportId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The export identifier."
      },
      "projectTemplateId": {
        "name": "projectTemplateId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The project template identifier."
      },
      "fileVersionId": {
        "name": "fileVersionId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The file version identifier."
      },
      "taskTypeId": {
        "name": "taskTypeId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The task type identifier."
      },
      "workflowId": {
        "name": "workflowId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The workflow identifier."
      },
      "fileProcessingConfigurationId": {
        "name": "fileProcessingConfigurationId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The file processing configuration identifier."
      },
      "translationEngineId": {
        "name": "translationEngineId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The translation engine identifier."
      },
      "pricingModelId": {
        "name": "pricingModelId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The pricing model identifier."
      },
      "folderId": {
        "name": "folderId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The folder identifier."
      },
      "groupId": {
        "name": "groupId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The group identifier."
      },
      "importId": {
        "name": "importId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The import identifier."
      },
      "fileId": {
        "name": "fileId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The file identifier."
      },
      "customFieldDefinitionId": {
        "name": "customFieldDefinitionId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The custom field definition identifier."
      },
      "profileId": {
        "name": "profileId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The profile identifier."
      },
      "language-id": {
        "name": "languageId",
        "in": "query",
        "description": "The language used for localization.",
        "schema": {
          "type": "string",
          "default": "en",
          "enum": [
            "en",
            "de",
            "fr",
            "fr-CA",
            "ja",
            "es",
            "zh-CN",
            "nl",
            "it"
          ]
        }
      },
      "userId": {
        "name": "userId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The user identifier."
      },
      "name": {
        "name": "name",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Filter by name."
      },
      "termbaseTemplateId": {
        "name": "termbaseTemplateId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The termbase template identifier."
      },
      "termbaseId": {
        "name": "termbaseId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The termbase identifier."
      },
      "translationMemoryId": {
        "name": "translationMemoryId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The translation memory identifier."
      },
      "entryId": {
        "name": "entryId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The termbase entry identifier."
      },
      "humanReadableIds": {
        "name": "humanReadableIds",
        "in": "query",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": "Can provide a list of humanReadableId from entries to filter by."
      }
    },
    "headers": {
      "X-LC-TraceId": {
        "required": true,
        "schema": {
          "type": "string",
          "example": "df680285-adcd-4bda-8f79-0bba4a857287"
        },
        "description": "A unique identifier for the request. It should be saved in the logs as it can be used to troubleshoot potential issues. When raising a request for support, it should be provided to help with the investigation."
      }
    }
  }
}