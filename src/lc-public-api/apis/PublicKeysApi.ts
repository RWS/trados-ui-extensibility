/* tslint:disable */
/* eslint-disable */
/**
 * RWS Language Cloud API
 * The RWS Language Cloud public API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Jwk,
} from '../models/index';

export interface GetPublicKeyRequest {
    kid: string;
}

/**
 * 
 */
export class PublicKeysApi extends runtime.BaseAPI {

    /**
     * Retrieves a public key by it\'s identifier.
     * Get Public Key
     */
    async getPublicKeyRaw(requestParameters: GetPublicKeyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Jwk>> {
        if (requestParameters['kid'] == null) {
            throw new runtime.RequiredError(
                'kid',
                'Required parameter "kid" was null or undefined when calling getPublicKey().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/.well-known/jwks.json/{kid}`.replace(`{${"kid"}}`, encodeURIComponent(String(requestParameters['kid']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a public key by it\'s identifier.
     * Get Public Key
     */
    async getPublicKey(requestParameters: GetPublicKeyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Jwk> {
        const response = await this.getPublicKeyRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * List all available Public Keys.
     * List Public Keys
     */
    async listPublicKeysRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Jwk>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/.well-known/jwks.json`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * List all available Public Keys.
     * List Public Keys
     */
    async listPublicKeys(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Jwk>> {
        const response = await this.listPublicKeysRaw(initOverrides);
        return await response.value();
    }

}
