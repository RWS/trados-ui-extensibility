/* tslint:disable */
/* eslint-disable */
/**
 * RWS Language Cloud API
 * The RWS Language Cloud public API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ListMachineTranslationsResponse,
} from '../models/index';

export interface ListMachineTranslationsRequest {
    authorization: string;
    xLCTenant: string;
    sourceLanguage: string;
    targetLanguage: Array<string>;
}

/**
 * 
 */
export class MachineTranslationApi extends runtime.BaseAPI {

    /**
     * Retrieves a list of machine translations that can be used in a translation engine.
     * List Machine Translations
     */
    async listMachineTranslationsRaw(requestParameters: ListMachineTranslationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListMachineTranslationsResponse>> {
        if (requestParameters['authorization'] == null) {
            throw new runtime.RequiredError(
                'authorization',
                'Required parameter "authorization" was null or undefined when calling listMachineTranslations().'
            );
        }

        if (requestParameters['xLCTenant'] == null) {
            throw new runtime.RequiredError(
                'xLCTenant',
                'Required parameter "xLCTenant" was null or undefined when calling listMachineTranslations().'
            );
        }

        if (requestParameters['sourceLanguage'] == null) {
            throw new runtime.RequiredError(
                'sourceLanguage',
                'Required parameter "sourceLanguage" was null or undefined when calling listMachineTranslations().'
            );
        }

        if (requestParameters['targetLanguage'] == null) {
            throw new runtime.RequiredError(
                'targetLanguage',
                'Required parameter "targetLanguage" was null or undefined when calling listMachineTranslations().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['sourceLanguage'] != null) {
            queryParameters['sourceLanguage'] = requestParameters['sourceLanguage'];
        }

        if (requestParameters['targetLanguage'] != null) {
            queryParameters['targetLanguage'] = requestParameters['targetLanguage'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['authorization'] != null) {
            headerParameters['Authorization'] = String(requestParameters['authorization']);
        }

        if (requestParameters['xLCTenant'] != null) {
            headerParameters['X-LC-Tenant'] = String(requestParameters['xLCTenant']);
        }

        const response = await this.request({
            path: `/machine-translation`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a list of machine translations that can be used in a translation engine.
     * List Machine Translations
     */
    async listMachineTranslations(requestParameters: ListMachineTranslationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListMachineTranslationsResponse> {
        const response = await this.listMachineTranslationsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
